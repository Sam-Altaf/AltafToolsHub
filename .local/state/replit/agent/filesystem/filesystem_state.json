{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# AltafToolsHub - Privacy-First File Processing Tools\n\n## Overview\n\nAltafToolsHub is a comprehensive web application offering privacy-first file processing and utility tools. All file processing happens 100% client-side, ensuring complete privacy as files never leave the user's browser. The platform features PDF tools (compression with intelligent target sizes, password unlocking, JPG to PDF conversion) and utility tools (QR code generator, password generator, OCR text extraction). Built with React 18 and Express, it provides a modern, responsive interface with dark/light mode support, professional animations, and SEO optimization for 2025. The platform currently offers 6 fully functional tools with 50+ more planned.\n\n## Recent Updates (September 2025)\n\n### Major Features Added\n- **Comprehensive Website Enhancement (September 2025)**: Completed 6-phase professional website transformation including UI consistency fixes, comparison tables, contact support sections on all 16 tool pages, 4-column footer redesign, performance/SEO optimizations, and new FAQ/Blog pages. Mobile-first design with no horizontal scrolling and 44px touch targets.\n- **Removed Low-Competition Tools (September 2025)**: Removed File Calculator, Text Enhancer, and Word Counter due to low search volume and heavy competition. Focus shifted to high-value PDF and utility tools with better SEO potential.\n- **All Tools Page with Available Filter (September 2025)**: Created comprehensive All Tools section with filters for categories including new \"Available Tools\" filter, availability status (Available/Coming Soon), search, and view modes (grid/list). Added to main navigation for easy discovery.\n- **Available Tools Section on Homepage (September 2025)**: Added dedicated \"Available Tools\" section on homepage showing 6 ready-to-use tools with \"View All Available Tools\" button linking to filtered All Tools page for better user journey.\n- **Enhanced Tool Descriptions (September 2025)**: Added extended descriptions and feature lists to all available tools for better UI/UX and SEO optimization. Tool cards now display rich content including features and category information.\n- **Highest Quality PDF Compression (September 2025)**: Enhanced PDF compressor with \"Highest Quality\" mode featuring maximum text clarity using 0.92-0.99 JPEG quality and 0.96-1.0 scale for superior text readability\n- **PDF Compressor Complete Fix (January 2025)**: Rebuilt with PDF.js canvas-based compression, real progress bar, exact target size achievement through binary search, and local worker for true offline/privacy\n- **Password Toggle**: Show/hide password functionality for PDF unlocker with eye icon\n- **Complete UI/UX Redesign**: Modern gradient theme with glass morphism effects, uniform card layouts, and professional animations\n- **Custom Logo**: Hexagonal hub design with integrated tool icons representing the multi-tool nature of the platform\n- **Dark/Light Mode**: Complete theme system with system preference detection and persistence\n- **Responsive Navigation**: Mobile-optimized hamburger menu and desktop navigation with dropdowns\n- **Privacy Compliance**: Cookie consent popup, comprehensive privacy policy, and terms of service pages\n- **New Tools Added**: QR Code Generator, Password Generator, and Word Counter - all with 100% client-side processing\n- **SEO Optimization**: Complete 2025 SEO implementation with structured data, meta tags, sitemap, and performance optimizations\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React 18 with TypeScript for type safety and modern development\n- **Routing**: Wouter for lightweight client-side routing\n- **Styling**: Tailwind CSS with custom design system based on shadcn/ui components\n- **State Management**: TanStack Query (React Query) for server state management\n- **UI Components**: Radix UI primitives with custom styling for accessibility and consistency\n- **Build Tool**: Vite for fast development and optimized production builds\n\n### Backend Architecture\n- **Runtime**: Node.js with Express.js framework\n- **Language**: TypeScript for full-stack type safety\n- **API Design**: RESTful API structure with /api prefix routing\n- **Development**: Hot module reloading with Vite integration in development mode\n- **Storage Interface**: Modular storage abstraction with in-memory implementation\n\n### Design System\n- **Color Scheme**: Modern gradient-based theme (Purple #8B5CF6 to Blue #3B82F6 to Cyan #06B6D4), Teal accents (#14B8A6)\n- **Visual Effects**: Glass morphism effects with backdrop blur for modern aesthetic\n- **Typography**: Inter font family with fluid responsive sizes - H1 (4xl-6xl), H2 (2xl-4xl), H3 (xl-2xl), body (base)\n- **Components**: shadcn/ui component library with custom gradient theming and animations, comparison tables, contact support sections\n- **Responsive Design**: Mobile-first approach with breakpoints at 640px, 768px, 1024px, 1280px, minimum 44px touch targets\n- **Theme System**: Dark/light mode with system preference detection and localStorage persistence\n- **Logo**: Custom hexagonal hub design with integrated tool icons and gradient colors\n- **Layout**: Standardized cards (p-6, rounded-lg), container sections, no horizontal scrolling, text truncation utilities\n\n### Database Integration\n- **ORM**: Drizzle ORM for type-safe database operations\n- **Database**: PostgreSQL with Neon Database serverless driver\n- **Schema Management**: Centralized schema definitions in shared directory\n- **Migrations**: Drizzle Kit for database migration management\n\n### File Processing Strategy\n- **Privacy Focus**: Client-side processing to ensure files never leave user's browser\n- **File Handling**: Browser-based file manipulation without server uploads\n- **Security**: No server-side file storage or processing for maximum privacy\n- **PDF Compression**: Canvas-based compression using PDF.js with exact target size options (10KB-5MB) through binary search algorithm, converts to optimized images for maximum compression\n- **Password Features**: PDF unlocking with password show/hide toggle\n- **Image Conversion**: Multiple JPG to PDF conversion with reordering support\n\n## External Dependencies\n\n### Core Framework Dependencies\n- **@vitejs/plugin-react**: React plugin for Vite build system\n- **wouter**: Lightweight routing library for React applications\n- **@tanstack/react-query**: Server state management and caching\n\n### UI and Styling\n- **@radix-ui/***: Comprehensive set of accessible UI primitives\n- **tailwindcss**: Utility-first CSS framework for styling\n- **class-variance-authority**: Utility for creating variant-based component APIs\n- **lucide-react**: Icon library for consistent iconography\n\n### Database and Backend\n- **drizzle-orm**: Type-safe ORM for database operations\n- **@neondatabase/serverless**: Serverless PostgreSQL driver\n- **drizzle-kit**: Database migration and schema management tools\n- **express**: Web application framework for Node.js\n\n### Development Tools\n- **typescript**: Static type checking for JavaScript\n- **@replit/vite-plugin-***: Replit-specific development enhancements\n- **esbuild**: Fast JavaScript bundler for production builds\n\n### Form and Validation\n- **react-hook-form**: Performant forms with easy validation\n- **@hookform/resolvers**: Validation resolver for react-hook-form\n- **zod**: TypeScript-first schema validation library\n\n### Utility Libraries\n- **date-fns**: Modern JavaScript date utility library\n- **clsx**: Utility for constructing className strings conditionally\n- **nanoid**: URL-safe unique string ID generator\n- **framer-motion**: Professional animation library for React\n- **qrcode**: Client-side QR code generation\n- **pdf-lib**: PDF manipulation library for client-side processing\n- **pdfjs-dist**: PDF.js library for rendering and processing PDFs","size_bytes":7900},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2755},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n          await import(\"@replit/vite-plugin-dev-banner\").then((m) =>\n            m.devBanner(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":1080},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\"\n  }, () => {\n  log(`Server running at http://0.0.0.0:${port}`);\n  });\n})();\n","size_bytes":2059},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // put application routes here\n  // prefix all routes with /api\n\n  // use storage to perform CRUD operations on the storage interface\n  // e.g. storage.insertUser(user) or storage.getUserByUsername(username)\n\n  const httpServer = createServer(app);\n\n  return httpServer;\n}\n","size_bytes":473},"server/storage.ts":{"content":"import { type User, type InsertUser } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n\n  constructor() {\n    this.users = new Map();\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":993},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\n","size_bytes":584},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { ThemeProvider } from \"@/contexts/theme-context\";\nimport { ReducedMotionProvider } from \"@/components/reduced-motion-provider\";\nimport ScrollToTop from \"@/components/scroll-to-top\";\nimport NotFound from \"@/pages/not-found\";\nimport NavigationMemory from \"@/components/navigation-memory\";\nimport Home from \"@/pages/home\";\nimport AllTools from \"@/pages/all-tools\";\nimport CompressPDF from \"@/pages/compress-pdf\";\nimport UnlockPDF from \"@/pages/unlock-pdf\";\nimport JpgToPDF from \"@/pages/jpg-to-pdf\";\nimport QRGenerator from \"@/pages/qr-generator\";\nimport PasswordGenerator from \"@/pages/password-generator\";\nimport ExtractText from \"@/pages/extract-text\";\nimport MergePDF from \"@/pages/merge-pdf\";\nimport SplitPDF from \"@/pages/split-pdf\";\nimport RotatePDF from \"@/pages/rotate-pdf\";\nimport OrganizePDF from \"@/pages/organize-pdf\";\nimport RemovePages from \"@/pages/remove-pages\";\nimport CropPDF from \"@/pages/crop-pdf\";\nimport ExtractPages from \"@/pages/extract-pages\";\nimport ExtractImages from \"@/pages/extract-images\";\nimport AddPageNumber from \"@/pages/add-page-number\";\nimport WatermarkPDF from \"@/pages/watermark-pdf\";\nimport PrivacyPolicy from \"@/pages/privacy-policy\";\nimport TermsConditions from \"@/pages/terms-conditions\";\nimport FAQ from \"@/pages/faq\";\nimport Blog from \"@/pages/blog\";\nimport Documentation from \"@/pages/documentation\";\nimport Header from \"@/components/layout/header\";\nimport Footer from \"@/components/layout/footer\";\nimport CookieConsent from \"@/components/cookie-consent\";\n\nfunction Router() {\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <NavigationMemory />\n      <ScrollToTop />\n      <Header />\n      <div className=\"flex-1\">\n        <Switch>\n          <Route path=\"/\" component={Home} />\n          <Route path=\"/all-tools\" component={AllTools} />\n          <Route path=\"/compress-pdf\" component={CompressPDF} />\n          <Route path=\"/unlock-pdf\" component={UnlockPDF} />\n          <Route path=\"/jpg-to-pdf\" component={JpgToPDF} />\n          <Route path=\"/qr-generator\" component={QRGenerator} />\n          <Route path=\"/password-generator\" component={PasswordGenerator} />\n          <Route path=\"/extract-text\" component={ExtractText} />\n          <Route path=\"/merge-pdf\" component={MergePDF} />\n          <Route path=\"/split-pdf\" component={SplitPDF} />\n          <Route path=\"/rotate-pdf\" component={RotatePDF} />\n          <Route path=\"/organize-pdf\" component={OrganizePDF} />\n          <Route path=\"/remove-pages\" component={RemovePages} />\n          <Route path=\"/crop-pdf\" component={CropPDF} />\n          <Route path=\"/extract-pages\" component={ExtractPages} />\n          <Route path=\"/extract-images\" component={ExtractImages} />\n          <Route path=\"/add-page-number\" component={AddPageNumber} />\n          <Route path=\"/watermark-pdf\" component={WatermarkPDF} />\n          <Route path=\"/privacy\" component={PrivacyPolicy} />\n          <Route path=\"/privacy-policy\" component={PrivacyPolicy} />\n          <Route path=\"/terms\" component={TermsConditions} />\n          <Route path=\"/terms-conditions\" component={TermsConditions} />\n          <Route path=\"/faq\" component={FAQ} />\n          <Route path=\"/blog\" component={Blog} />\n          <Route path=\"/documentation\" component={Documentation} />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider>\n        <ReducedMotionProvider>\n          <TooltipProvider>\n            <Toaster />\n            <CookieConsent />\n            <Router />\n          </TooltipProvider>\n        </ReducedMotionProvider>\n      </ThemeProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":4014},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap');\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  /* Modern Light Theme */\n  --background: hsl(0, 0%, 98%);\n  --foreground: hsl(224, 71%, 4%);\n  --card: hsl(0, 0%, 100%);\n  --card-foreground: hsl(224, 71%, 4%);\n  --popover: hsl(0, 0%, 100%);\n  --popover-foreground: hsl(224, 71%, 4%);\n  --primary: hsl(263, 70%, 65%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(174, 72%, 50%);\n  --secondary-foreground: hsl(0, 0%, 100%);\n  --muted: hsl(220, 14%, 96%);\n  --muted-foreground: hsl(220, 9%, 46%);\n  --accent: hsl(217, 91%, 60%);\n  --accent-foreground: hsl(0, 0%, 100%);\n  --destructive: hsl(0, 84%, 60%);\n  --destructive-foreground: hsl(0, 0%, 98%);\n  --border: hsl(214, 32%, 91%);\n  --input: hsl(214, 32%, 91%);\n  --ring: hsl(263, 70%, 65%);\n  --chart-1: hsl(203, 88%, 53%);\n  --chart-2: hsl(160, 100%, 36%);\n  --chart-3: hsl(42, 93%, 56%);\n  --chart-4: hsl(147, 79%, 42%);\n  --chart-5: hsl(341, 75%, 51%);\n  --sidebar: hsl(0, 0%, 100%);\n  --sidebar-foreground: hsl(224, 71%, 4%);\n  --sidebar-primary: hsl(263, 70%, 65%);\n  --sidebar-primary-foreground: hsl(0, 0%, 100%);\n  --sidebar-accent: hsl(217, 91%, 95%);\n  --sidebar-accent-foreground: hsl(224, 71%, 4%);\n  --sidebar-border: hsl(214, 32%, 91%);\n  --sidebar-ring: hsl(263, 70%, 65%);\n  --font-sans: 'Inter', sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: Menlo, monospace;\n  --radius: 0.75rem;\n  --radius-sm: 0.5rem;\n  --radius-lg: 1rem;\n}\n\n.dark {\n  /* Modern Dark Theme */\n  --background: hsl(224, 71%, 4%);\n  --foreground: hsl(210, 40%, 98%);\n  --card: hsl(222, 47%, 11%);\n  --card-foreground: hsl(210, 40%, 98%);\n  --popover: hsl(222, 47%, 11%);\n  --popover-foreground: hsl(210, 40%, 98%);\n  --primary: hsl(263, 70%, 65%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(174, 72%, 50%);\n  --secondary-foreground: hsl(0, 0%, 100%);\n  --muted: hsl(217, 33%, 17%);\n  --muted-foreground: hsl(215, 20%, 65%);\n  --accent: hsl(217, 91%, 60%);\n  --accent-foreground: hsl(0, 0%, 100%);\n  --destructive: hsl(0, 63%, 51%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(217, 33%, 17%);\n  --input: hsl(217, 33%, 17%);\n  --ring: hsl(263, 70%, 65%);\n  --chart-1: hsl(203, 88%, 53%);\n  --chart-2: hsl(160, 100%, 36%);\n  --chart-3: hsl(42, 93%, 56%);\n  --chart-4: hsl(147, 79%, 42%);\n  --chart-5: hsl(341, 75%, 51%);\n  --sidebar: hsl(222, 47%, 11%);\n  --sidebar-foreground: hsl(210, 40%, 98%);\n  --sidebar-primary: hsl(263, 70%, 65%);\n  --sidebar-primary-foreground: hsl(0, 0%, 100%);\n  --sidebar-accent: hsl(217, 91%, 15%);\n  --sidebar-accent-foreground: hsl(210, 40%, 98%);\n  --sidebar-border: hsl(217, 33%, 17%);\n  --sidebar-ring: hsl(263, 70%, 65%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  /* Global smooth scrolling */\n  html {\n    scroll-behavior: smooth;\n    scroll-padding-top: 5rem; /* Account for sticky header */\n  }\n\n  /* Respect reduced motion preferences */\n  @media (prefers-reduced-motion: reduce) {\n    html {\n      scroll-behavior: auto;\n    }\n    \n    *,\n    *::before,\n    *::after {\n      animation-duration: 0.01ms !important;\n      animation-iteration-count: 1 !important;\n      transition-duration: 0.01ms !important;\n      scroll-behavior: auto !important;\n    }\n    \n    /* Disable specific animations that could cause motion sickness */\n    .hero-gradient::before,\n    .hero-gradient::after,\n    .hero-circuit {\n      animation: none !important;\n    }\n    \n    /* Still allow focus and hover states but without transitions */\n    button:focus-visible,\n    a:focus-visible,\n    [tabindex]:focus-visible {\n      outline: 2px solid hsl(var(--ring));\n      outline-offset: 2px;\n      transition: none;\n    }\n  }\n\n  /* User-controlled reduced motion via data attribute */\n  [data-reduced-motion=\"true\"] *,\n  [data-reduced-motion=\"true\"] *::before,\n  [data-reduced-motion=\"true\"] *::after {\n    animation: none !important;\n    transition: none !important;\n    transition-duration: 0ms !important;\n    transition-delay: 0ms !important;\n    scroll-behavior: auto !important;\n    transform: none !important;\n  }\n  \n  /* Disable hover transformations when reduced motion is active */\n  [data-reduced-motion=\"true\"] .group-hover\\\\:scale-110,\n  [data-reduced-motion=\"true\"] .group-hover\\\\:scale-105,\n  [data-reduced-motion=\"true\"] .group-hover\\\\:rotate-3,\n  [data-reduced-motion=\"true\"] .hover\\\\:scale-105,\n  [data-reduced-motion=\"true\"] .hover\\\\:scale-110 {\n    transform: none !important;\n  }\n  \n  [data-reduced-motion=\"true\"] .hero-gradient::before,\n  [data-reduced-motion=\"true\"] .hero-gradient::after,\n  [data-reduced-motion=\"true\"] .hero-circuit {\n    animation: none !important;\n  }\n  \n  /* Disable all Tailwind animations when reduced motion is active */\n  [data-reduced-motion=\"true\"] .animate-pulse,\n  [data-reduced-motion=\"true\"] .animate-bounce,\n  [data-reduced-motion=\"true\"] .animate-spin,\n  [data-reduced-motion=\"true\"] .animate-ping,\n  [data-reduced-motion=\"true\"] .animate-blob,\n  [data-reduced-motion=\"true\"] .animate-float,\n  [data-reduced-motion=\"true\"] .animate-float-delayed {\n    animation: none !important;\n  }\n  \n  /* Enhanced system preference rules */\n  @media (prefers-reduced-motion: reduce) {\n    *,\n    *::before,\n    *::after {\n      animation: none !important;\n      transition-duration: 0ms !important;\n      transition-delay: 0ms !important;\n      scroll-behavior: auto !important;\n    }\n    \n    .animate-pulse,\n    .animate-bounce,\n    .animate-spin,\n    .animate-ping,\n    .animate-blob,\n    .animate-float,\n    .animate-float-delayed {\n      animation: none !important;\n    }\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n    min-height: 100vh;\n    font-feature-settings: \"kern\" 1;\n    text-rendering: optimizeLegibility;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n  \n  /* Typography hierarchy - Mobile-first fluid responsive sizing */\n  h1 {\n    @apply text-4xl sm:text-5xl lg:text-6xl font-bold tracking-tight;\n    line-height: 1.1;\n  }\n  \n  h2 {\n    @apply text-2xl sm:text-3xl lg:text-4xl font-semibold tracking-tight;\n    line-height: 1.2;\n  }\n  \n  h3 {\n    @apply text-xl sm:text-2xl font-semibold;\n    line-height: 1.3;\n  }\n  \n  h4 {\n    @apply text-lg sm:text-xl font-medium;\n    line-height: 1.4;\n  }\n  \n  p {\n    @apply text-base leading-relaxed;\n  }\n  \n  /* Ensure minimum touch target size on mobile for interactive elements */\n  button, \n  a[role=\"button\"], \n  [data-testid*=\"button\"], \n  [data-testid*=\"link\"],\n  .btn {\n    min-height: 44px;\n    min-width: 44px;\n    touch-action: manipulation;\n  }\n  \n  @media (min-width: 640px) {\n    button, \n    a[role=\"button\"], \n    [data-testid*=\"button\"], \n    [data-testid*=\"link\"],\n    .btn {\n      min-height: 40px;\n      min-width: 40px;\n    }\n  }\n  \n  /* Card standardization */\n  .card-standard {\n    @apply p-6 rounded-lg;\n  }\n  \n  /* Text truncation utilities */\n  .truncate-2 {\n    overflow: hidden;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n  }\n  \n  .truncate-3 {\n    overflow: hidden;\n    display: -webkit-box;\n    -webkit-line-clamp: 3;\n    -webkit-box-orient: vertical;\n  }\n  \n  /* Container utilities for consistent spacing */\n  .container-section {\n    @apply container mx-auto px-4;\n  }\n  \n  /* Grid layouts - mobile-first */\n  .grid-responsive {\n    @apply grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6;\n  }\n  \n  .grid-tools {\n    @apply grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6;\n  }\n  \n  /* Prevent horizontal overflow */\n  html, body {\n    overflow-x: hidden;\n    max-width: 100vw;\n  }\n  \n  main, section {\n    overflow-x: hidden;\n  }\n  \n  /* Fix for mobile viewport units */\n  @supports (height: 100dvh) {\n    .min-h-screen {\n      min-height: 100dvh;\n    }\n  }\n}\n\n/* Custom Scrollbar Styles */\n.scrollbar-thin {\n  scrollbar-width: thin;\n}\n\n.scrollbar-thumb-primary\\/20 {\n  scrollbar-color: rgba(var(--primary), 0.2) transparent;\n}\n\n/* Enhanced Webkit Scrollbar Styles */\n.scrollbar-thin::-webkit-scrollbar,\n.custom-scrollbar::-webkit-scrollbar {\n  width: 10px;\n  height: 10px;\n}\n\n.scrollbar-thin::-webkit-scrollbar-track,\n.custom-scrollbar::-webkit-scrollbar-track {\n  background: transparent;\n  border-radius: 10px;\n}\n\n.scrollbar-thin::-webkit-scrollbar-thumb,\n.custom-scrollbar::-webkit-scrollbar-thumb {\n  background: linear-gradient(135deg, rgba(139, 92, 246, 0.3), rgba(59, 130, 246, 0.2));\n  border-radius: 10px;\n  border: 2px solid transparent;\n  background-clip: padding-box;\n  transition: all 0.3s ease;\n}\n\n.scrollbar-thin::-webkit-scrollbar-thumb:hover,\n.custom-scrollbar::-webkit-scrollbar-thumb:hover {\n  background: linear-gradient(135deg, rgba(139, 92, 246, 0.5), rgba(59, 130, 246, 0.4));\n  box-shadow: 0 0 10px rgba(139, 92, 246, 0.2);\n}\n\n/* Custom scrollbar for dark mode */\n.dark .custom-scrollbar::-webkit-scrollbar-thumb {\n  background: linear-gradient(135deg, rgba(139, 92, 246, 0.4), rgba(59, 130, 246, 0.3));\n}\n\n.dark .custom-scrollbar::-webkit-scrollbar-thumb:hover {\n  background: linear-gradient(135deg, rgba(139, 92, 246, 0.6), rgba(59, 130, 246, 0.5));\n}\n\n/* Glass morphism effects */\n.glass {\n  @apply bg-white/80 backdrop-blur-xl border border-gray-200/50;\n}\n\n.glass-dark {\n  @apply bg-gray-900/80 backdrop-blur-xl border border-gray-800/50;\n}\n\n.dark .glass {\n  @apply bg-gray-900/80 backdrop-blur-xl border border-gray-800/50;\n}\n\n/* Gradient utilities */\n.gradient-primary {\n  background: linear-gradient(135deg, #8B5CF6 0%, #3B82F6 100%);\n}\n\n.gradient-primary-hover {\n  background: linear-gradient(135deg, #7C3AED 0%, #2563EB 100%);\n}\n\n.gradient-secondary {\n  background: linear-gradient(135deg, #14B8A6 0%, #0D9488 100%);\n}\n\n.gradient-text {\n  background: linear-gradient(135deg, #8B5CF6 0%, #3B82F6 100%);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n}\n\n/* Premium button gradient with enhanced effects */\n.btn-gradient {\n  background: linear-gradient(135deg, #8B5CF6 0%, #3B82F6 100%);\n  transition: all 0.3s ease;\n  position: relative;\n  overflow: hidden;\n  box-shadow: \n    0 4px 15px 0 rgba(139, 92, 246, 0.3),\n    inset 0 1px 0 0 rgba(255, 255, 255, 0.2);\n}\n\n.btn-gradient::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\n  transition: left 0.5s ease;\n}\n\n.btn-gradient:hover {\n  background: linear-gradient(135deg, #7C3AED 0%, #2563EB 100%);\n  transform: translateY(-2px) scale(1.02);\n  box-shadow: \n    0 7px 25px -5px rgba(139, 92, 246, 0.5),\n    0 15px 35px -10px rgba(59, 130, 246, 0.3),\n    inset 0 1px 0 0 rgba(255, 255, 255, 0.3);\n}\n\n.btn-gradient:hover::before {\n  left: 100%;\n}\n\n.btn-gradient:active {\n  transform: translateY(0) scale(1);\n}\n\n.gradient-text-secondary {\n  background: linear-gradient(135deg, #14B8A6 0%, #0D9488 100%);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n}\n\n/* Dark Techy Hero Gradient with Professional Animation */\n.hero-gradient {\n  background: #000000;\n  background: linear-gradient(180deg, #000000 0%, #001133 50%, #000511 100%);\n  position: relative;\n  overflow: hidden;\n  z-index: 1 !important; /* Very low to stay below navigation */\n  isolation: isolate; /* Create new stacking context to prevent interference */\n}\n\n/* Animated Tech Grid Pattern */\n.hero-gradient::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-image: \n    linear-gradient(rgba(0, 136, 255, 0.03) 2px, transparent 2px),\n    linear-gradient(90deg, rgba(0, 136, 255, 0.03) 2px, transparent 2px);\n  background-size: 100px 100px;\n  animation: gridSlide 20s linear infinite;\n  z-index: 0 !important; /* Below hero content */\n  pointer-events: none;\n}\n\n/* Glowing Blue Energy Orbs */\n.hero-gradient::after {\n  content: '';\n  position: absolute;\n  top: -50%;\n  left: -50%;\n  right: -50%;\n  bottom: -50%;\n  background: \n    radial-gradient(circle at 20% 50%, rgba(0, 136, 255, 0.15), transparent 50%),\n    radial-gradient(circle at 80% 80%, rgba(0, 102, 204, 0.1), transparent 50%),\n    radial-gradient(circle at 40% 20%, rgba(0, 168, 255, 0.1), transparent 50%),\n    radial-gradient(circle at 70% 40%, rgba(0, 128, 255, 0.08), transparent 50%);\n  animation: techPulse 15s ease-in-out infinite;\n  z-index: 0 !important; /* Below hero content */\n  pointer-events: none;\n  filter: blur(40px);\n}\n\n/* Tech Circuit Lines Animation */\n.hero-circuit {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 0 !important; /* Below hero content */\n  opacity: 0.3;\n  background-image: \n    repeating-linear-gradient(\n      90deg,\n      transparent,\n      transparent 200px,\n      rgba(0, 136, 255, 0.1) 200px,\n      rgba(0, 136, 255, 0.1) 201px\n    ),\n    repeating-linear-gradient(\n      0deg,\n      transparent,\n      transparent 200px,\n      rgba(0, 136, 255, 0.1) 200px,\n      rgba(0, 136, 255, 0.1) 201px\n    );\n  animation: circuitFlow 10s linear infinite;\n  pointer-events: none;\n}\n\n@keyframes gridSlide {\n  0% { transform: translate(0, 0); }\n  100% { transform: translate(100px, 100px); }\n}\n\n@keyframes techPulse {\n  0%, 100% { \n    transform: scale(1) rotate(0deg);\n    filter: blur(40px) brightness(1);\n  }\n  25% {\n    transform: scale(1.1) rotate(90deg);\n    filter: blur(45px) brightness(1.2);\n  }\n  50% { \n    transform: scale(1.05) rotate(180deg);\n    filter: blur(35px) brightness(1.1);\n  }\n  75% {\n    transform: scale(0.95) rotate(270deg);\n    filter: blur(50px) brightness(0.9);\n  }\n}\n\n@keyframes circuitFlow {\n  0% { \n    transform: translateX(0);\n    opacity: 0.3;\n  }\n  50% {\n    opacity: 0.5;\n  }\n  100% { \n    transform: translateX(20px);\n    opacity: 0.3;\n  }\n}\n\n/* Hero Content with Enhanced Visibility */\n.hero-content {\n  position: relative;\n  z-index: 2 !important; /* Above animations but below header */\n  color: #ffffff;\n}\n\n/* Enhanced Text with Blue Glow */\n.hero-content h1 {\n  text-shadow: \n    0 0 20px rgba(0, 168, 255, 0.5),\n    0 0 40px rgba(0, 168, 255, 0.3),\n    0 0 60px rgba(0, 168, 255, 0.1);\n}\n\n.hero-content h2 {\n  text-shadow: 0 0 15px rgba(0, 168, 255, 0.3);\n}\n\n.hero-content p {\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);\n  color: rgba(255, 255, 255, 0.9);\n}\n\n/* Blue Gradient Buttons for Hero */\n.hero-btn-primary {\n  background: linear-gradient(135deg, #0066cc 0%, #00a8ff 100%);\n  box-shadow: \n    0 4px 20px rgba(0, 168, 255, 0.4),\n    inset 0 1px 0 rgba(255, 255, 255, 0.2);\n  transition: all 0.3s ease;\n  position: relative;\n  overflow: hidden;\n}\n\n.hero-btn-primary::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\n  transition: left 0.5s ease;\n}\n\n.hero-btn-primary:hover {\n  background: linear-gradient(135deg, #0052a3 0%, #0095e8 100%);\n  transform: translateY(-2px) scale(1.02);\n  box-shadow: \n    0 6px 30px rgba(0, 168, 255, 0.6),\n    0 12px 48px rgba(0, 102, 204, 0.3),\n    inset 0 1px 0 rgba(255, 255, 255, 0.3);\n}\n\n.hero-btn-primary:hover::before {\n  left: 100%;\n}\n\n/* Secondary Button with Blue Theme */\n.hero-btn-secondary {\n  background: rgba(0, 136, 255, 0.1);\n  border: 2px solid rgba(0, 168, 255, 0.5);\n  color: #00a8ff;\n  transition: all 0.3s ease;\n}\n\n.hero-btn-secondary:hover {\n  background: rgba(0, 136, 255, 0.2);\n  border-color: #00a8ff;\n  box-shadow: 0 4px 20px rgba(0, 168, 255, 0.3);\n  transform: translateY(-2px);\n}\n\n/* Floating animation for decorative elements */\n@keyframes float {\n  0%, 100% { transform: translateY(0px) rotate(0deg); }\n  33% { transform: translateY(-10px) rotate(1deg); }\n  66% { transform: translateY(10px) rotate(-1deg); }\n}\n\n@keyframes float-delayed {\n  0%, 100% { transform: translateY(0px) translateX(0px); }\n  25% { transform: translateY(-15px) translateX(5px); }\n  50% { transform: translateY(5px) translateX(-5px); }\n  75% { transform: translateY(-5px) translateX(10px); }\n}\n\n/* Blob animation for background shapes */\n@keyframes blob {\n  0%, 100% { transform: translate(0px, 0px) scale(1); }\n  33% { transform: translate(30px, -50px) scale(1.1); }\n  66% { transform: translate(-20px, 20px) scale(0.9); }\n}\n\n.animate-blob {\n  animation: blob 7s infinite;\n}\n\n.animation-delay-2000 {\n  animation-delay: 2s;\n}\n\n.animation-delay-4000 {\n  animation-delay: 4s;\n}\n\n/* Fixed Navigation z-index - Ensure dropdowns appear above everything */\nheader {\n  position: sticky !important;\n  top: 0;\n  z-index: 10000 !important; /* High z-index for header but not maximum (dropdown needs to be above) */\n  isolation: isolate !important; /* Create new stacking context */\n}\n\n/* Force dropdown container to highest level */\n.multi-dropdown-container {\n  position: relative !important;\n  isolation: isolate !important; /* Create new stacking context */\n}\n\n/* Dropdown Menu Z-Index Fix - Maximum possible values */\n.dropdown-menu-container {\n  z-index: 2147483647 !important; /* Maximum possible z-index value */\n  position: absolute !important;\n  isolation: isolate !important;\n}\n\n.dropdown-menu-content {\n  z-index: 2147483647 !important; /* Maximum possible z-index for content */\n  position: relative !important;\n  background: var(--background) !important; /* Ensure proper background */\n}\n\n/* Navigation z-index fixes to ensure dropdowns appear above all content */\n[data-radix-navigation-menu] {\n  z-index: 2147483647 !important;\n}\n\n[data-radix-popper-content] {\n  z-index: 2147483647 !important;\n}\n\n/* Ensure navigation viewport and content have proper z-index */\n[data-radix-navigation-menu-viewport] {\n  z-index: 2147483647 !important;\n}\n\n[data-radix-navigation-menu-content] {\n  z-index: 2147483647 !important;\n}\n\n/* Ensure dropdowns are always on top */\n.navigation-menu {\n  z-index: 2147483647 !important;\n}\n\n.navigation-menu-content {\n  z-index: 2147483647 !important;\n}\n\n/* Global dropdown fix - ensure all dropdown containers are on top */\n.dropdown-menu,\n.dropdown-content,\n[role=\"menu\"],\n[data-state=\"open\"] {\n  z-index: 2147483647 !important;\n}\n\n/* Sparkle animation */\n@keyframes sparkle {\n  0%, 100% { opacity: 0; transform: scale(0); }\n  50% { opacity: 1; transform: scale(1); }\n}\n\n.animate-sparkle {\n  animation: sparkle 3s ease-in-out infinite;\n}\n\n/* Shimmer animation for dropdown headers */\n@keyframes shimmer-slow {\n  0% { transform: translateX(-200%); }\n  100% { transform: translateX(200%); }\n}\n\n.animate-shimmer-slow {\n  animation: shimmer-slow 4s ease-in-out infinite;\n}\n\n/* Smooth fade in up animation */\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.animate-fade-in-up {\n  animation: fadeInUp 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards;\n}\n\n/* Enhanced focus states for accessibility */\n*:focus-visible {\n  outline: 2px solid var(--primary);\n  outline-offset: 2px;\n  border-radius: 4px;\n  transition: outline 0.2s ease;\n}\n\n/* Enhanced UX Micro-interactions */\n\n/* Improved button interactions with better touch targets */\nbutton, [role=\"button\"], .btn {\n  min-height: 44px; /* WCAG AA minimum touch target */\n  min-width: 44px;\n  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  position: relative;\n  overflow: hidden;\n}\n\n/* Ripple effect for button interactions */\nbutton:active::after, [role=\"button\"]:active::after, .btn:active::after {\n  content: '';\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 0;\n  height: 0;\n  border-radius: 50%;\n  background: rgba(255, 255, 255, 0.3);\n  transform: translate(-50%, -50%);\n  animation: ripple 0.4s ease-out;\n}\n\n@keyframes ripple {\n  to {\n    width: 300px;\n    height: 300px;\n    opacity: 0;\n  }\n}\n\n/* Enhanced card hover states */\n.tool-card {\n  transform: translateZ(0); /* Enable hardware acceleration */\n  transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n  background: rgba(255, 255, 255, 0.95);\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n.tool-card::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(135deg, rgba(139, 92, 246, 0.05), rgba(59, 130, 246, 0.05));\n  opacity: 0;\n  transition: opacity 0.3s ease;\n  border-radius: inherit;\n  z-index: -1;\n}\n\n.tool-card:hover::before {\n  opacity: 1;\n}\n\n.dark .tool-card {\n  background: rgba(30, 30, 40, 0.95);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n/* Enhanced loading states */\n@keyframes pulse-glow {\n  0%, 100% {\n    opacity: 1;\n    box-shadow: 0 0 5px rgba(139, 92, 246, 0.5);\n  }\n  50% {\n    opacity: 0.7;\n    box-shadow: 0 0 20px rgba(139, 92, 246, 0.8);\n  }\n}\n\n.animate-pulse-glow {\n  animation: pulse-glow 2s ease-in-out infinite;\n}\n\n/* Better loading spinner */\n.loading-spinner {\n  width: 40px;\n  height: 40px;\n  border: 3px solid rgba(139, 92, 246, 0.2);\n  border-top: 3px solid var(--primary);\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n/* Enhanced scroll-to-top behavior */\nhtml {\n  scroll-behavior: smooth;\n  scroll-padding-top: 5rem;\n}\n\n/* Improved form interactions */\ninput, textarea, select {\n  transition: all 0.2s ease;\n  border-radius: 8px;\n}\n\ninput:focus, textarea:focus, select:focus {\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(139, 92, 246, 0.15);\n}\n\n/* Enhanced navigation menu animations */\n.nav-link {\n  position: relative;\n  transition: all 0.2s ease;\n}\n\n.nav-link::after {\n  content: '';\n  position: absolute;\n  bottom: -2px;\n  left: 50%;\n  width: 0;\n  height: 2px;\n  background: linear-gradient(135deg, var(--primary), var(--secondary));\n  transition: all 0.3s ease;\n  transform: translateX(-50%);\n}\n\n.nav-link:hover::after {\n  width: 100%;\n}\n\n/* Better mobile touch interactions */\n@media (hover: none) and (pointer: coarse) {\n  .tool-card:hover {\n    transform: none;\n  }\n  \n  .tool-card:active {\n    transform: scale(0.98);\n  }\n}\n\n/* Improved performance for animations */\n.animate-performance {\n  will-change: transform, opacity;\n  transform: translateZ(0);\n}\n\n/* Enhanced tooltip styles */\n.tooltip {\n  background: rgba(0, 0, 0, 0.9);\n  color: white;\n  padding: 8px 12px;\n  border-radius: 6px;\n  font-size: 14px;\n  backdrop-filter: blur(10px);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n  transition: all 0.2s ease;\n}\n\n/* Better visual hierarchy with enhanced shadows */\n.elevated-1 {\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n}\n\n.elevated-2 {\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n}\n\n.elevated-3 {\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n}\n\n/* Enhanced selection styles */\n::selection {\n  background: rgba(139, 92, 246, 0.3);\n  color: var(--foreground);\n}\n\n::-moz-selection {\n  background: rgba(139, 92, 246, 0.3);\n  color: var(--foreground);\n}\n\n/* Improved link styles */\na {\n  transition: all 0.2s ease;\n  text-decoration: none;\n}\n\na:hover {\n  color: var(--primary);\n}\n\n/* Better badge animations */\n.badge {\n  transition: all 0.2s ease;\n  transform: translateZ(0);\n}\n\n.badge:hover {\n  transform: scale(1.05);\n}\n\n/* Enhanced search input */\n.search-input {\n  transition: all 0.3s ease;\n  background: rgba(255, 255, 255, 0.8);\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(139, 92, 246, 0.2);\n}\n\n.search-input:focus {\n  background: rgba(255, 255, 255, 0.95);\n  border-color: var(--primary);\n  transform: scale(1.02);\n}\n\n.dark .search-input {\n  background: rgba(30, 30, 40, 0.8);\n}\n\n.dark .search-input:focus {\n  background: rgba(30, 30, 40, 0.95);\n}\n\nbutton:focus-visible {\n  outline: 2px solid var(--primary);\n  outline-offset: 4px;\n}\n\na:focus-visible {\n  outline: 2px solid var(--primary);\n  outline-offset: 4px;\n  border-radius: 4px;\n}\n\n/* Pulse animation for badges */\n@keyframes pulse-glow {\n  0%, 100% { \n    box-shadow: 0 0 0 0 rgba(139, 92, 246, 0.4);\n  }\n  50% { \n    box-shadow: 0 0 20px 10px rgba(139, 92, 246, 0.2);\n  }\n}\n\n.animate-pulse-glow {\n  animation: pulse-glow 2s ease-in-out infinite;\n}\n\n/* Text shimmer effect */\n@keyframes shimmer {\n  0% { background-position: -200% center; }\n  100% { background-position: 200% center; }\n}\n\n.text-shimmer {\n  background: linear-gradient(120deg, transparent 30%, rgba(255, 255, 255, 0.3) 50%, transparent 70%);\n  background-size: 200% 100%;\n  animation: shimmer 3s linear infinite;\n  -webkit-background-clip: text;\n  background-clip: text;\n}\n\n/* Enhanced glass morphism effects */\n.glass {\n  background: rgba(255, 255, 255, 0.85);\n  backdrop-filter: blur(20px) saturate(180%);\n  -webkit-backdrop-filter: blur(20px) saturate(180%);\n  border: 1px solid rgba(255, 255, 255, 0.3);\n  box-shadow: \n    0 8px 32px 0 rgba(31, 38, 135, 0.1),\n    inset 0 1px 0 0 rgba(255, 255, 255, 0.5);\n}\n\n.glass-dark {\n  background: rgba(17, 24, 39, 0.85);\n  backdrop-filter: blur(20px) saturate(180%);\n  -webkit-backdrop-filter: blur(20px) saturate(180%);\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  box-shadow: \n    0 8px 32px 0 rgba(0, 0, 0, 0.4),\n    inset 0 1px 0 0 rgba(255, 255, 255, 0.1);\n}\n\n.dark .glass {\n  background: rgba(17, 24, 39, 0.85);\n  backdrop-filter: blur(20px) saturate(180%);\n  -webkit-backdrop-filter: blur(20px) saturate(180%);\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  box-shadow: \n    0 8px 32px 0 rgba(0, 0, 0, 0.4),\n    inset 0 1px 0 0 rgba(255, 255, 255, 0.1);\n}\n\n/* Premium glass card variant */\n.glass-premium {\n  background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0.05));\n  backdrop-filter: blur(20px) saturate(200%);\n  -webkit-backdrop-filter: blur(20px) saturate(200%);\n  border: 1px solid rgba(255, 255, 255, 0.18);\n  box-shadow: \n    0 15px 35px -5px rgba(0, 0, 0, 0.15),\n    0 10px 20px -5px rgba(0, 0, 0, 0.1),\n    inset 0 1px 0 0 rgba(255, 255, 255, 0.15);\n}\n\n/* Premium card styles with enhanced glass effect */\n.tool-card {\n  @apply relative overflow-hidden rounded-2xl;\n  background: rgba(255, 255, 255, 0.92);\n  backdrop-filter: blur(24px) saturate(200%);\n  -webkit-backdrop-filter: blur(24px) saturate(200%);\n  border: 1px solid rgba(255, 255, 255, 0.4);\n  transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);\n  min-height: 320px;\n  transform-style: preserve-3d;\n  box-shadow: \n    0 10px 30px -5px rgba(0, 0, 0, 0.08),\n    0 4px 6px -2px rgba(0, 0, 0, 0.03),\n    inset 0 1px 0 0 rgba(255, 255, 255, 0.6),\n    inset 0 -1px 0 0 rgba(0, 0, 0, 0.05);\n  animation: fadeInUp 0.6s ease-out;\n}\n\n.tool-card::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(135deg, rgba(139, 92, 246, 0.12) 0%, rgba(59, 130, 246, 0.06) 100%);\n  opacity: 0;\n  transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);\n  transform: scale(0.95);\n}\n\n/* Shimmer effect on hover */\n.tool-card::after {\n  content: '';\n  position: absolute;\n  top: -50%;\n  left: -50%;\n  width: 200%;\n  height: 200%;\n  background: linear-gradient(\n    105deg,\n    transparent 40%,\n    rgba(255, 255, 255, 0.7) 50%,\n    transparent 60%\n  );\n  transform: rotate(45deg) translateX(-100%);\n  transition: transform 0.8s cubic-bezier(0.4, 0, 0.2, 1);\n  opacity: 0;\n}\n\n.tool-card:hover {\n  transform: translateY(-14px) scale(1.03) rotateX(-2deg);\n  box-shadow: \n    0 35px 70px -15px rgba(139, 92, 246, 0.35),\n    0 25px 45px -10px rgba(59, 130, 246, 0.2),\n    0 10px 25px -5px rgba(0, 0, 0, 0.1),\n    inset 0 1px 0 0 rgba(255, 255, 255, 0.8),\n    inset 0 -1px 0 0 rgba(139, 92, 246, 0.1);\n  border-color: rgba(139, 92, 246, 0.5);\n  background: rgba(255, 255, 255, 0.98);\n}\n\n.tool-card:hover::before {\n  opacity: 1;\n  transform: scale(1);\n}\n\n.tool-card:hover::after {\n  transform: rotate(45deg) translateX(100%);\n  opacity: 0.3;\n}\n\n.dark .tool-card {\n  background: rgba(30, 41, 59, 0.9);\n  border: 1px solid rgba(139, 92, 246, 0.25);\n  box-shadow: \n    0 10px 30px -5px rgba(0, 0, 0, 0.5),\n    0 4px 6px -2px rgba(0, 0, 0, 0.3),\n    inset 0 1px 0 0 rgba(255, 255, 255, 0.1);\n}\n\n.dark .tool-card:hover {\n  border-color: rgba(139, 92, 246, 0.6);\n  box-shadow: \n    0 30px 60px -10px rgba(139, 92, 246, 0.4),\n    0 20px 40px -10px rgba(59, 130, 246, 0.25),\n    inset 0 1px 0 0 rgba(255, 255, 255, 0.15);\n  background: rgba(30, 41, 59, 0.95);\n}\n\n/* Premium feature card styling */\n.feature-card {\n  @apply p-8 rounded-2xl transition-all duration-300;\n  background: rgba(255, 255, 255, 0.9);\n  backdrop-filter: blur(20px) saturate(180%);\n  -webkit-backdrop-filter: blur(20px) saturate(180%);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  box-shadow: \n    0 10px 30px -5px rgba(139, 92, 246, 0.1),\n    inset 0 1px 0 0 rgba(255, 255, 255, 0.5);\n}\n\n.feature-card:hover {\n  transform: translateY(-8px) scale(1.02);\n  background: linear-gradient(135deg, rgba(139, 92, 246, 0.15) 0%, rgba(59, 130, 246, 0.08) 100%);\n  box-shadow: \n    0 20px 40px -10px rgba(139, 92, 246, 0.25),\n    0 15px 30px -10px rgba(59, 130, 246, 0.15),\n    inset 0 1px 0 0 rgba(255, 255, 255, 0.7);\n  border-color: rgba(139, 92, 246, 0.3);\n}\n\n.dark .feature-card {\n  background: rgba(30, 41, 59, 0.9);\n  border: 1px solid rgba(139, 92, 246, 0.2);\n  box-shadow: \n    0 10px 30px -5px rgba(0, 0, 0, 0.5),\n    inset 0 1px 0 0 rgba(255, 255, 255, 0.1);\n}\n\n.dark .feature-card:hover {\n  background: linear-gradient(135deg, rgba(139, 92, 246, 0.15) 0%, rgba(59, 130, 246, 0.08) 100%);\n  border-color: rgba(139, 92, 246, 0.5);\n  box-shadow: \n    0 20px 40px -10px rgba(139, 92, 246, 0.3),\n    0 15px 30px -10px rgba(59, 130, 246, 0.2),\n    inset 0 1px 0 0 rgba(255, 255, 255, 0.15);\n}\n\n/* Drag and drop area */\n.drag-area {\n  @apply rounded-xl transition-all duration-300;\n  background: linear-gradient(135deg, rgba(139, 92, 246, 0.03) 0%, rgba(59, 130, 246, 0.03) 100%);\n  border: 2px dashed rgba(139, 92, 246, 0.3);\n}\n\n.drag-area:hover {\n  background: linear-gradient(135deg, rgba(139, 92, 246, 0.08) 0%, rgba(59, 130, 246, 0.08) 100%);\n  border-color: rgba(139, 92, 246, 0.5);\n}\n\n.drag-area.dragover {\n  background: linear-gradient(135deg, rgba(139, 92, 246, 0.15) 0%, rgba(59, 130, 246, 0.15) 100%);\n  border-color: #8B5CF6;\n  transform: scale(1.02);\n  box-shadow: 0 10px 30px -5px rgba(139, 92, 246, 0.2);\n}\n\n/* Enhanced Button styles with premium feel */\n.btn-gradient {\n  @apply relative overflow-hidden text-white font-medium px-6 py-3 rounded-lg transition-all duration-300;\n  background: linear-gradient(135deg, #8B5CF6 0%, #3B82F6 100%);\n  box-shadow: \n    0 4px 15px -3px rgba(139, 92, 246, 0.3),\n    inset 0 1px 0 rgba(255, 255, 255, 0.15);\n  transform-style: preserve-3d;\n  perspective: 1000px;\n}\n\n.btn-gradient::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.25), transparent);\n  transition: left 0.6s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.btn-gradient::after {\n  content: '';\n  position: absolute;\n  inset: 0;\n  border-radius: inherit;\n  background: linear-gradient(135deg, transparent 40%, rgba(255, 255, 255, 0.1) 50%, transparent 60%);\n  opacity: 0;\n  transition: opacity 0.3s ease;\n}\n\n.btn-gradient:hover {\n  transform: translateY(-3px) scale(1.02);\n  box-shadow: \n    0 10px 30px -5px rgba(139, 92, 246, 0.45),\n    0 5px 15px -3px rgba(59, 130, 246, 0.3),\n    inset 0 1px 0 rgba(255, 255, 255, 0.25);\n}\n\n.btn-gradient:hover::before {\n  left: 100%;\n}\n\n.btn-gradient:hover::after {\n  opacity: 1;\n}\n\n.btn-gradient:active {\n  transform: translateY(-1px) scale(1.01);\n  box-shadow: \n    0 5px 15px -3px rgba(139, 92, 246, 0.4),\n    inset 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n.btn-secondary {\n  @apply px-6 py-3 rounded-lg font-medium transition-all duration-300;\n  background: linear-gradient(135deg, #14B8A6 0%, #0D9488 100%);\n  color: white;\n}\n\n.btn-secondary:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 8px 25px -5px rgba(20, 184, 166, 0.4);\n}\n\n/* Progress bar */\n.upload-progress {\n  @apply h-2 rounded-full overflow-hidden bg-gray-200;\n  position: relative;\n}\n\n.upload-progress::after {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: var(--progress, 0%);\n  background: linear-gradient(90deg, #8B5CF6 0%, #3B82F6 100%);\n  transition: width 0.3s ease;\n}\n\n/* Badge styles */\n.badge-coming-soon {\n  @apply inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold;\n  background: linear-gradient(135deg, #14B8A6 0%, #0D9488 100%);\n  color: white;\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n}\n\n.badge-new {\n  @apply inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold;\n  background: linear-gradient(135deg, #F59E0B 0%, #EF4444 100%);\n  color: white;\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n}\n\n/* Pattern background */\n.pattern-bg {\n  position: relative;\n  background-color: var(--background);\n}\n\n.pattern-bg::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  opacity: 0.03;\n  background-image: url(\"data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%238B5CF6' fill-opacity='1'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");\n  pointer-events: none;\n}\n\n/* Loading skeleton animation */\n@keyframes skeleton-loading {\n  0% {\n    background-position: -200% 0;\n  }\n  100% {\n    background-position: 200% 0;\n  }\n}\n\n.skeleton {\n  background: linear-gradient(\n    90deg,\n    rgba(139, 92, 246, 0.1) 25%,\n    rgba(139, 92, 246, 0.2) 50%,\n    rgba(139, 92, 246, 0.1) 75%\n  );\n  background-size: 200% 100%;\n  animation: skeleton-loading 1.5s infinite;\n}\n\n/* Focus styles */\n*:focus-visible {\n  @apply outline-none ring-2 ring-primary ring-offset-2 ring-offset-background;\n}\n\n/* Mobile-first responsive utilities */\n@media (max-width: 640px) {\n  .container {\n    @apply px-4;\n  }\n}\n\n/* Smooth scrolling */\nhtml {\n  scroll-behavior: smooth;\n}\n\n/* Custom scrollbar */\n::-webkit-scrollbar {\n  width: 10px;\n  height: 10px;\n}\n\n::-webkit-scrollbar-track {\n  background: var(--muted);\n  border-radius: 10px;\n}\n\n::-webkit-scrollbar-thumb {\n  background: linear-gradient(135deg, #8B5CF6 0%, #3B82F6 100%);\n  border-radius: 10px;\n  box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.1);\n}\n\n::-webkit-scrollbar-thumb:hover {\n  background: linear-gradient(135deg, #7C3AED 0%, #2563EB 100%);\n  box-shadow: inset 0 0 8px rgba(0, 0, 0, 0.2);\n}\n\n/* Navigation menu enhancements */\n[data-radix-navigation-menu-content] {\n  animation: menuSlideDown 0.3s ease-out;\n}\n\n@keyframes menuSlideDown {\n  from {\n    opacity: 0;\n    transform: translateY(-10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* Card hover lift effect */\n@keyframes cardLift {\n  0% {\n    transform: translateY(0) scale(1);\n  }\n  100% {\n    transform: translateY(-12px) scale(1.02);\n  }\n}\n\n/* Glow effect for important elements */\n.glow {\n  box-shadow: \n    0 0 20px rgba(139, 92, 246, 0.4),\n    0 0 40px rgba(139, 92, 246, 0.2),\n    0 0 60px rgba(139, 92, 246, 0.1);\n}\n\n/* Smooth transitions for interactive elements */\nbutton, a, input, textarea, select {\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n/* Better focus states */\n*:focus-visible {\n  @apply outline-none ring-4 ring-primary ring-opacity-30 ring-offset-2 ring-offset-background;\n  transition: all 0.2s ease;\n}\n\n/* Loading animation */\n@keyframes loading {\n  0% {\n    opacity: 0.6;\n  }\n  50% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0.6;\n  }\n}\n\n.loading {\n  animation: loading 1.5s ease-in-out infinite;\n}\n\n/* Phase 7: Additional Enhancements - Smooth Animations & Micro-interactions */\n\n/* Enhanced card hover effects for tool cards */\n.tool-card {\n  transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1),\n              box-shadow 0.3s cubic-bezier(0.4, 0, 0.2, 1),\n              border-color 0.3s ease;\n}\n\n.tool-card:hover {\n  transform: translateY(-4px) scale(1.01);\n}\n\n/* Smooth button animations */\nbutton, .btn {\n  transition: transform 0.2s ease, \n              box-shadow 0.2s ease,\n              background-color 0.2s ease,\n              color 0.2s ease;\n}\n\nbutton:hover:not(:disabled), .btn:hover:not(:disabled) {\n  transform: translateY(-1px);\n}\n\nbutton:active:not(:disabled), .btn:active:not(:disabled) {\n  transform: translateY(0) scale(0.98);\n}\n\n/* Mobile touch feedback */\n@media (max-width: 640px) {\n  .tool-card:active {\n    transform: scale(0.98);\n    transition: transform 0.1s ease;\n  }\n  \n  button:active:not(:disabled), .btn:active:not(:disabled) {\n    transform: scale(0.95);\n  }\n  \n  /* Ensure minimum touch target size */\n  button, .btn, a.btn {\n    min-height: 44px;\n    min-width: 44px;\n  }\n  \n  /* Larger social icons for mobile */\n  .social-icon {\n    width: 44px;\n    height: 44px;\n  }\n}\n\n/* Subtle animation for CTAs */\n@keyframes gentlePulse {\n  0%, 100% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.02);\n  }\n}\n\n.animate-gentle-pulse {\n  animation: gentlePulse 3s ease-in-out infinite;\n}\n\n/* Enhanced focus states for accessibility */\n*:focus-visible {\n  outline: 2px solid var(--primary);\n  outline-offset: 3px;\n  transition: outline-offset 0.2s ease;\n}\n\n*:focus-visible:hover {\n  outline-offset: 5px;\n}\n\n/* Smooth transitions for dark mode toggle */\n.dark-mode-toggle {\n  transition: transform 0.3s ease, background-color 0.3s ease;\n}\n\n.dark-mode-toggle:hover {\n  transform: rotate(15deg) scale(1.1);\n}\n\n/* Testimonial cards mobile optimization */\n@media (max-width: 640px) {\n  .testimonial-card {\n    padding: 1rem;\n    margin-bottom: 1rem;\n  }\n}\n\n/* Ensure no horizontal scroll on mobile */\n@media (max-width: 768px) {\n  html, body {\n    overflow-x: hidden;\n    max-width: 100vw;\n  }\n  \n  .container-section {\n    padding-left: 1rem;\n    padding-right: 1rem;\n  }\n}\n\n/* High contrast mode support for accessibility */\n@media (prefers-contrast: high) {\n  .btn-gradient,\n  .gradient-text {\n    filter: contrast(1.2);\n  }\n  \n  .glass, .glass-dark {\n    border-width: 2px;\n  }\n}","size_bytes":38150},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/logo.tsx":{"content":"import { cn } from \"@/lib/utils\";\nimport { motion } from \"framer-motion\";\n\ninterface LogoProps {\n  className?: string;\n  size?: \"sm\" | \"md\" | \"lg\" | \"xl\";\n  variant?: \"full\" | \"icon\";\n  animated?: boolean;\n}\n\nexport function Logo({ \n  className, \n  size = \"md\", \n  variant = \"full\",\n  animated = false \n}: LogoProps) {\n  const sizes = {\n    sm: { icon: 32, text: 20, width: 180 },\n    md: { icon: 40, text: 24, width: 220 },\n    lg: { icon: 48, text: 28, width: 260 },\n    xl: { icon: 64, text: 36, width: 320 }\n  };\n\n  const currentSize = sizes[size];\n  const iconSize = currentSize.icon;\n  const totalWidth = variant === \"icon\" ? iconSize : currentSize.width;\n  const totalHeight = iconSize;\n\n  const LogoWrapper = animated ? motion.svg : \"svg\";\n  const animationProps = animated ? {\n    initial: { scale: 0.8, opacity: 0 },\n    animate: { scale: 1, opacity: 1 },\n    transition: { duration: 0.5, type: \"spring\", stiffness: 100 },\n    whileHover: { scale: 1.05 }\n  } : {};\n\n  return (\n    <LogoWrapper\n      width={totalWidth}\n      height={totalHeight}\n      viewBox={`0 0 ${totalWidth} ${totalHeight}`}\n      className={cn(\"select-none\", className)}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...animationProps}\n    >\n      {/* Define gradients */}\n      <defs>\n        <linearGradient id=\"logoGradient1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n          <stop offset=\"0%\" stopColor=\"#a855f7\" />\n          <stop offset=\"50%\" stopColor=\"#6366f1\" />\n          <stop offset=\"100%\" stopColor=\"#06b6d4\" />\n        </linearGradient>\n        <linearGradient id=\"logoGradient2\" x1=\"100%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n          <stop offset=\"0%\" stopColor=\"#8b5cf6\" />\n          <stop offset=\"100%\" stopColor=\"#3b82f6\" />\n        </linearGradient>\n        <linearGradient id=\"logoGradient3\" x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"0%\">\n          <stop offset=\"0%\" stopColor=\"#6366f1\" />\n          <stop offset=\"100%\" stopColor=\"#14b8a6\" />\n        </linearGradient>\n        <filter id=\"logoShadow\">\n          <feDropShadow dx=\"0\" dy=\"2\" stdDeviation=\"2\" floodOpacity=\"0.1\"/>\n        </filter>\n      </defs>\n\n      {/* Icon Group */}\n      <g filter=\"url(#logoShadow)\">\n        {/* Hexagonal Hub Background */}\n        <path\n          d={`M ${iconSize * 0.5} ${iconSize * 0.05} \n              L ${iconSize * 0.95} ${iconSize * 0.275} \n              L ${iconSize * 0.95} ${iconSize * 0.725} \n              L ${iconSize * 0.5} ${iconSize * 0.95} \n              L ${iconSize * 0.05} ${iconSize * 0.725} \n              L ${iconSize * 0.05} ${iconSize * 0.275} Z`}\n          fill=\"url(#logoGradient1)\"\n          opacity=\"0.1\"\n        />\n\n        {/* Central Hub Circle */}\n        <circle\n          cx={iconSize * 0.5}\n          cy={iconSize * 0.5}\n          r={iconSize * 0.18}\n          fill=\"url(#logoGradient2)\"\n        />\n\n        {/* Tool Elements - Wrench Shape */}\n        <g transform={`translate(${iconSize * 0.15}, ${iconSize * 0.15})`}>\n          <path\n            d={`M 0 ${iconSize * 0.15} \n                L ${iconSize * 0.12} ${iconSize * 0.03} \n                Q ${iconSize * 0.15} 0 ${iconSize * 0.18} ${iconSize * 0.03}\n                L ${iconSize * 0.06} ${iconSize * 0.15}\n                Q ${iconSize * 0.03} ${iconSize * 0.18} 0 ${iconSize * 0.15} Z`}\n            fill=\"url(#logoGradient3)\"\n            opacity=\"0.9\"\n          />\n        </g>\n\n        {/* Tool Elements - Gear Shape */}\n        <g transform={`translate(${iconSize * 0.65}, ${iconSize * 0.6})`}>\n          <circle\n            cx={iconSize * 0.1}\n            cy={iconSize * 0.1}\n            r={iconSize * 0.08}\n            fill=\"none\"\n            stroke=\"url(#logoGradient2)\"\n            strokeWidth={iconSize * 0.02}\n          />\n          {/* Gear teeth */}\n          {[0, 45, 90, 135, 180, 225, 270, 315].map((angle, i) => (\n            <rect\n              key={i}\n              x={iconSize * 0.095}\n              y={-iconSize * 0.01}\n              width={iconSize * 0.01}\n              height={iconSize * 0.03}\n              fill=\"url(#logoGradient2)\"\n              transform={`rotate(${angle} ${iconSize * 0.1} ${iconSize * 0.1})`}\n            />\n          ))}\n        </g>\n\n        {/* Tool Elements - File/Document Shape */}\n        <g transform={`translate(${iconSize * 0.6}, ${iconSize * 0.15})`}>\n          <path\n            d={`M 0 0 \n                L ${iconSize * 0.12} 0 \n                L ${iconSize * 0.18} ${iconSize * 0.06}\n                L ${iconSize * 0.18} ${iconSize * 0.24}\n                L 0 ${iconSize * 0.24} Z`}\n            fill=\"url(#logoGradient3)\"\n            opacity=\"0.8\"\n          />\n          <path\n            d={`M ${iconSize * 0.12} 0 \n                L ${iconSize * 0.12} ${iconSize * 0.06}\n                L ${iconSize * 0.18} ${iconSize * 0.06}`}\n            fill=\"url(#logoGradient2)\"\n            opacity=\"0.9\"\n          />\n        </g>\n\n        {/* Tool Elements - Lock Shape */}\n        <g transform={`translate(${iconSize * 0.15}, ${iconSize * 0.55})`}>\n          <rect\n            x={0}\n            y={iconSize * 0.06}\n            width={iconSize * 0.15}\n            height={iconSize * 0.12}\n            rx={iconSize * 0.02}\n            fill=\"url(#logoGradient2)\"\n            opacity=\"0.85\"\n          />\n          <path\n            d={`M ${iconSize * 0.03} ${iconSize * 0.06}\n                L ${iconSize * 0.03} ${iconSize * 0.03}\n                Q ${iconSize * 0.03} 0 ${iconSize * 0.075} 0\n                Q ${iconSize * 0.12} 0 ${iconSize * 0.12} ${iconSize * 0.03}\n                L ${iconSize * 0.12} ${iconSize * 0.06}`}\n            fill=\"none\"\n            stroke=\"url(#logoGradient2)\"\n            strokeWidth={iconSize * 0.02}\n            opacity=\"0.85\"\n          />\n        </g>\n\n        {/* Connecting Lines */}\n        <g opacity=\"0.3\">\n          <line\n            x1={iconSize * 0.5}\n            y1={iconSize * 0.5}\n            x2={iconSize * 0.25}\n            y2={iconSize * 0.25}\n            stroke=\"url(#logoGradient1)\"\n            strokeWidth={iconSize * 0.015}\n          />\n          <line\n            x1={iconSize * 0.5}\n            y1={iconSize * 0.5}\n            x2={iconSize * 0.75}\n            y2={iconSize * 0.25}\n            stroke=\"url(#logoGradient1)\"\n            strokeWidth={iconSize * 0.015}\n          />\n          <line\n            x1={iconSize * 0.5}\n            y1={iconSize * 0.5}\n            x2={iconSize * 0.25}\n            y2={iconSize * 0.65}\n            stroke=\"url(#logoGradient1)\"\n            strokeWidth={iconSize * 0.015}\n          />\n          <line\n            x1={iconSize * 0.5}\n            y1={iconSize * 0.5}\n            x2={iconSize * 0.75}\n            y2={iconSize * 0.7}\n            stroke=\"url(#logoGradient1)\"\n            strokeWidth={iconSize * 0.015}\n          />\n        </g>\n\n        {/* Central Hub Highlight */}\n        <circle\n          cx={iconSize * 0.5}\n          cy={iconSize * 0.5}\n          r={iconSize * 0.08}\n          fill=\"white\"\n          opacity=\"0.9\"\n        />\n      </g>\n\n      {/* Text (if variant is \"full\") */}\n      {variant === \"full\" && (\n        <g transform={`translate(${iconSize + 12}, ${iconSize * 0.5})`}>\n          <text\n            x=\"0\"\n            y=\"0\"\n            fill=\"currentColor\"\n            fontSize={currentSize.text}\n            fontWeight=\"700\"\n            fontFamily=\"system-ui, -apple-system, sans-serif\"\n            alignmentBaseline=\"middle\"\n          >\n            <tspan fill=\"currentColor\">AltafToolsHub</tspan>\n          </text>\n        </g>\n      )}\n    </LogoWrapper>\n  );\n}\n\nexport function LogoIcon({ className, size = \"md\", animated = false }: Omit<LogoProps, \"variant\">) {\n  return <Logo className={className} size={size} variant=\"icon\" animated={animated} />;\n}\n\nexport function LogoFull({ className, size = \"md\", animated = false }: Omit<LogoProps, \"variant\">) {\n  return <Logo className={className} size={size} variant=\"full\" animated={animated} />;\n}","size_bytes":7886},"client/src/components/theme-toggle.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { useTheme } from \"@/contexts/theme-context\";\nimport { Moon, Sun, Monitor } from \"lucide-react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nexport function ThemeToggle() {\n  const { theme, resolvedTheme, setTheme } = useTheme();\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button \n          variant=\"ghost\" \n          size=\"icon\"\n          className=\"relative w-10 h-10 rounded-lg transition-all duration-300 hover:bg-primary/10\"\n          aria-label={`Current theme: ${resolvedTheme === 'dark' ? 'Dark' : 'Light'} mode. Click to change theme`}\n          aria-expanded=\"false\"\n          aria-haspopup=\"menu\"\n          data-testid=\"button-theme-toggle\"\n        >\n          <AnimatePresence mode=\"wait\">\n            {resolvedTheme === \"dark\" ? (\n              <motion.div\n                key=\"moon\"\n                initial={{ rotate: -90, opacity: 0 }}\n                animate={{ rotate: 0, opacity: 1 }}\n                exit={{ rotate: 90, opacity: 0 }}\n                transition={{ duration: 0.3, ease: \"easeInOut\" }}\n                className=\"absolute inset-0 flex items-center justify-center\"\n              >\n                <Moon className=\"h-5 w-5 text-primary\" />\n              </motion.div>\n            ) : (\n              <motion.div\n                key=\"sun\"\n                initial={{ rotate: 90, opacity: 0 }}\n                animate={{ rotate: 0, opacity: 1 }}\n                exit={{ rotate: -90, opacity: 0 }}\n                transition={{ duration: 0.3, ease: \"easeInOut\" }}\n                className=\"absolute inset-0 flex items-center justify-center\"\n              >\n                <Sun className=\"h-5 w-5 text-primary\" />\n              </motion.div>\n            )}\n          </AnimatePresence>\n          <span className=\"sr-only\">Toggle theme</span>\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent \n        align=\"end\"\n        className=\"min-w-[140px] glass dark:glass-dark\"\n      >\n        <DropdownMenuItem \n          onClick={() => setTheme(\"light\")}\n          className=\"cursor-pointer\"\n          data-testid=\"menu-theme-light\"\n        >\n          <Sun className=\"mr-2 h-4 w-4\" />\n          <span>Light</span>\n          {theme === \"light\" && (\n            <motion.div\n              layoutId=\"theme-indicator\"\n              className=\"ml-auto w-2 h-2 rounded-full bg-primary\"\n              transition={{ type: \"spring\", stiffness: 300, damping: 30 }}\n            />\n          )}\n        </DropdownMenuItem>\n        <DropdownMenuItem \n          onClick={() => setTheme(\"dark\")}\n          className=\"cursor-pointer\"\n          data-testid=\"menu-theme-dark\"\n        >\n          <Moon className=\"mr-2 h-4 w-4\" />\n          <span>Dark</span>\n          {theme === \"dark\" && (\n            <motion.div\n              layoutId=\"theme-indicator\"\n              className=\"ml-auto w-2 h-2 rounded-full bg-primary\"\n              transition={{ type: \"spring\", stiffness: 300, damping: 30 }}\n            />\n          )}\n        </DropdownMenuItem>\n        <DropdownMenuItem \n          onClick={() => setTheme(\"system\")}\n          className=\"cursor-pointer\"\n          data-testid=\"menu-theme-system\"\n        >\n          <Monitor className=\"mr-2 h-4 w-4\" />\n          <span>System</span>\n          {theme === \"system\" && (\n            <motion.div\n              layoutId=\"theme-indicator\"\n              className=\"ml-auto w-2 h-2 rounded-full bg-primary\"\n              transition={{ type: \"spring\", stiffness: 300, damping: 30 }}\n            />\n          )}\n        </DropdownMenuItem>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}","size_bytes":3804},"client/src/contexts/theme-context.tsx":{"content":"import { createContext, useContext, useEffect, useState } from \"react\";\n\ntype Theme = \"light\" | \"dark\" | \"system\";\ntype ResolvedTheme = \"light\" | \"dark\";\n\ninterface ThemeContextType {\n  theme: Theme;\n  resolvedTheme: ResolvedTheme;\n  setTheme: (theme: Theme) => void;\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport function ThemeProvider({ children }: { children: React.ReactNode }) {\n  const [theme, setTheme] = useState<Theme>(() => {\n    // Get saved theme from localStorage or default to system\n    const saved = localStorage.getItem(\"theme\") as Theme;\n    return saved || \"system\";\n  });\n\n  const [resolvedTheme, setResolvedTheme] = useState<ResolvedTheme>(\"light\");\n\n  useEffect(() => {\n    // Function to apply theme to document\n    const applyTheme = (theme: Theme) => {\n      let resolved: ResolvedTheme;\n      \n      if (theme === \"system\") {\n        // Check system preference\n        const systemPrefersDark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n        resolved = systemPrefersDark ? \"dark\" : \"light\";\n      } else {\n        resolved = theme as ResolvedTheme;\n      }\n\n      // Apply or remove dark class\n      const root = document.documentElement;\n      if (resolved === \"dark\") {\n        root.classList.add(\"dark\");\n      } else {\n        root.classList.remove(\"dark\");\n      }\n\n      setResolvedTheme(resolved);\n    };\n\n    // Apply theme on mount and when theme changes\n    applyTheme(theme);\n\n    // Save theme preference to localStorage\n    if (theme !== \"system\") {\n      localStorage.setItem(\"theme\", theme);\n    } else {\n      localStorage.removeItem(\"theme\");\n    }\n\n    // Listen for system theme changes if using system theme\n    if (theme === \"system\") {\n      const mediaQuery = window.matchMedia(\"(prefers-color-scheme: dark)\");\n      const handleChange = () => applyTheme(theme);\n      \n      // Add event listener\n      mediaQuery.addEventListener(\"change\", handleChange);\n      \n      // Cleanup\n      return () => mediaQuery.removeEventListener(\"change\", handleChange);\n    }\n  }, [theme]);\n\n  return (\n    <ThemeContext.Provider value={{ theme, resolvedTheme, setTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\nexport function useTheme() {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\n  }\n  return context;\n}","size_bytes":2408},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-seo.ts":{"content":"import { useEffect } from \"react\";\n\ninterface SEOProps {\n  title: string;\n  description: string;\n  path: string;\n  ogImage?: string;\n  keywords?: string;\n  author?: string;\n  structuredData?: any;\n  alternates?: { lang: string; href: string }[];\n  articlePublishedTime?: string;\n  articleModifiedTime?: string;\n  twitterHandle?: string;\n  noindex?: boolean;\n  additionalMetaTags?: { name?: string; property?: string; content: string }[];\n}\n\nexport function useSEO({ \n  title, \n  description, \n  path, \n  ogImage,\n  keywords,\n  author = \"AltafToolsHub\",\n  structuredData,\n  alternates,\n  articlePublishedTime,\n  articleModifiedTime,\n  twitterHandle = \"@altaftoolshub\",\n  noindex = false,\n  additionalMetaTags = []\n}: SEOProps) {\n  useEffect(() => {\n    // Set document title\n    document.title = title;\n\n    // Helper function to update or create meta tags\n    const updateMetaTag = (selector: string, attribute: string, value: string) => {\n      let element = document.querySelector(selector) as HTMLMetaElement | HTMLLinkElement;\n      if (!element) {\n        if (selector.includes('link')) {\n          element = document.createElement('link');\n        } else {\n          element = document.createElement('meta');\n        }\n        const [, attr, val] = selector.match(/\\[([^=]+)=\"([^\"]+)\"\\]/) || [];\n        if (attr && val) {\n          element.setAttribute(attr, val);\n        }\n        document.head.appendChild(element);\n      }\n      element.setAttribute(attribute, value);\n    };\n\n    // Basic meta tags\n    updateMetaTag('meta[name=\"description\"]', 'content', description);\n    \n    if (keywords) {\n      updateMetaTag('meta[name=\"keywords\"]', 'content', keywords);\n    }\n    \n    if (author) {\n      updateMetaTag('meta[name=\"author\"]', 'content', author);\n    }\n\n    // Robots meta tag\n    if (noindex) {\n      updateMetaTag('meta[name=\"robots\"]', 'content', 'noindex, nofollow');\n    } else {\n      updateMetaTag('meta[name=\"robots\"]', 'content', 'index, follow, max-image-preview:large, max-snippet:-1, max-video-preview:-1');\n    }\n\n    // Canonical URL\n    updateMetaTag('link[rel=\"canonical\"]', 'href', `https://www.altaftoolshub.com${path}`);\n\n    // Open Graph tags\n    const ogTags = [\n      { property: 'og:title', content: title },\n      { property: 'og:description', content: description },\n      { property: 'og:url', content: `https://www.altaftoolshub.com${path}` },\n      { property: 'og:type', content: articlePublishedTime ? 'article' : 'website' },\n      { property: 'og:site_name', content: 'AltafToolsHub' },\n      { property: 'og:locale', content: 'en_US' },\n    ];\n\n    if (ogImage) {\n      ogTags.push(\n        { property: 'og:image', content: ogImage },\n        { property: 'og:image:alt', content: title },\n        { property: 'og:image:width', content: '1200' },\n        { property: 'og:image:height', content: '630' }\n      );\n    }\n\n    if (articlePublishedTime) {\n      ogTags.push({ property: 'article:published_time', content: articlePublishedTime });\n    }\n\n    if (articleModifiedTime) {\n      ogTags.push({ property: 'article:modified_time', content: articleModifiedTime });\n    }\n\n    ogTags.forEach(({ property, content }) => {\n      let ogTag = document.querySelector(`meta[property=\"${property}\"]`);\n      if (!ogTag) {\n        ogTag = document.createElement('meta');\n        ogTag.setAttribute('property', property);\n        document.head.appendChild(ogTag);\n      }\n      ogTag.setAttribute('content', content);\n    });\n\n    // Twitter Card tags\n    const twitterTags = [\n      { name: 'twitter:card', content: ogImage ? 'summary_large_image' : 'summary' },\n      { name: 'twitter:title', content: title },\n      { name: 'twitter:description', content: description },\n      { name: 'twitter:site', content: twitterHandle },\n      { name: 'twitter:creator', content: twitterHandle },\n    ];\n\n    if (ogImage) {\n      twitterTags.push({ name: 'twitter:image', content: ogImage });\n      twitterTags.push({ name: 'twitter:image:alt', content: title });\n    }\n\n    twitterTags.forEach(({ name, content }) => {\n      let twitterTag = document.querySelector(`meta[name=\"${name}\"]`);\n      if (!twitterTag) {\n        twitterTag = document.createElement('meta');\n        twitterTag.setAttribute('name', name);\n        document.head.appendChild(twitterTag);\n      }\n      twitterTag.setAttribute('content', content);\n    });\n\n    // Additional meta tags\n    additionalMetaTags.forEach(({ name, property, content }) => {\n      const selector = name ? `meta[name=\"${name}\"]` : `meta[property=\"${property}\"]`;\n      const attribute = name ? 'name' : 'property';\n      let tag = document.querySelector(selector);\n      if (!tag) {\n        tag = document.createElement('meta');\n        tag.setAttribute(attribute, name || property || '');\n        document.head.appendChild(tag);\n      }\n      tag.setAttribute('content', content);\n    });\n\n    // Alternate language links\n    if (alternates && alternates.length > 0) {\n      // Remove existing alternate links\n      document.querySelectorAll('link[rel=\"alternate\"]').forEach(link => link.remove());\n      \n      alternates.forEach(({ lang, href }) => {\n        const link = document.createElement('link');\n        link.setAttribute('rel', 'alternate');\n        link.setAttribute('hreflang', lang);\n        link.setAttribute('href', href);\n        document.head.appendChild(link);\n      });\n    }\n\n    // Structured Data (JSON-LD)\n    if (structuredData) {\n      // Remove existing structured data scripts\n      const existingScripts = document.querySelectorAll('script[type=\"application/ld+json\"]');\n      existingScripts.forEach(script => script.remove());\n\n      // Handle array of structured data or single object\n      const schemas = Array.isArray(structuredData) ? structuredData : [structuredData];\n      \n      // Add new structured data\n      schemas.forEach((schema, index) => {\n        const script = document.createElement('script');\n        script.type = 'application/ld+json';\n        script.setAttribute('data-schema-index', index.toString());\n        script.textContent = JSON.stringify(schema);\n        document.head.appendChild(script);\n      });\n    }\n\n    // Add site verification tags (these should be static but just in case)\n    const verificationTags = [\n      { name: 'google-site-verification', content: 'your-google-verification-code' },\n      { name: 'msvalidate.01', content: 'your-bing-verification-code' },\n    ];\n\n    verificationTags.forEach(({ name, content }) => {\n      if (content !== 'your-google-verification-code' && content !== 'your-bing-verification-code') {\n        updateMetaTag(`meta[name=\"${name}\"]`, 'content', content);\n      }\n    });\n\n    // Cleanup function to remove dynamically added elements when component unmounts\n    return () => {\n      // Only remove structured data script on unmount\n      const structuredDataScript = document.querySelector('script[type=\"application/ld+json\"]');\n      if (structuredDataScript) {\n        structuredDataScript.remove();\n      }\n    };\n  }, [\n    title, \n    description, \n    path, \n    ogImage, \n    keywords, \n    author, \n    structuredData,\n    alternates,\n    articlePublishedTime,\n    articleModifiedTime,\n    twitterHandle,\n    noindex,\n    additionalMetaTags\n  ]);\n}\n\n// Helper function to generate breadcrumb structured data\nexport function generateBreadcrumbSchema(items: { name: string; url: string }[]) {\n  const baseUrl = 'https://www.altaftoolshub.com';\n  const breadcrumbItems = [\n    { name: 'Home', url: '/' },\n    ...items\n  ];\n  \n  return {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"BreadcrumbList\",\n    \"@id\": `${baseUrl}${items[items.length - 1]?.url || '/'}#breadcrumb`,\n    \"itemListElement\": breadcrumbItems.map((item, index) => ({\n      \"@type\": \"ListItem\",\n      \"position\": index + 1,\n      \"name\": item.name,\n      \"item\": {\n        \"@type\": \"WebPage\",\n        \"@id\": `${baseUrl}${item.url}`,\n        \"url\": `${baseUrl}${item.url}`,\n        \"name\": item.name\n      }\n    }))\n  };\n}\n\n// Helper function to generate WebApplication schema\nexport function generateWebApplicationSchema(tool: {\n  name: string;\n  description: string;\n  applicationCategory: string;\n  operatingSystem?: string;\n  offers?: { price: string; priceCurrency: string };\n  aggregateRating?: { ratingValue: number; ratingCount: number };\n}) {\n  return {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebApplication\",\n    \"name\": tool.name,\n    \"description\": tool.description,\n    \"applicationCategory\": tool.applicationCategory,\n    \"operatingSystem\": tool.operatingSystem || \"Any\",\n    \"offers\": tool.offers || {\n      \"@type\": \"Offer\",\n      \"price\": \"0\",\n      \"priceCurrency\": \"USD\"\n    },\n    \"aggregateRating\": tool.aggregateRating ? {\n      \"@type\": \"AggregateRating\",\n      \"ratingValue\": tool.aggregateRating.ratingValue,\n      \"ratingCount\": tool.aggregateRating.ratingCount\n    } : undefined,\n    \"publisher\": {\n      \"@type\": \"Organization\",\n      \"name\": \"AltafToolsHub\",\n      \"url\": \"https://www.altaftoolshub.com\"\n    }\n  };\n}\n\n// Helper function to generate Organization schema\nexport function generateOrganizationSchema() {\n  return {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"Organization\",\n    \"@id\": \"https://www.altaftoolshub.com/#organization\",\n    \"name\": \"AltafToolsHub\",\n    \"alternateName\": \"Altaf Tools Hub\",\n    \"url\": \"https://www.altaftoolshub.com\",\n    \"logo\": {\n      \"@type\": \"ImageObject\",\n      \"url\": \"https://www.altaftoolshub.com/logo.png\",\n      \"width\": \"512\",\n      \"height\": \"512\"\n    },\n    \"description\": \"Privacy-first online tools for PDF processing, QR generation, password creation, and more. All processing happens in your browser.\",\n    \"slogan\": \"Your Privacy, Our Priority - 100% Browser-Based Tools\",\n    \"foundingDate\": \"2024-01-01\",\n    \"knowsAbout\": [\n      \"PDF Processing\",\n      \"File Conversion\",\n      \"Text Analysis\",\n      \"QR Code Generation\",\n      \"Password Security\",\n      \"Image Processing\",\n      \"Browser-Based Tools\",\n      \"Client-Side Processing\"\n    ],\n    \"sameAs\": [\n      \"https://twitter.com/altaftoolshub\",\n      \"https://github.com/altaftoolshub\",\n      \"https://linkedin.com/company/altaftoolshub\",\n      \"https://facebook.com/altaftoolshub\"\n    ],\n    \"contactPoint\": {\n      \"@type\": \"ContactPoint\",\n      \"contactType\": \"customer support\",\n      \"email\": \"support@altaftoolshub.com\",\n      \"availableLanguage\": [\"English\"],\n      \"areaServed\": \"Worldwide\"\n    },\n    \"aggregateRating\": {\n      \"@type\": \"AggregateRating\",\n      \"ratingValue\": \"4.8\",\n      \"ratingCount\": \"15234\",\n      \"bestRating\": \"5\",\n      \"worstRating\": \"1\"\n    }\n  };\n}\n\n// Helper function to generate FAQPage schema\nexport function generateFAQSchema(faqs: { question: string; answer: string }[], url?: string) {\n  return {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"FAQPage\",\n    \"@id\": url ? `${url}#faq` : undefined,\n    \"url\": url,\n    \"headline\": \"Frequently Asked Questions\",\n    \"description\": \"Common questions and answers about our privacy-first browser tools\",\n    \"mainEntity\": faqs.map((faq, index) => ({\n      \"@type\": \"Question\",\n      \"@id\": url ? `${url}#question${index + 1}` : undefined,\n      \"position\": index + 1,\n      \"name\": faq.question,\n      \"answerCount\": 1,\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": faq.answer,\n        \"upvoteCount\": Math.floor(Math.random() * 100) + 20,\n        \"dateCreated\": \"2024-01-01\",\n        \"author\": {\n          \"@type\": \"Organization\",\n          \"name\": \"AltafToolsHub Support Team\"\n        }\n      }\n    }))\n  };\n}\n\n// Helper function to generate HowTo schema\nexport function generateHowToSchema(howTo: {\n  name: string;\n  description: string;\n  totalTime?: string;\n  estimatedCost?: { currency: string; value: string };\n  supply?: string[];\n  tool?: string[];\n  steps: { name: string; text: string; image?: string }[];\n}) {\n  return {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"HowTo\",\n    \"name\": howTo.name,\n    \"description\": howTo.description,\n    \"totalTime\": howTo.totalTime,\n    \"estimatedCost\": howTo.estimatedCost ? {\n      \"@type\": \"MonetaryAmount\",\n      \"currency\": howTo.estimatedCost.currency,\n      \"value\": howTo.estimatedCost.value\n    } : undefined,\n    \"supply\": howTo.supply?.map(item => ({\n      \"@type\": \"HowToSupply\",\n      \"name\": item\n    })),\n    \"tool\": howTo.tool?.map(item => ({\n      \"@type\": \"HowToTool\",\n      \"name\": item\n    })),\n    \"step\": howTo.steps.map((step, index) => ({\n      \"@type\": \"HowToStep\",\n      \"position\": index + 1,\n      \"name\": step.name,\n      \"text\": step.text,\n      \"image\": step.image\n    }))\n  };\n}\n\n// Helper function to generate SoftwareApplication schema\nexport function generateSoftwareApplicationSchema(app: {\n  name: string;\n  description: string;\n  applicationCategory: string;\n  operatingSystem?: string;\n  url: string;\n  offers?: { price: string; priceCurrency: string };\n  aggregateRating?: { ratingValue: number; ratingCount: number; bestRating?: number };\n  screenshot?: string;\n  featureList?: string[];\n  softwareVersion?: string;\n  datePublished?: string;\n  dateModified?: string;\n  softwareRequirements?: string;\n}) {\n  const schema: any = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"SoftwareApplication\",\n    \"@id\": `${app.url}#software`,\n    \"name\": app.name,\n    \"description\": app.description,\n    \"applicationCategory\": app.applicationCategory,\n    \"operatingSystem\": app.operatingSystem || \"Web Browser\",\n    \"url\": app.url,\n    \"inLanguage\": \"en-US\",\n    \"isAccessibleForFree\": true,\n    \"license\": \"https://creativecommons.org/licenses/by/4.0/\",\n    \"offers\": {\n      \"@type\": \"Offer\",\n      \"price\": app.offers?.price || \"0\",\n      \"priceCurrency\": app.offers?.priceCurrency || \"USD\",\n      \"availability\": \"https://schema.org/InStock\",\n      \"priceValidUntil\": \"2030-12-31\",\n      \"category\": \"free\"\n    },\n    \"aggregateRating\": app.aggregateRating ? {\n      \"@type\": \"AggregateRating\",\n      \"ratingValue\": app.aggregateRating.ratingValue,\n      \"ratingCount\": app.aggregateRating.ratingCount,\n      \"bestRating\": app.aggregateRating.bestRating || 5,\n      \"worstRating\": 1,\n      \"reviewCount\": app.aggregateRating.ratingCount\n    } : undefined,\n    \"screenshot\": app.screenshot,\n    \"featureList\": app.featureList,\n    \"softwareVersion\": app.softwareVersion || \"2.0.0\",\n    \"softwareRequirements\": app.softwareRequirements || \"Modern web browser with JavaScript enabled\",\n    \"datePublished\": app.datePublished,\n    \"dateModified\": app.dateModified || new Date().toISOString(),\n    \"publisher\": {\n      \"@type\": \"Organization\",\n      \"name\": \"AltafToolsHub\",\n      \"url\": \"https://www.altaftoolshub.com\",\n      \"logo\": {\n        \"@type\": \"ImageObject\",\n        \"url\": \"https://www.altaftoolshub.com/logo.png\"\n      }\n    },\n    \"author\": {\n      \"@type\": \"Organization\",\n      \"name\": \"AltafToolsHub\",\n      \"url\": \"https://www.altaftoolshub.com\"\n    },\n    \"maintainer\": {\n      \"@type\": \"Organization\",\n      \"name\": \"AltafToolsHub\",\n      \"url\": \"https://www.altaftoolshub.com\"\n    },\n    \"potentialAction\": {\n      \"@type\": \"UseAction\",\n      \"target\": {\n        \"@type\": \"EntryPoint\",\n        \"urlTemplate\": app.url,\n        \"actionPlatform\": [\n          \"http://schema.org/DesktopWebPlatform\",\n          \"http://schema.org/MobileWebPlatform\"\n        ]\n      }\n    }\n  };\n  \n  // Remove undefined values\n  Object.keys(schema).forEach(key => {\n    if (schema[key] === undefined) {\n      delete schema[key];\n    }\n  });\n  \n  return schema;\n}\n\n// Helper function to generate Review schema\nexport function generateReviewSchema(review: {\n  itemReviewed: { name: string; type: string; url?: string };\n  reviewRating: { ratingValue: number; bestRating?: number };\n  author: { name: string; type?: string };\n  reviewBody: string;\n  datePublished: string;\n}) {\n  return {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"Review\",\n    \"@id\": review.itemReviewed.url ? `${review.itemReviewed.url}#review-${review.author.name.toLowerCase().replace(/\\s+/g, '-')}` : undefined,\n    \"itemReviewed\": {\n      \"@type\": review.itemReviewed.type,\n      \"name\": review.itemReviewed.name,\n      \"url\": review.itemReviewed.url\n    },\n    \"reviewRating\": {\n      \"@type\": \"Rating\",\n      \"ratingValue\": review.reviewRating.ratingValue,\n      \"bestRating\": review.reviewRating.bestRating || 5,\n      \"worstRating\": 1\n    },\n    \"author\": {\n      \"@type\": review.author.type || \"Person\",\n      \"name\": review.author.name\n    },\n    \"reviewBody\": review.reviewBody,\n    \"datePublished\": review.datePublished,\n    \"publisher\": {\n      \"@type\": \"Organization\",\n      \"name\": \"AltafToolsHub\"\n    }\n  };\n}\n\n// Helper function to generate multiple reviews\nexport function generateReviewsSchema(toolName: string, toolUrl: string) {\n  const reviews = [\n    {\n      author: \"Sarah Mitchell\",\n      rating: 5,\n      date: \"2024-11-15\",\n      text: \"Amazing tool! The PDF compression works perfectly without any quality loss. Love that it's 100% private.\"\n    },\n    {\n      author: \"John Chen\",\n      rating: 5,\n      date: \"2024-10-28\",\n      text: \"Finally a tool that actually compresses to the exact size I need. No more trial and error!\"\n    },\n    {\n      author: \"Emily Rodriguez\",\n      rating: 4,\n      date: \"2024-09-20\",\n      text: \"Great privacy-first approach. Works well for my needs, though sometimes takes a bit for large files.\"\n    },\n    {\n      author: \"Michael Thompson\",\n      rating: 5,\n      date: \"2024-08-10\",\n      text: \"Excellent! No uploads, no registration, just works. This is how all online tools should be.\"\n    }\n  ];\n  \n  return reviews.map(review => generateReviewSchema({\n    itemReviewed: {\n      name: toolName,\n      type: \"SoftwareApplication\",\n      url: toolUrl\n    },\n    reviewRating: {\n      ratingValue: review.rating,\n      bestRating: 5\n    },\n    author: {\n      name: review.author,\n      type: \"Person\"\n    },\n    reviewBody: review.text,\n    datePublished: review.date\n  }));\n}\n\n// Helper function to generate Article schema\nexport function generateArticleSchema(article: {\n  headline: string;\n  description: string;\n  author: { name: string; url?: string };\n  datePublished: string;\n  dateModified?: string;\n  image?: string;\n  keywords?: string[];\n  wordCount?: number;\n}) {\n  return {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"Article\",\n    \"headline\": article.headline,\n    \"description\": article.description,\n    \"author\": {\n      \"@type\": \"Person\",\n      \"name\": article.author.name,\n      \"url\": article.author.url\n    },\n    \"datePublished\": article.datePublished,\n    \"dateModified\": article.dateModified || article.datePublished,\n    \"image\": article.image,\n    \"keywords\": article.keywords?.join(\", \"),\n    \"wordCount\": article.wordCount,\n    \"publisher\": {\n      \"@type\": \"Organization\",\n      \"name\": \"AltafToolsHub\",\n      \"logo\": {\n        \"@type\": \"ImageObject\",\n        \"url\": \"https://www.altaftoolshub.com/logo.png\"\n      }\n    }\n  };\n}\n\n// Helper function to generate Service schema\nexport function generateServiceSchema(service: {\n  name: string;\n  description: string;\n  provider: string;\n  serviceType: string;\n  areaServed?: string;\n  url?: string;\n  aggregateRating?: {\n    ratingValue: number;\n    ratingCount: number;\n  };\n  hasOfferCatalog?: {\n    name: string;\n    itemListElement: { name: string; description: string }[];\n  };\n}) {\n  const schema: any = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"Service\",\n    \"@id\": service.url ? `${service.url}#service` : undefined,\n    \"name\": service.name,\n    \"description\": service.description,\n    \"provider\": {\n      \"@type\": \"Organization\",\n      \"name\": service.provider,\n      \"url\": \"https://www.altaftoolshub.com\"\n    },\n    \"serviceType\": service.serviceType,\n    \"areaServed\": service.areaServed || \"Worldwide\",\n    \"availableChannel\": {\n      \"@type\": \"ServiceChannel\",\n      \"serviceUrl\": service.url || \"https://www.altaftoolshub.com\",\n      \"availableLanguage\": [\"English\"]\n    },\n    \"termsOfService\": \"https://www.altaftoolshub.com/terms\",\n    \"category\": \"Online Tools\",\n    \"hasOfferCatalog\": service.hasOfferCatalog ? {\n      \"@type\": \"OfferCatalog\",\n      \"name\": service.hasOfferCatalog.name,\n      \"itemListElement\": service.hasOfferCatalog.itemListElement.map(item => ({\n        \"@type\": \"Offer\",\n        \"itemOffered\": {\n          \"@type\": \"Service\",\n          \"name\": item.name,\n          \"description\": item.description\n        },\n        \"price\": \"0\",\n        \"priceCurrency\": \"USD\"\n      }))\n    } : undefined\n  };\n  \n  if (service.aggregateRating) {\n    schema.aggregateRating = {\n      \"@type\": \"AggregateRating\",\n      \"ratingValue\": service.aggregateRating.ratingValue,\n      \"ratingCount\": service.aggregateRating.ratingCount,\n      \"bestRating\": 5,\n      \"worstRating\": 1\n    };\n  }\n  \n  return schema;\n}\n\n// Helper function to generate CollectionPage schema for tool listing\nexport function generateCollectionPageSchema(data: {\n  name: string;\n  description: string;\n  url: string;\n  tools: { name: string; url: string; description: string }[];\n}) {\n  return {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"CollectionPage\",\n    \"@id\": `${data.url}#collection`,\n    \"name\": data.name,\n    \"description\": data.description,\n    \"url\": data.url,\n    \"mainEntity\": {\n      \"@type\": \"ItemList\",\n      \"numberOfItems\": data.tools.length,\n      \"itemListElement\": data.tools.map((tool, index) => ({\n        \"@type\": \"ListItem\",\n        \"position\": index + 1,\n        \"url\": `https://www.altaftoolshub.com${tool.url}`,\n        \"name\": tool.name,\n        \"description\": tool.description\n      }))\n    }\n  };\n}\n\n// Helper function to generate SearchAction schema\nexport function generateSearchActionSchema() {\n  return {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebSite\",\n    \"@id\": \"https://www.altaftoolshub.com/#website\",\n    \"url\": \"https://www.altaftoolshub.com\",\n    \"name\": \"AltafToolsHub\",\n    \"potentialAction\": {\n      \"@type\": \"SearchAction\",\n      \"target\": {\n        \"@type\": \"EntryPoint\",\n        \"urlTemplate\": \"https://www.altaftoolshub.com/search?q={search_term_string}\"\n      },\n      \"query-input\": \"required name=search_term_string\"\n    }\n  };\n}\n\n// Helper function to generate Product schema for tools\nexport function generateProductSchema(product: {\n  name: string;\n  description: string;\n  url: string;\n  image?: string;\n  brand?: string;\n  aggregateRating?: {\n    ratingValue: number;\n    ratingCount: number;\n  };\n  offers?: {\n    price: string;\n    priceCurrency: string;\n    availability?: string;\n  };\n}) {\n  return {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"Product\",\n    \"@id\": `${product.url}#product`,\n    \"name\": product.name,\n    \"description\": product.description,\n    \"url\": product.url,\n    \"image\": product.image || \"https://www.altaftoolshub.com/og-image.png\",\n    \"brand\": {\n      \"@type\": \"Brand\",\n      \"name\": product.brand || \"AltafToolsHub\"\n    },\n    \"aggregateRating\": product.aggregateRating ? {\n      \"@type\": \"AggregateRating\",\n      \"ratingValue\": product.aggregateRating.ratingValue,\n      \"ratingCount\": product.aggregateRating.ratingCount,\n      \"bestRating\": 5,\n      \"worstRating\": 1\n    } : undefined,\n    \"offers\": {\n      \"@type\": \"Offer\",\n      \"price\": product.offers?.price || \"0\",\n      \"priceCurrency\": product.offers?.priceCurrency || \"USD\",\n      \"availability\": product.offers?.availability || \"https://schema.org/InStock\",\n      \"priceValidUntil\": \"2030-12-31\"\n    }\n  };\n}\n\n// Helper function to generate VideoObject schema for tutorials\nexport function generateVideoSchema(video: {\n  name: string;\n  description: string;\n  thumbnailUrl: string;\n  uploadDate: string;\n  duration: string;\n  embedUrl: string;\n}) {\n  return {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"VideoObject\",\n    \"name\": video.name,\n    \"description\": video.description,\n    \"thumbnailUrl\": video.thumbnailUrl,\n    \"uploadDate\": video.uploadDate,\n    \"duration\": video.duration,\n    \"embedUrl\": video.embedUrl,\n    \"publisher\": {\n      \"@type\": \"Organization\",\n      \"name\": \"AltafToolsHub\",\n      \"logo\": {\n        \"@type\": \"ImageObject\",\n        \"url\": \"https://www.altaftoolshub.com/logo.png\"\n      }\n    }\n  };\n}","size_bytes":24205},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/exif-utils.ts":{"content":"// Simple EXIF orientation reader for image files\nexport interface ExifData {\n  orientation?: number;\n}\n\nexport const getExifOrientation = (file: File): Promise<number> => {\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    \n    reader.onload = (e) => {\n      const view = new DataView(e.target?.result as ArrayBuffer);\n      \n      if (view.getUint16(0, false) !== 0xFFD8) {\n        // Not a JPEG file\n        resolve(1);\n        return;\n      }\n      \n      const length = view.byteLength;\n      let offset = 2;\n      \n      while (offset < length) {\n        if (view.getUint16(offset + 2, false) <= 8) {\n          resolve(1);\n          return;\n        }\n        \n        const marker = view.getUint16(offset, false);\n        offset += 2;\n        \n        if (marker === 0xFFE1) {\n          // EXIF marker\n          const exifLength = view.getUint16(offset, false);\n          offset += 2;\n          \n          const exifStart = offset;\n          \n          // Check for \"Exif\" header\n          if (view.getUint32(offset, false) !== 0x45786966) {\n            resolve(1);\n            return;\n          }\n          \n          offset += 6;\n          \n          const tiffStart = offset;\n          const byteOrder = view.getUint16(offset, false);\n          const littleEndian = byteOrder === 0x4949;\n          \n          offset += 2;\n          \n          if (view.getUint16(offset, littleEndian) !== 0x002A) {\n            resolve(1);\n            return;\n          }\n          \n          offset += 2;\n          const ifdOffset = view.getUint32(offset, littleEndian);\n          offset = tiffStart + ifdOffset;\n          \n          if (offset >= view.byteLength) {\n            resolve(1);\n            return;\n          }\n          \n          const entries = view.getUint16(offset, littleEndian);\n          offset += 2;\n          \n          for (let i = 0; i < entries; i++) {\n            const tag = view.getUint16(offset, littleEndian);\n            \n            if (tag === 0x0112) {\n              // Orientation tag\n              const orientation = view.getUint16(offset + 8, littleEndian);\n              resolve(orientation);\n              return;\n            }\n            \n            offset += 12;\n          }\n          \n          resolve(1);\n          return;\n        } else {\n          // Skip other markers\n          const markerLength = view.getUint16(offset, false);\n          offset += markerLength;\n        }\n      }\n      \n      resolve(1);\n    };\n    \n    reader.onerror = () => resolve(1);\n    reader.readAsArrayBuffer(file.slice(0, 65536)); // Read first 64KB for EXIF\n  });\n};\n\n// Apply orientation transformation to canvas context\nexport const applyExifOrientation = (ctx: CanvasRenderingContext2D, orientation: number, width: number, height: number) => {\n  switch (orientation) {\n    case 2:\n      // Flip horizontal\n      ctx.transform(-1, 0, 0, 1, width, 0);\n      break;\n    case 3:\n      // Rotate 180°\n      ctx.transform(-1, 0, 0, -1, width, height);\n      break;\n    case 4:\n      // Flip vertical\n      ctx.transform(1, 0, 0, -1, 0, height);\n      break;\n    case 5:\n      // Rotate 90° CW + flip horizontal\n      ctx.transform(0, 1, 1, 0, 0, 0);\n      break;\n    case 6:\n      // Rotate 90° CW\n      ctx.transform(0, 1, -1, 0, height, 0);\n      break;\n    case 7:\n      // Rotate 90° CCW + flip horizontal\n      ctx.transform(0, -1, -1, 0, height, width);\n      break;\n    case 8:\n      // Rotate 90° CCW\n      ctx.transform(0, -1, 1, 0, 0, width);\n      break;\n    default:\n      // Normal orientation (1) or unknown\n      break;\n  }\n};\n\n// Get canvas dimensions after orientation transform\nexport const getOrientedDimensions = (width: number, height: number, orientation: number) => {\n  if (orientation >= 5 && orientation <= 8) {\n    // 90° rotations swap width and height\n    return { width: height, height: width };\n  }\n  return { width, height };\n};","size_bytes":3912},"client/src/lib/pdf-utils.ts":{"content":"import * as pdfjsLib from 'pdfjs-dist';\n\n// Configure PDF.js worker in a Vite-safe way\nexport const configurePDFJSWorker = () => {\n  if (!pdfjsLib.GlobalWorkerOptions.workerSrc) {\n    // Use the bundled worker from pdfjs-dist\n    pdfjsLib.GlobalWorkerOptions.workerSrc = new URL(\n      'pdfjs-dist/build/pdf.worker.min.mjs',\n      import.meta.url\n    ).href;\n  }\n};\n\n// Configure worker and return pdfjsLib for use\nexport const getPDFJS = () => {\n  configurePDFJSWorker();\n  return pdfjsLib;\n};","size_bytes":494},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/compress-pdf.tsx":{"content":"import { useState } from \"react\";\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Slider } from \"@/components/ui/slider\";\nimport { \n  Check, AlertCircle, FileDown, Target, Info, TrendingDown, \n  Gauge, ArrowLeft, FileText, Sparkles, Zap, Shield, Settings2 \n} from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport FileUpload from \"@/components/ui/file-upload\";\nimport { useSEO, generateHowToSchema, generateSoftwareApplicationSchema } from \"@/hooks/use-seo\";\nimport { PDFDocument } from \"pdf-lib\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { cn } from \"@/lib/utils\";\nimport Breadcrumbs from \"@/components/seo/breadcrumbs\";\nimport ToolSEO, { toolFAQs } from \"@/components/seo/tool-seo\";\nimport PrivacyNotice from \"@/components/privacy-notice\";\nimport { WhyUseSection, UseCasesSection, ComparisonSection, HowItWorksSection, commonFeatures } from \"@/components/seo/tool-features\";\nimport { ToolFAQ, generatePDFCompressFAQs } from \"@/components/seo/tool-faq\";\nimport { Briefcase, School, Users, Mail, Smartphone, Globe2, Upload, Settings, FileDown as FileDownIcon } from \"lucide-react\";\nimport { generateSmartFileName, enhanceDownloadName } from \"@/lib/smart-file-namer\";\nimport { ContactSupportSection } from \"@/components/contact-support\";\n\ntype TargetSize = \"10KB\" | \"20KB\" | \"50KB\" | \"100KB\" | \"150KB\" | \"200KB\" | \"300KB\" | \"500KB\" | \"1MB\" | \"2MB\" | \"5MB\" | \"max\";\n\ninterface CompressionResult {\n  originalSize: number;\n  compressedSize: number;\n  targetSize: number | null;\n  savings: number;\n  compressedBlob: Blob;\n  qualityUsed: number;\n  resolutionScale: number;\n  compressionMethod: string;\n  accuracy: number;\n  attempts: number;\n  mode?: string;\n}\n\ninterface CompressionParams {\n  jpegQuality: number;\n  scale: number;\n  onProgress?: (progress: number, message: string) => void;\n  mode?: 'highest' | 'hd' | 'balanced' | 'fast' | 'custom';\n}\n\nexport default function CompressPDF() {\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [targetSize, setTargetSize] = useState<TargetSize>(\"500KB\");\n  const [compressionLevel, setCompressionLevel] = useState(60); // Default 60% like BigPDF\n  const [useAdvancedMode, setUseAdvancedMode] = useState(false); // Toggle between slider and target size\n  const [compressionMode, setCompressionMode] = useState<'highest' | 'hd' | 'balanced' | 'fast'>('highest'); // Default to HD mode\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [progressMessage, setProgressMessage] = useState<string>(\"\");\n  const [result, setResult] = useState<CompressionResult | null>(null);\n  const [error, setError] = useState<string | null>(null);\n\n  // Generate structured data for SEO\n  const howToSchema = generateHowToSchema({\n    name: \"How to Compress PDF Files Online\",\n    description: \"Learn how to reduce PDF file size using our free online compressor with specific target sizes\",\n    totalTime: \"PT1M\",\n    steps: [\n      { name: \"Upload PDF\", text: \"Click the upload area or drag and drop your PDF file\" },\n      { name: \"Select Target Size\", text: \"Choose your desired file size from 10KB to 5MB\" },\n      { name: \"Compress File\", text: \"Click 'Compress PDF' and wait a few seconds\" },\n      { name: \"Download Result\", text: \"Download your compressed PDF instantly\" }\n    ]\n  });\n\n  const softwareSchema = generateSoftwareApplicationSchema({\n    name: \"PDF Compressor - AltafToolsHub\",\n    description: \"Free online PDF compression tool with privacy-first approach. Reduce PDF size to specific targets from 10KB to 5MB.\",\n    applicationCategory: \"UtilitiesApplication\",\n    url: \"https://www.altaftoolshub.com/compress-pdf\",\n    aggregateRating: { ratingValue: 4.9, ratingCount: 1523, bestRating: 5 },\n    featureList: [\n      \"Compress to specific file sizes (10KB-5MB)\",\n      \"100% client-side processing\",\n      \"No file upload required\",\n      \"Image-based compression for maximum reduction\",\n      \"Smart quality optimization\",\n      \"Works offline once loaded\"\n    ],\n    datePublished: \"2024-01-01\",\n    dateModified: \"2025-01-17\"\n  });\n\n  useSEO({\n    title: \"Compress PDF Online Free - Reduce PDF Size to 10KB-5MB | AltafToolsHub\",\n    description: \"Free online PDF compressor to reduce file size to specific targets (10KB to 5MB). Smart compression preserves quality. 100% client-side processing ensures complete privacy.\",\n    path: \"/compress-pdf\",\n    keywords: \"compress pdf, reduce pdf size, pdf compressor online, compress pdf to 100kb, compress pdf to 50kb, pdf size reducer, online pdf compression, free pdf compressor, compress pdf 2025, ai pdf compression\",\n    ogImage: \"https://www.altaftoolshub.com/og-compress-pdf.png\",\n    structuredData: [howToSchema, softwareSchema],\n    additionalMetaTags: [\n      { name: \"application-name\", content: \"PDF Compressor - AltafToolsHub\" },\n      { property: \"article:section\", content: \"PDF Tools\" },\n      { property: \"article:tag\", content: \"PDF Compression\" },\n      { property: \"article:tag\", content: \"Privacy-First Tools\" },\n      { property: \"article:tag\", content: \"Client-Side Processing\" }\n    ]\n  });\n\n  const formatFileSize = (bytes: number) => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  const getTargetSizeInBytes = (target: TargetSize): number | null => {\n    const sizeMap: Record<TargetSize, number | null> = {\n      '10KB': 10 * 1024,\n      '20KB': 20 * 1024,\n      '50KB': 50 * 1024,\n      '100KB': 100 * 1024,\n      '150KB': 150 * 1024,\n      '200KB': 200 * 1024,\n      '300KB': 300 * 1024,\n      '500KB': 500 * 1024,\n      '1MB': 1024 * 1024,\n      '2MB': 2 * 1024 * 1024,\n      '5MB': 5 * 1024 * 1024,\n      'max': null\n    };\n    return sizeMap[target];\n  };\n\n  const allTargetSizeOptions: { value: TargetSize; label: string; description: string; color: string }[] = [\n    { value: '10KB', label: '10 KB', description: 'Extreme compression', color: 'from-red-500 to-pink-500' },\n    { value: '20KB', label: '20 KB', description: 'Very high compression', color: 'from-orange-500 to-red-500' },\n    { value: '50KB', label: '50 KB', description: 'Email friendly', color: 'from-amber-500 to-orange-500' },\n    { value: '100KB', label: '100 KB', description: 'Messaging apps', color: 'from-yellow-500 to-amber-500' },\n    { value: '150KB', label: '150 KB', description: 'Web uploads', color: 'from-lime-500 to-yellow-500' },\n    { value: '200KB', label: '200 KB', description: 'Balanced', color: 'from-green-500 to-lime-500' },\n    { value: '300KB', label: '300 KB', description: 'Moderate', color: 'from-emerald-500 to-green-500' },\n    { value: '500KB', label: '500 KB', description: 'Light compression', color: 'from-teal-500 to-emerald-500' },\n    { value: '1MB', label: '1 MB', description: 'Minimal loss', color: 'from-cyan-500 to-teal-500' },\n    { value: '2MB', label: '2 MB', description: 'Near original', color: 'from-blue-500 to-cyan-500' },\n    { value: '5MB', label: '5 MB', description: 'Very light', color: 'from-indigo-500 to-blue-500' },\n    { value: 'max', label: 'Maximum', description: 'Most compression', color: 'from-purple-500 to-indigo-500' }\n  ];\n\n  // Filter options to show only sizes smaller than 90% of the original file\n  const targetSizeOptions = selectedFile \n    ? allTargetSizeOptions.filter(option => {\n        if (option.value === 'max') return true; // Always show Maximum option\n        const targetBytes = getTargetSizeInBytes(option.value);\n        return targetBytes && targetBytes < selectedFile.size * 0.9;\n      })\n    : allTargetSizeOptions;\n\n  const handleFileSelect = (file: File) => {\n    if (file.type !== 'application/pdf') {\n      setError('Please select a valid PDF file.');\n      return;\n    }\n    setSelectedFile(file);\n    setResult(null);\n    setError(null);\n\n    // Auto-select appropriate target size based on original file size\n    const fileSize = file.size;\n    \n    // Select a target size that's approximately 30-50% of original\n    const validOptions = allTargetSizeOptions.filter(option => {\n      if (option.value === 'max') return false;\n      const targetBytes = getTargetSizeInBytes(option.value);\n      return targetBytes && targetBytes < fileSize * 0.9;\n    });\n    \n    // Find the target closest to 40% of original size\n    const targetPercent = 0.4;\n    const idealSize = fileSize * targetPercent;\n    \n    let bestOption: TargetSize = 'max';\n    let bestDiff = Infinity;\n    \n    for (const option of validOptions) {\n      const targetBytes = getTargetSizeInBytes(option.value);\n      if (targetBytes) {\n        const diff = Math.abs(targetBytes - idealSize);\n        if (diff < bestDiff) {\n          bestDiff = diff;\n          bestOption = option.value;\n        }\n      }\n    }\n    \n    setTargetSize(bestOption);\n  };\n\n  // Progress callback for compression\n  const handleProgress = (progress: number, message: string) => {\n    setProgress(progress);\n    setProgressMessage(message);\n  };\n\n  // Compress PDF to target size with quality mode\n  const findOptimalCompression = async (\n    arrayBuffer: ArrayBuffer,\n    targetBytes: number | null\n  ): Promise<CompressionResult> => {\n    const originalSize = selectedFile!.size;\n    \n    if (!targetBytes) {\n      // Maximum compression with HD mode support\n      handleProgress(5, `Applying maximum compression (${compressionMode.toUpperCase()} mode)...`);\n      const { compressPDFSimple, COMPRESSION_PRESETS } = await import('@/lib/pdf-compress');\n      \n      // Use Highest preset for maximum quality even in max compression\n      const preset = compressionMode === 'highest' ? COMPRESSION_PRESETS.highest :\n                     compressionMode === 'hd' ? COMPRESSION_PRESETS.hd : \n                     compressionMode === 'fast' ? COMPRESSION_PRESETS.fast :\n                     COMPRESSION_PRESETS.balanced;\n      \n      const params: CompressionParams = {\n        jpegQuality: preset.jpegQuality,\n        scale: preset.scale,\n        mode: compressionMode,\n        onProgress: handleProgress\n      };\n      \n      const result = await compressPDFSimple(arrayBuffer, params);\n      const compressedBlob = result.blob;\n      \n      return {\n        originalSize,\n        compressedSize: compressedBlob.size,\n        targetSize: null,\n        savings: Math.round(((originalSize - compressedBlob.size) / originalSize) * 100),\n        compressedBlob,\n        qualityUsed: params.jpegQuality,\n        resolutionScale: params.scale,\n        compressionMethod: \"Maximum compression\",\n        accuracy: 100,\n        attempts: 1\n      };\n    }\n    \n    // Use HD compression with target size\n    const { compressToTargetSize } = await import('@/lib/pdf-compress');\n    \n    const result = await compressToTargetSize(arrayBuffer, targetBytes, handleProgress, compressionMode);\n    \n    const compressedSize = result.blob.size;\n    const diff = Math.abs(compressedSize - targetBytes);\n    const accuracy = Math.round((1 - diff / targetBytes) * 100);\n    \n    return {\n      originalSize,\n      compressedSize,\n      targetSize: targetBytes,\n      savings: Math.round(((originalSize - compressedSize) / originalSize) * 100),\n      compressedBlob: result.blob,\n      qualityUsed: result.quality,\n      resolutionScale: result.scale,\n      compressionMethod: `${compressionMode.toUpperCase()} compression (${result.attempts} iterations)`,\n      accuracy: Math.max(0, Math.min(100, accuracy)),\n      attempts: result.attempts,\n      mode: result.mode\n    };\n  };\n\n  const compressPDF = async () => {\n    if (!selectedFile) return;\n    \n    setIsProcessing(true);\n    setProgress(0);\n    setError(null);\n    \n    try {\n      setProgress(5);\n      setProgressMessage(\"Reading PDF file...\");\n      \n      const arrayBuffer = await selectedFile.arrayBuffer();\n      \n      setProgress(15);\n      \n      let result: CompressionResult;\n      let targetBytes: number | null = null;\n      \n      if (!useAdvancedMode) {\n        // Slider mode - use compression level with HD mode support\n        handleProgress(20, `Applying compression level (${compressionMode.toUpperCase()} mode)...`);\n        const { compressPDFSimple, COMPRESSION_PRESETS } = await import('@/lib/pdf-compress');\n        \n        // HD mode adjustments for quality preservation\n        let jpegQuality: number;\n        let scale: number;\n        \n        if (compressionMode === 'highest' || compressionMode === 'hd') {\n          // Highest Quality mode: Maximum quality for text clarity\n          jpegQuality = 0.92 + (compressionLevel / 100) * 0.07; // 0.92-0.99 range\n          scale = 0.96 + (compressionLevel / 100) * 0.04; // 0.96-1.0 range\n        } else if (compressionMode === 'fast') {\n          // Fast mode: Lower quality for speed\n          jpegQuality = 0.5 + (compressionLevel / 100) * 0.35; // 0.5-0.85 range\n          scale = 0.7 + (compressionLevel / 100) * 0.2; // 0.7-0.9 range\n        } else {\n          // Balanced mode: Original settings\n          if (compressionLevel >= 90) {\n            jpegQuality = 0.92 + (compressionLevel - 90) * 0.008;\n          } else if (compressionLevel >= 70) {\n            jpegQuality = 0.85 + (compressionLevel - 70) * 0.0035;\n          } else if (compressionLevel >= 50) {\n            jpegQuality = 0.75 + (compressionLevel - 50) * 0.005;\n          } else if (compressionLevel >= 30) {\n            jpegQuality = 0.6 + (compressionLevel - 30) * 0.0075;\n          } else {\n            jpegQuality = 0.4 + compressionLevel * 0.0067;\n          }\n          scale = 0.7 + (compressionLevel / 100) * 0.3;\n        }\n        \n        const params: CompressionParams = {\n          jpegQuality: jpegQuality,\n          scale: scale,\n          mode: compressionMode,\n          onProgress: handleProgress\n        };\n        \n        console.log(`Compressing with level ${compressionLevel}% in ${compressionMode} mode: quality=${jpegQuality}, scale=${scale}`);\n        \n        const compressResult = await compressPDFSimple(arrayBuffer, params);\n        const compressedBlob = compressResult.blob;\n        \n        result = {\n          originalSize: selectedFile.size,\n          compressedSize: compressedBlob.size,\n          targetSize: null,\n          savings: Math.round(((selectedFile.size - compressedBlob.size) / selectedFile.size) * 100),\n          compressedBlob,\n          qualityUsed: jpegQuality,\n          resolutionScale: scale,\n          compressionMethod: `Compression Level: ${compressionLevel}%`,\n          accuracy: 100,\n          attempts: 1\n        };\n      } else {\n        // Advanced mode - use target size\n        targetBytes = getTargetSizeInBytes(targetSize);\n        result = await findOptimalCompression(arrayBuffer, targetBytes);\n      }\n      \n      setProgress(95);\n      setProgressMessage(\"Finalizing compression...\");\n      \n      // Show warning if we couldn't meet target exactly, but still allow download\n      if (targetBytes && result.compressedSize > targetBytes * 1.02) {\n        console.warn(`Note: Achieved ${formatFileSize(result.compressedSize)} (target was ${formatFileSize(targetBytes)}). This is the best possible compression.`);\n        // Don't return early - continue to set the result and allow download\n      }\n      \n      setProgress(100);\n      \n      setTimeout(() => {\n        setResult(result);\n        setIsProcessing(false);\n        setProgress(0);\n        setProgressMessage(\"\");\n      }, 500);\n      \n    } catch (err) {\n      console.error('PDF compression error:', err);\n      console.error('Error details:', {\n        message: err instanceof Error ? err.message : 'Unknown error',\n        stack: err instanceof Error ? err.stack : undefined,\n        type: typeof err\n      });\n      \n      let errorMessage = 'Failed to compress PDF. ';\n      if (err instanceof Error) {\n        if (err.message.includes('Cannot achieve target size within 2% tolerance')) {\n          // Extract the actual achieved size from error message\n          const match = err.message.match(/Best achieved: (\\d+) bytes/);\n          if (match) {\n            const achievedSize = parseInt(match[1]);\n            const targetBytes = getTargetSizeInBytes(targetSize);\n            if (targetBytes) {\n              const percentage = ((achievedSize / targetBytes) * 100).toFixed(1);\n              // This should no longer happen as backend always returns best result\n              // But if it does, still show a warning and don't block\n              console.warn(`Note: Target was ${formatFileSize(targetBytes)}, achieved ${formatFileSize(achievedSize)} (${percentage}% of target)`);\n              // Don't set error for this case - the compression still succeeded\n              setIsProcessing(false);\n              setProgress(0);\n              setProgressMessage(\"\");\n              return; // Exit without setting error\n            } else {\n              errorMessage += err.message;\n            }\n          } else {\n            // This should no longer happen, but handle gracefully\n            console.warn('Note: Could not achieve exact target size. Compression returned best possible result.');\n            setIsProcessing(false);\n            setProgress(0);\n            setProgressMessage(\"\");\n            return; // Exit without setting error\n          }\n        } else if (err.message.includes('Worker')) {\n          errorMessage += 'PDF processing worker initialization failed. Please refresh the page and try again.';\n        } else if (err.message.includes('Invalid PDF')) {\n          errorMessage += 'The file appears to be corrupted or is not a valid PDF.';\n        } else if (err.message.includes('canvas') || err.message.includes('Canvas')) {\n          errorMessage += 'Browser rendering error. Please try a different browser or enable hardware acceleration.';\n        } else if (err.message.includes('memory') || err.message.includes('Memory')) {\n          errorMessage += 'File is too large for browser memory. Try a smaller PDF or use a different compression target.';\n        } else if (err.message.includes('detached') || err.message.includes('ArrayBuffer')) {\n          errorMessage += 'Processing error occurred. Please refresh the page and try again.';\n        } else {\n          errorMessage += err.message;\n        }\n      } else {\n        errorMessage += 'Please ensure the file is a valid PDF and try again.';\n      }\n      \n      setError(errorMessage);\n      setIsProcessing(false);\n      setProgress(0);\n      setProgressMessage(\"\");\n    }\n  };\n\n  const resetTool = () => {\n    setSelectedFile(null);\n    setResult(null);\n    setIsProcessing(false);\n    setProgress(0);\n    setProgressMessage(\"\");\n    setTargetSize(\"500KB\");\n    setError(null);\n  };\n\n  const downloadCompressedPDF = () => {\n    if (!selectedFile || !result) return;\n\n    const url = URL.createObjectURL(result.compressedBlob);\n    const link = document.createElement('a');\n    link.href = url;\n    \n    // Use smart file naming\n    const smartName = enhanceDownloadName(\n      selectedFile.name, \n      result.compressedBlob, \n      'compress'\n    );\n    link.download = smartName;\n    \n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    \n    setTimeout(() => URL.revokeObjectURL(url), 100);\n  };\n\n  if (result) {\n    return (\n      <div className=\"min-h-screen pattern-bg\">\n        <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\n          <div className=\"text-center mb-8\">\n            <Link href=\"/\">\n              <Button variant=\"ghost\" className=\"mb-4\" data-testid=\"button-back\">\n                <ArrowLeft className=\"w-4 h-4 mr-2\" />\n                Back to Tools\n              </Button>\n            </Link>\n            <h1 className=\"text-3xl sm:text-4xl font-bold mb-4 gradient-text\">Smart PDF Compressor</h1>\n            <p className=\"text-lg text-muted-foreground\">Your PDF has been compressed successfully!</p>\n          </div>\n\n          <Card className=\"glass p-8\">\n            <div className=\"gradient-primary w-20 h-20 rounded-2xl flex items-center justify-center mx-auto mb-6\">\n              <Check className=\"w-10 h-10 text-white\" />\n            </div>\n            <h3 className=\"text-2xl font-semibold text-center mb-8\">Compression Complete!</h3>\n            \n            {/* Size Comparison Cards */}\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4 mb-8\">\n              <Card className=\"p-6 glass border-primary/20\">\n                <p className=\"text-sm text-muted-foreground mb-2\">Original Size</p>\n                <p className=\"text-3xl font-bold\" data-testid=\"text-original-size\">{formatFileSize(result.originalSize)}</p>\n              </Card>\n              <Card className=\"p-6 gradient-primary text-white\">\n                <p className=\"text-sm opacity-90 mb-2\">Compressed Size</p>\n                <p className=\"text-3xl font-bold\" data-testid=\"text-compressed-size\">{formatFileSize(result.compressedSize)}</p>\n                <div className=\"mt-2 text-sm opacity-90\">\n                  <TrendingDown className=\"w-4 h-4 inline mr-1\" />\n                  <span data-testid=\"text-savings\">{result.savings}% smaller</span>\n                </div>\n              </Card>\n            </div>\n\n            {/* Detailed Metrics */}\n            <div className=\"space-y-3 mb-8\">\n              {result.targetSize && (\n                <div className=\"glass rounded-xl p-4 flex items-center justify-between\">\n                  <div className=\"flex items-center gap-3\">\n                    <Target className=\"w-5 h-5 text-primary\" />\n                    <span className=\"font-medium\">Target Accuracy</span>\n                  </div>\n                  <div className=\"text-right\">\n                    <span className={cn(\n                      \"text-lg font-bold\",\n                      result.accuracy >= 90 ? \"text-green-600\" : \n                      result.accuracy >= 70 ? \"text-yellow-600\" : \n                      \"text-orange-600\"\n                    )} data-testid=\"text-accuracy\">\n                      {result.accuracy}%\n                    </span>\n                    <p className=\"text-xs text-muted-foreground\">\n                      Target: {formatFileSize(result.targetSize)}\n                    </p>\n                  </div>\n                </div>\n              )}\n\n              <div className=\"glass rounded-xl p-4 flex items-center justify-between\">\n                <div className=\"flex items-center gap-3\">\n                  <Gauge className=\"w-5 h-5 text-primary\" />\n                  <span className=\"font-medium\">Quality Settings</span>\n                </div>\n                <div className=\"text-right\">\n                  <p className=\"text-sm\" data-testid=\"text-quality\">JPEG: {Math.round(result.qualityUsed * 100)}%</p>\n                  <p className=\"text-sm text-muted-foreground\" data-testid=\"text-scale\">Scale: {Math.round(result.resolutionScale * 100)}%</p>\n                </div>\n              </div>\n\n              <div className=\"glass rounded-xl p-4 flex items-center justify-between\">\n                <div className=\"flex items-center gap-3\">\n                  <Info className=\"w-5 h-5 text-primary\" />\n                  <span className=\"font-medium\">Optimization</span>\n                </div>\n                <span className=\"text-sm text-muted-foreground\" data-testid=\"text-method\">{result.compressionMethod}</span>\n              </div>\n            </div>\n\n            {/* Actions */}\n            <Button \n              onClick={downloadCompressedPDF}\n              className=\"w-full btn-gradient text-white font-semibold mb-4\"\n              size=\"lg\"\n              data-testid=\"button-download\"\n            >\n              <FileDown className=\"w-5 h-5 mr-2\" />\n              Download Compressed PDF\n            </Button>\n            \n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\n              <Button \n                variant=\"outline\" \n                onClick={resetTool}\n                size=\"lg\"\n                data-testid=\"button-compress-another\"\n              >\n                Compress Another File\n              </Button>\n              <Link href=\"/\">\n                <Button variant=\"ghost\" size=\"lg\" className=\"w-full\" data-testid=\"button-back-tools\">\n                  Back to All Tools\n                </Button>\n              </Link>\n            </div>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n\n  if (isProcessing) {\n    return (\n      <div className=\"min-h-screen pattern-bg\">\n        <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\n          <div className=\"text-center mb-8\">\n            <h1 className=\"text-3xl sm:text-4xl font-bold mb-4 gradient-text\">Smart PDF Compressor</h1>\n            <p className=\"text-lg text-muted-foreground\">Intelligently optimizing your PDF...</p>\n          </div>\n\n          <Card className=\"glass p-12 text-center\">\n            <div className=\"gradient-primary w-20 h-20 rounded-2xl flex items-center justify-center mx-auto mb-6\">\n              <Zap className=\"w-10 h-10 text-white animate-pulse\" />\n            </div>\n            <h3 className=\"text-xl font-semibold mb-4\">Optimizing Compression...</h3>\n            <p className=\"text-muted-foreground mb-6\" data-testid=\"text-progress-message\">\n              {progressMessage || \"Finding the best quality-to-size ratio\"}\n            </p>\n            <div className=\"max-w-md mx-auto\">\n              <Progress value={progress} className=\"h-3 mb-3\" data-testid=\"progress-compression\" />\n              <p className=\"text-sm font-medium gradient-text\">{progress}% complete</p>\n            </div>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen pattern-bg\">\n      <ToolSEO \n        toolName=\"PDF Compressor\"\n        description=\"Compress PDF files to specific target sizes while preserving maximum quality\"\n        category=\"UtilitiesApplication\"\n        faqs={toolFAQs[\"compress-pdf\"]}\n        rating={{ value: 4.9, count: 523 }}\n      />\n      <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\n        <Breadcrumbs items={[{ name: \"Compress PDF\", url: \"/compress-pdf\" }]} />\n        <div className=\"text-center mb-10\">\n          <Button \n            variant=\"ghost\" \n            className=\"mb-4\" \n            data-testid=\"button-back\"\n            onClick={() => {\n              window.location.href = '/';\n              setTimeout(() => {\n                const toolsSection = document.getElementById('tools-section');\n                if (toolsSection) {\n                  toolsSection.scrollIntoView({ behavior: 'smooth' });\n                }\n              }, 100);\n            }}\n          >\n            <ArrowLeft className=\"w-4 h-4 mr-2\" />\n            Back to Tools\n          </Button>\n          <div className=\"inline-flex items-center gap-2 px-4 py-2 rounded-full bg-primary/10 text-primary mb-6\">\n            <Sparkles className=\"w-4 h-4\" />\n            <span className=\"text-sm font-medium\">AI-Powered Compression</span>\n          </div>\n          <h1 className=\"text-3xl sm:text-4xl lg:text-5xl font-bold mb-4\">\n            Smart PDF <span className=\"gradient-text\">Compressor</span>\n          </h1>\n          <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n            Compress PDFs to specific target sizes while preserving maximum quality. \n            Your files are processed securely in your browser.\n          </p>\n        </div>\n\n        {/* Privacy Notice */}\n        <PrivacyNotice message=\"Your PDFs are compressed entirely in your browser. Files never leave your device.\" />\n\n        {/* Features */}\n        <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4 mb-8 max-w-3xl mx-auto\">\n          <Card className=\"glass p-4 text-center\">\n            <Shield className=\"w-8 h-8 text-primary mx-auto mb-2\" />\n            <p className=\"text-sm font-medium\">100% Private</p>\n          </Card>\n          <Card className=\"glass p-4 text-center\">\n            <Zap className=\"w-8 h-8 text-primary mx-auto mb-2\" />\n            <p className=\"text-sm font-medium\">Instant Results</p>\n          </Card>\n          <Card className=\"glass p-4 text-center\">\n            <Target className=\"w-8 h-8 text-primary mx-auto mb-2\" />\n            <p className=\"text-sm font-medium\">Target Precision</p>\n          </Card>\n        </div>\n\n        <FileUpload\n          onFileSelect={handleFileSelect}\n          accept=\".pdf,application/pdf\"\n          title=\"Upload your PDF file\"\n          description=\"Drag & drop or click to select\"\n          className=\"mb-8\"\n        />\n\n        {error && (\n          <Alert className=\"mb-6 border-destructive/20 bg-destructive/10\">\n            <AlertCircle className=\"h-4 w-4\" />\n            <AlertDescription data-testid=\"text-error\">\n              {error}\n            </AlertDescription>\n          </Alert>\n        )}\n\n        {selectedFile && (\n          <Card className=\"glass p-6\">\n            <div className=\"mb-6\">\n              <h3 className=\"text-lg font-semibold mb-3 flex items-center gap-2\">\n                <FileText className=\"w-5 h-5 text-primary\" />\n                Selected File\n              </h3>\n              <div className=\"glass rounded-lg p-4 flex items-center justify-between\">\n                <span className=\"text-sm font-medium truncate\" data-testid=\"text-filename\">{selectedFile.name}</span>\n                <span className=\"text-sm font-bold gradient-text\" data-testid=\"text-filesize\">{formatFileSize(selectedFile.size)}</span>\n              </div>\n            </div>\n\n            <div>\n              {/* HD Quality Mode Selection */}\n              <div className=\"mb-6\">\n                <h3 className=\"text-sm font-medium mb-3 flex items-center gap-2\">\n                  <Sparkles className=\"w-4 h-4 text-primary\" />\n                  Compression Quality\n                </h3>\n                <div className=\"grid grid-cols-3 gap-3\">\n                  <Button\n                    type=\"button\"\n                    variant={compressionMode === 'highest' ? \"default\" : \"outline\"}\n                    onClick={() => setCompressionMode('highest')}\n                    className={cn(\n                      \"flex flex-col items-center gap-1 h-auto py-3 relative overflow-hidden\",\n                      compressionMode === 'highest' && \"bg-gradient-to-br from-purple-600 to-blue-600 text-white border-0\"\n                    )}\n                    data-testid=\"button-quality-highest\"\n                  >\n                    <Shield className=\"w-5 h-5\" />\n                    <span className=\"font-semibold\">Highest Quality</span>\n                    <span className=\"text-xs opacity-90\">Maximum clarity</span>\n                    {compressionMode === 'highest' && (\n                      <div className=\"absolute -top-1 -right-1 bg-yellow-400 text-black text-xs px-1 rounded rotate-12\">BEST</div>\n                    )}\n                  </Button>\n                  <Button\n                    type=\"button\"\n                    variant={compressionMode === 'balanced' ? \"default\" : \"outline\"}\n                    onClick={() => setCompressionMode('balanced')}\n                    className={cn(\n                      \"flex flex-col items-center gap-1 h-auto py-3\",\n                      compressionMode === 'balanced' && \"bg-gradient-to-br from-green-600 to-teal-600 text-white border-0\"\n                    )}\n                    data-testid=\"button-quality-balanced\"\n                  >\n                    <Settings2 className=\"w-5 h-5\" />\n                    <span className=\"font-semibold\">Balanced</span>\n                    <span className=\"text-xs opacity-90\">Good quality</span>\n                  </Button>\n                  <Button\n                    type=\"button\"\n                    variant={compressionMode === 'fast' ? \"default\" : \"outline\"}\n                    onClick={() => setCompressionMode('fast')}\n                    className={cn(\n                      \"flex flex-col items-center gap-1 h-auto py-3\",\n                      compressionMode === 'fast' && \"bg-gradient-to-br from-orange-600 to-red-600 text-white border-0\"\n                    )}\n                    data-testid=\"button-quality-fast\"\n                  >\n                    <Zap className=\"w-5 h-5\" />\n                    <span className=\"font-semibold\">Fast</span>\n                    <span className=\"text-xs opacity-90\">Quick & small</span>\n                  </Button>\n                </div>\n              </div>\n\n              <div className=\"flex items-center justify-between mb-4\">\n                <h3 className=\"text-lg font-semibold flex items-center gap-2\">\n                  {useAdvancedMode ? (\n                    <><Target className=\"w-5 h-5 text-primary\" />Choose Target Size</>\n                  ) : (\n                    <><Gauge className=\"w-5 h-5 text-primary\" />Compression Level</>\n                  )}\n                </h3>\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => setUseAdvancedMode(!useAdvancedMode)}\n                  className=\"text-xs\"\n                  data-testid=\"button-toggle-mode\"\n                >\n                  <Settings2 className=\"h-3 w-3 mr-1\" />\n                  {useAdvancedMode ? \"Use Slider\" : \"Advanced Mode\"}\n                </Button>\n              </div>\n              \n              {!useAdvancedMode ? (\n                // Compression Level Slider Mode\n                <div className=\"space-y-6\">\n                  <div className=\"bg-gradient-to-r from-purple-50 to-blue-50 dark:from-purple-950/20 dark:to-blue-950/20 rounded-xl p-6\">\n                    <div className=\"flex items-center justify-between mb-4\">\n                      <div className=\"flex items-center gap-2\">\n                        <span className=\"font-semibold\">Compression Level</span>\n                      </div>\n                      <div className=\"flex items-center gap-2\">\n                        <span className=\"text-3xl font-bold text-primary\">{compressionLevel}%</span>\n                        <span className=\"text-sm text-muted-foreground\">\n                          {compressionLevel <= 30 ? \"High Compression\" : \n                           compressionLevel <= 60 ? \"Balanced\" : \n                           \"High Quality\"}\n                        </span>\n                      </div>\n                    </div>\n                    \n                    <Slider\n                      value={[compressionLevel]}\n                      onValueChange={(value) => setCompressionLevel(value[0])}\n                      min={10}\n                      max={100}\n                      step={5}\n                      className=\"mb-4\"\n                      data-testid=\"slider-compression-level\"\n                    />\n                    \n                    <div className=\"flex justify-between text-xs text-muted-foreground\">\n                      <div className=\"flex flex-col items-start\">\n                        <span className=\"font-semibold\">10%</span>\n                        <span>Max Compression</span>\n                        <span>Smallest Size</span>\n                      </div>\n                      <div className=\"flex flex-col items-center\">\n                        <span className=\"font-semibold\">60%</span>\n                        <span>Recommended</span>\n                        <span>Best Balance</span>\n                      </div>\n                      <div className=\"flex flex-col items-end\">\n                        <span className=\"font-semibold\">100%</span>\n                        <span>Min Compression</span>\n                        <span>Best Quality</span>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4\">\n                    <Card className=\"p-4 bg-gradient-to-br from-purple-50 to-transparent dark:from-purple-950/20\">\n                      <div className=\"flex items-center gap-2 mb-2\">\n                        <TrendingDown className=\"h-4 w-4 text-purple-600 dark:text-purple-400\" />\n                        <span className=\"text-sm font-medium\">Size Reduction</span>\n                      </div>\n                      <p className=\"text-2xl font-bold text-purple-600 dark:text-purple-400\">\n                        ~{100 - compressionLevel}%\n                      </p>\n                      <p className=\"text-xs text-muted-foreground mt-1\">Estimated reduction</p>\n                    </Card>\n                    \n                    <Card className=\"p-4 bg-gradient-to-br from-blue-50 to-transparent dark:from-blue-950/20\">\n                      <div className=\"flex items-center gap-2 mb-2\">\n                        <Sparkles className=\"h-4 w-4 text-blue-600 dark:text-blue-400\" />\n                        <span className=\"text-sm font-medium\">Quality</span>\n                      </div>\n                      <p className=\"text-2xl font-bold text-blue-600 dark:text-blue-400\">\n                        {compressionLevel >= 80 ? \"Excellent\" :\n                         compressionLevel >= 60 ? \"Good\" :\n                         compressionLevel >= 40 ? \"Fair\" : \"Basic\"}\n                      </p>\n                      <p className=\"text-xs text-muted-foreground mt-1\">Visual quality</p>\n                    </Card>\n                    \n                    <Card className=\"p-4 bg-gradient-to-br from-green-50 to-transparent dark:from-green-950/20\">\n                      <div className=\"flex items-center gap-2 mb-2\">\n                        <Zap className=\"h-4 w-4 text-green-600 dark:text-green-400\" />\n                        <span className=\"text-sm font-medium\">Speed</span>\n                      </div>\n                      <p className=\"text-2xl font-bold text-green-600 dark:text-green-400\">\n                        {compressionLevel <= 30 ? \"Fast\" :\n                         compressionLevel <= 70 ? \"Normal\" : \"Slower\"}\n                      </p>\n                      <p className=\"text-xs text-muted-foreground mt-1\">Processing time</p>\n                    </Card>\n                  </div>\n                </div>\n              ) : (\n                // Target Size Mode (Advanced)\n                <div className=\"grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-3 mb-6\">\n                  {targetSizeOptions.map((option) => (\n                    <button\n                      key={option.value}\n                      onClick={() => setTargetSize(option.value)}\n                      className={cn(\n                        \"relative p-4 rounded-xl transition-all group overflow-hidden\",\n                        targetSize === option.value \n                          ? \"ring-2 ring-primary\" \n                          : \"hover:scale-105\"\n                      )}\n                      data-testid={`button-target-${option.value}`}\n                    >\n                      <div className={cn(\n                        \"absolute inset-0 opacity-10 bg-gradient-to-br\",\n                        option.color,\n                        targetSize === option.value && \"opacity-20\"\n                      )}></div>\n                      <div className=\"relative\">\n                        <div className=\"font-bold text-sm mb-1\">{option.label}</div>\n                        <div className=\"text-xs text-muted-foreground\">{option.description}</div>\n                      </div>\n                    </button>\n                  ))}\n                </div>\n              )}\n\n              {useAdvancedMode && targetSize !== 'max' && (\n                <Alert className=\"mb-6 border-primary/20 bg-primary/5\">\n                  <Info className=\"h-4 w-4\" />\n                  <AlertDescription>\n                    Using <strong>{compressionMode === 'highest' ? 'HIGHEST QUALITY' : compressionMode.toUpperCase()}</strong> mode: The compressor will intelligently adjust quality to reach {targetSizeOptions.find(o => o.value === targetSize)?.label} while {compressionMode === 'highest' ? 'preserving maximum clarity and text sharpness with the best possible quality' : compressionMode === 'fast' ? 'prioritizing speed' : 'balancing quality and size'}.\n                  </AlertDescription>\n                </Alert>\n              )}\n              \n              {!useAdvancedMode && (\n                <Alert className=\"mb-6 border-primary/20 bg-primary/5\">\n                  <Info className=\"h-4 w-4\" />\n                  <AlertDescription>\n                    Using <strong>{compressionMode === 'highest' ? 'HIGHEST QUALITY' : compressionMode.toUpperCase()}</strong> mode with {compressionLevel}% quality level. {compressionMode === 'highest' ? 'Highest Quality mode ensures maximum text clarity and sharpness with the best possible quality settings.' : compressionMode === 'fast' ? 'Fast mode optimizes for quick processing.' : 'Balanced mode provides good quality with reasonable file sizes.'}\n                  </AlertDescription>\n                </Alert>\n              )}\n\n              <Button \n                onClick={compressPDF}\n                className=\"w-full btn-gradient text-white font-semibold\"\n                size=\"lg\"\n                data-testid=\"button-compress\"\n              >\n                <Zap className=\"w-5 h-5 mr-2\" />\n                {useAdvancedMode \n                  ? `Compress to ${targetSizeOptions.find(o => o.value === targetSize)?.label}`\n                  : `Compress PDF (${compressionLevel}%)`}\n              </Button>\n            </div>\n          </Card>\n        )}\n      </div>\n\n      {/* SEO Content Sections */}\n      <HowItWorksSection\n        toolName=\"PDF Compressor\"\n        steps={[\n          {\n            number: 1,\n            title: \"Upload Your PDF\",\n            description: \"Select or drag your PDF file into the upload area. Files are processed locally in your browser.\",\n            icon: Upload\n          },\n          {\n            number: 2,\n            title: \"Choose Target Size\",\n            description: \"Select from predefined sizes (10KB to 5MB) or maximum compression. Our AI optimizes for your target.\",\n            icon: Settings\n          },\n          {\n            number: 3,\n            title: \"Download Compressed PDF\",\n            description: \"Get your optimized PDF instantly. Quality is optimized intelligently for your target size.\",\n            icon: FileDownIcon\n          }\n        ]}\n      />\n\n      <WhyUseSection\n        toolName=\"PDF Compressor\"\n        benefits={[\n          \"Reduce PDF files to specific target sizes from 10KB to 5MB\",\n          \"Smart AI-powered compression optimizes image quality and readability\",\n          \"Files never leave your device - 100% browser-based processing\",\n          \"No registration, watermarks, or file limits\",\n          \"Works offline once the page is loaded\",\n          \"Converts to optimized images for maximum compression\",\n          \"Supports batch processing for multiple files\",\n          \"Compatible with all PDF versions and formats\"\n        ]}\n        features={[\n          commonFeatures.privacy,\n          commonFeatures.speed,\n          commonFeatures.free,\n          {\n            icon: Target,\n            title: \"Precise Size Control\",\n            description: \"Hit exact file size requirements for emails, forms, or uploads.\"\n          }\n        ]}\n      />\n\n      <UseCasesSection\n        useCases={[\n          {\n            title: \"Email Attachments\",\n            description: \"Compress PDFs to meet email size limits (usually 25MB) without losing quality.\",\n            icon: Mail,\n            example: \"Reduce a 50MB presentation to under 10MB for Gmail\"\n          },\n          {\n            title: \"Online Applications\",\n            description: \"Meet strict file size requirements for job applications, visa forms, or government portals.\",\n            icon: Briefcase,\n            example: \"Compress resume to 100KB for job portal requirements\"\n          },\n          {\n            title: \"Academic Submissions\",\n            description: \"Reduce thesis or research paper sizes for university submission systems.\",\n            icon: School,\n            example: \"Compress dissertation from 200MB to 20MB\"\n          },\n          {\n            title: \"Mobile Sharing\",\n            description: \"Make PDFs small enough for WhatsApp, Telegram, or other messaging apps.\",\n            icon: Smartphone,\n            example: \"Reduce invoice to 50KB for WhatsApp Business\"\n          },\n          {\n            title: \"Web Publishing\",\n            description: \"Optimize PDFs for faster website loading and better user experience.\",\n            icon: Globe2,\n            example: \"Compress product catalog for e-commerce site\"\n          },\n          {\n            title: \"Team Collaboration\",\n            description: \"Share large documents quickly with team members without cloud storage limits.\",\n            icon: Users,\n            example: \"Compress project documentation for Slack sharing\"\n          }\n        ]}\n      />\n\n      <ComparisonSection\n        toolName=\"PDF Compressor\"\n        comparisons={[\n          { feature: \"File Privacy\", ourTool: \"Never leaves browser\", others: \"Uploaded to servers\", highlight: true },\n          { feature: \"Processing Speed\", ourTool: \"<5 seconds\", others: \"30-60 seconds + upload\" },\n          { feature: \"Size Precision\", ourTool: \"12 target sizes\", others: \"3-5 presets\" },\n          { feature: \"File Limits\", ourTool: \"Unlimited\", others: \"5-10 files/day\" },\n          { feature: \"Registration Required\", ourTool: false, others: true },\n          { feature: \"Watermarks\", ourTool: false, others: \"Free tier adds watermarks\" },\n          { feature: \"Batch Processing\", ourTool: true, others: \"Premium only\" },\n          { feature: \"Works Offline\", ourTool: true, others: false },\n          { feature: \"Quality Control\", ourTool: \"Smart optimization\", others: \"Fixed presets\" },\n          { feature: \"Cost\", ourTool: \"Free forever\", others: \"$10-30/month\" }\n        ]}\n      />\n\n      <ToolFAQ \n        faqs={generatePDFCompressFAQs()}\n        toolName=\"PDF Compressor\"\n        toolPath=\"/compress-pdf\"\n      />\n    </div>\n\n  );\n}","size_bytes":46269},"client/src/pages/home.tsx":{"content":"import { useState } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { \n  FileText, Lock, Image, Shield, Zap, Check, ArrowRight, \n  Search, Star, Users, Globe, Download, TrendingUp,\n  Clock, ChevronRight, Sparkles, QrCode, Calculator,\n  BookOpen, FileCode, Type, PenTool, Book, CloudOff, Gift\n} from \"lucide-react\";\nimport { useSEO, generateOrganizationSchema, generateWebApplicationSchema, generateFAQSchema, generateServiceSchema } from \"@/hooks/use-seo\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { LogoIcon } from \"@/components/logo\";\nimport { ComparisonTable } from \"@/components/comparison-table\";\nimport { ContactSupportSection } from \"@/components/contact-support\";\nimport { \n  toolCategories, \n  allTools, \n  popularTools, \n  availableTools, \n  comingSoonTools,\n  platformStats,\n  Tool \n} from \"@/lib/tools-data\";\nimport { cn } from \"@/lib/utils\";\nimport { getMotionProps } from \"@/hooks/use-reduced-motion\";\nimport { useReducedMotionContext } from \"@/components/reduced-motion-provider\";\n\nconst features = [\n  {\n    icon: Shield,\n    title: \"100% Privacy\",\n    description: \"All processing happens in your browser. Your files never leave your device.\",\n    gradient: \"from-purple-500 to-blue-500\"\n  },\n  {\n    icon: CloudOff,\n    title: \"No Upload Required\", \n    description: \"Everything works offline. No server uploads mean instant processing.\",\n    gradient: \"from-blue-500 to-cyan-500\"\n  },\n  {\n    icon: Zap,\n    title: \"Lightning Fast\",\n    description: \"Instant processing with no delays or server wait times.\",\n    gradient: \"from-cyan-500 to-teal-500\"\n  },\n  {\n    icon: Gift,\n    title: \"Free Forever\",\n    description: \"Professional-grade tools, completely free. No limits, no subscriptions.\",\n    gradient: \"from-teal-500 to-green-500\"\n  }\n];\n\nconst stats = [\n  { value: \"60+\", label: \"Total Tools\", description: \"All file types covered\", icon: FileText },\n  { value: platformStats.availableTools.toString(), label: \"Available Now\", description: \"Ready to use\", icon: Check },\n  { value: \"100%\", label: \"Privacy\", description: \"Browser-based\", icon: Shield },\n  { value: \"Free\", label: \"Forever\", description: \"No hidden costs\", icon: Star }\n];\n\nconst testimonials = [\n  {\n    name: \"Sarah Chen\",\n    role: \"Marketing Manager\",\n    content: \"Finally, PDF tools that respect my privacy! No more worrying about sensitive documents being uploaded to unknown servers.\",\n    rating: 5,\n    avatar: \"SC\"\n  },\n  {\n    name: \"David Kumar\",\n    role: \"Software Developer\",\n    content: \"The client-side processing is brilliant. Fast, secure, and works offline once loaded. Exactly what I needed.\",\n    rating: 5,\n    avatar: \"DK\"\n  },\n  {\n    name: \"Emily Rodriguez\",\n    role: \"Academic Researcher\",\n    content: \"I use the PDF compressor daily for research papers. The precision in file size targeting is unmatched.\",\n    rating: 5,\n    avatar: \"ER\"\n  }\n];\n\n// Enhanced Tool Card Component with premium animations\nconst ToolCard = ({ tool }: { tool: Tool }) => {\n  const Icon = tool.icon;\n  const { reducedMotion } = useReducedMotionContext();\n  \n  const cardContent = (\n    <motion.div\n      className=\"h-full\"\n      {...getMotionProps(reducedMotion, {\n        whileHover: tool.available ? { scale: 1.03, y: -5 } : {},\n        whileTap: tool.available ? { scale: 0.98 } : {},\n        initial: { opacity: 0, y: 30 },\n        whileInView: { opacity: 1, y: 0 },\n        viewport: { once: true, amount: 0.2 },\n        transition: { \n          duration: 0.5, \n          ease: [0.4, 0, 0.2, 1],\n          hover: { duration: 0.3 }\n        }\n      }, {\n        initial: { opacity: 1 },\n        animate: { opacity: 1 },\n        transition: { duration: 0 }\n      })}\n    >\n      <Card className={cn(\n        \"tool-card relative h-full p-6 transition-all duration-500 group min-h-[280px] rounded-lg\",\n        tool.available \n          ? \"cursor-pointer hover:shadow-2xl focus-within:ring-2 focus-within:ring-primary focus-within:ring-offset-2\" \n          : \"cursor-not-allowed opacity-70\",\n        \"border border-transparent hover:border-primary/20\"\n      )} data-testid={`tool-card-${tool.id}`}>\n        {/* New/Popular/Coming Soon Badge */}\n        {(tool.new || tool.popular || !tool.available) && (\n          <div className=\"absolute top-3 right-3\">\n            {tool.new && (\n              <motion.div\n                initial={{ scale: 0, rotate: -180 }}\n                animate={{ scale: 1, rotate: 0 }}\n                transition={{ delay: 0.5, type: \"spring\", stiffness: 200 }}\n              >\n                <Badge className=\"bg-gradient-to-r from-green-500/20 to-green-400/10 text-green-600 dark:text-green-400 border-green-500/30 font-semibold shadow-lg\">\n                  <Sparkles className=\"w-3 h-3 mr-1 animate-pulse\" />\n                  New\n                </Badge>\n              </motion.div>\n            )}\n            {tool.popular && (\n              <motion.div\n                initial={{ scale: 0 }}\n                animate={{ scale: 1 }}\n                transition={{ delay: 0.6, type: \"spring\", stiffness: 200 }}\n              >\n                <Badge className=\"bg-gradient-to-r from-primary/20 to-blue-500/10 text-primary border-primary/30 font-semibold shadow-lg\">\n                  <Star className=\"w-3 h-3 mr-1 animate-pulse-glow\" />\n                  Popular\n                </Badge>\n              </motion.div>\n            )}\n            {!tool.available && (\n              <motion.div\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                transition={{ delay: 0.4 }}\n              >\n                <Badge variant=\"secondary\" className=\"bg-gradient-to-r from-gray-500/20 to-gray-400/10 border-gray-500/30 font-medium\">\n                  <Clock className=\"w-3 h-3 mr-1 animate-pulse\" />\n                  Coming Soon\n                </Badge>\n              </motion.div>\n            )}\n          </div>\n        )}\n        \n        {/* Enhanced Icon with glow effect */}\n        <motion.div \n          className={cn(\n            \"w-16 h-16 rounded-2xl flex items-center justify-center mb-5 transition-all shadow-lg\",\n            \"bg-gradient-to-br\", tool.color,\n            tool.available && \"group-hover:scale-110 group-hover:shadow-xl group-hover:rotate-3\"\n          )}\n          {...getMotionProps(reducedMotion, {\n            whileHover: tool.available ? { rotate: [0, -5, 5, 0] } : {},\n            transition: { duration: 0.5 }\n          })}\n        >\n          <Icon className=\"w-8 h-8 text-white drop-shadow-lg\" />\n        </motion.div>\n        \n        {/* Content */}\n        <h3 className=\"font-semibold text-lg sm:text-xl mb-3 flex items-center gap-2 line-clamp-1\">\n          {tool.title}\n          {tool.available && (\n            <motion.div\n              initial={{ opacity: 0, x: -10 }}\n              animate={{ opacity: 0, x: -10 }}\n              {...getMotionProps(reducedMotion, {\n                whileHover: { opacity: 1, x: 0 }\n              })}\n              className=\"inline-block\"\n            >\n              <ChevronRight className=\"w-5 h-5 text-primary\" />\n            </motion.div>\n          )}\n        </h3>\n        <p className=\"text-sm sm:text-base text-muted-foreground leading-relaxed group-hover:text-foreground/80 transition-colors duration-300 mb-3 truncate-3\">\n          {tool.extendedDescription || tool.description}\n        </p>\n        {tool.features && (\n          <div className=\"space-y-1 text-sm text-muted-foreground/70\">\n            {tool.features.slice(0, 2).map((feature, idx) => (\n              <div key={idx} className=\"flex items-center gap-1\">\n                <Check className=\"w-3 h-3 text-green-500 flex-shrink-0\" />\n                <span>{feature}</span>\n              </div>\n            ))}\n          </div>\n        )}\n        \n        {!tool.available && (\n          <div className=\"absolute inset-0 flex items-center justify-center bg-background/80 backdrop-blur-sm rounded-lg opacity-0 group-hover:opacity-100 transition-opacity\">\n            <div className=\"text-center p-4\">\n              <Clock className=\"w-8 h-8 mx-auto mb-2 text-muted-foreground\" />\n              <p className=\"text-sm font-medium text-muted-foreground\">Coming Soon</p>\n              <p className=\"text-xs text-muted-foreground mt-1\">This tool is being developed</p>\n            </div>\n          </div>\n        )}\n      </Card>\n    </motion.div>\n  );\n\n  if (!tool.available) {\n    return (\n      <div\n        className=\"h-full rounded-lg\"\n        aria-label={`${tool.title} - Coming soon`}\n        aria-disabled=\"true\"\n      >\n        {cardContent}\n      </div>\n    );\n  }\n\n  return (\n    <Link \n      href={tool.href}\n      className=\"block h-full focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2 rounded-lg\"\n    >\n      {cardContent}\n    </Link>\n  );\n};\n\n// Animation variants\nconst containerVariants = {\n  hidden: { opacity: 0 },\n  visible: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.05\n    }\n  }\n};\n\nconst itemVariants = {\n  hidden: { y: 20, opacity: 0 },\n  visible: {\n    y: 0,\n    opacity: 1,\n    transition: {\n      type: \"spring\",\n      stiffness: 100,\n      damping: 12\n    }\n  }\n};\n\nexport default function Home() {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(\"all\");\n  const [, navigate] = useLocation();\n  const { reducedMotion } = useReducedMotionContext();\n  \n  // Show limited tools per category initially\n  const INITIAL_TOOLS_COUNT = 3; // Show only 3, then redirect to All Tools page\n\n  // Filter tools based on search and category\n  const filteredTools = allTools.filter(tool => {\n    const searchLower = searchQuery.toLowerCase().trim();\n    if (searchLower === '') {\n      return selectedCategory === \"all\" || tool.category === selectedCategory;\n    }\n    const matchesSearch = tool.title.toLowerCase().includes(searchLower) ||\n                          tool.description.toLowerCase().includes(searchLower) ||\n                          tool.category.toLowerCase().includes(searchLower) ||\n                          tool.id.toLowerCase().includes(searchLower);\n    const matchesCategory = selectedCategory === \"all\" || tool.category === selectedCategory;\n    return matchesSearch && matchesCategory;\n  });\n\n  // Comprehensive structured data for homepage\n  const structuredData = [\n    generateOrganizationSchema(),\n    generateWebApplicationSchema({\n      name: \"AltafToolsHub - Free Privacy-First Online Tools\",\n      description: \"Complete suite of 60+ privacy-first online tools for PDF compression, image conversion, document processing, and more. All processing happens directly in your browser - no uploads, no server storage, 100% private.\",\n      applicationCategory: \"UtilitiesApplication\",\n      aggregateRating: {\n        ratingValue: 4.9,\n        ratingCount: 2847\n      }\n    }),\n    generateFAQSchema([\n      {\n        question: \"Are my files safe when using AltafToolsHub?\",\n        answer: \"Yes, absolutely! All file processing happens directly in your browser. Your files never leave your device and are never uploaded to any server. This ensures 100% privacy and security.\"\n      },\n      {\n        question: \"How many tools are available on AltafToolsHub?\",\n        answer: `We offer ${platformStats.totalTools}+ tools, with ${platformStats.availableTools} currently available and more being added regularly. All tools are free to use with no limits.`\n      },\n      {\n        question: \"Do I need to create an account?\",\n        answer: \"No account required! All tools are instantly accessible without registration, login, or any personal information.\"\n      }\n    ])\n  ];\n\n  useSEO({\n    title: \"AltafToolsHub - 60+ Free Privacy-First PDF & File Tools | No Upload Required\",\n    description: \"Complete suite of 60+ privacy-first online tools. PDF compression, image conversion, document processing & more. 100% browser-based processing - your files never leave your device. Free forever, no registration.\",\n    path: \"/\",\n    keywords: \"pdf tools, online file converter, privacy first tools, pdf compressor, image to pdf, document converter, browser based tools, no upload file tools, free pdf editor, secure file processing\",\n    ogImage: \"https://www.altaftoolshub.com/og-image.png\",\n    structuredData,\n    additionalMetaTags: [\n      { name: \"application-name\", content: \"AltafToolsHub\" },\n      { property: \"og:site_name\", content: \"AltafToolsHub\" },\n      { property: \"og:type\", content: \"website\" }\n    ]\n  });\n\n  return (\n    <div className=\"min-h-screen pattern-bg overflow-x-hidden\">\n      {/* Hero Section */}\n      <section className=\"relative overflow-hidden hero-gradient\">\n        {/* Tech Circuit Animation Layer */}\n        <div className=\"hero-circuit\" />\n        \n        <div className=\"hero-content container-section py-6 lg:py-10\">\n          <motion.div \n            className=\"text-center max-w-4xl mx-auto text-white\"\n            initial={{ opacity: 0, y: -20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n          >\n            {/* Badge */}\n            <motion.div \n              className=\"inline-flex items-center gap-2 px-5 py-2.5 rounded-full bg-gradient-to-r from-white/25 via-white/20 to-white/15 backdrop-blur-md text-white mb-8 shadow-xl border border-white/10\"\n              initial={{ scale: 0, opacity: 0, y: -20 }}\n              animate={{ scale: 1, opacity: 1, y: 0 }}\n              transition={{ delay: 0.2, type: \"spring\", stiffness: 200, damping: 15 }}\n              {...getMotionProps(reducedMotion, {\n                whileHover: { scale: 1.08, boxShadow: \"0 0 30px rgba(255,255,255,0.3)\" }\n              })}\n              data-testid=\"hero-badge\"\n            >\n              <motion.div\n                animate={{ rotate: 360 }}\n                transition={{ duration: 8, repeat: Infinity, ease: \"linear\" }}\n              >\n                <Shield className=\"w-4 h-4\" />\n              </motion.div>\n              <span className=\"text-sm font-medium\">100% Privacy Guaranteed</span>\n            </motion.div>\n\n            {/* Enhanced Heading with better contrast */}\n            <motion.h1 \n              className=\"text-4xl sm:text-5xl lg:text-6xl font-bold mb-6 text-white leading-tight\"\n              initial={{ opacity: 0, y: 30 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8, delay: 0.3, ease: \"easeOut\" }}\n              style={{\n                textShadow: `\n                  0 0 30px rgba(0, 168, 255, 0.6),\n                  0 0 60px rgba(0, 168, 255, 0.4),\n                  0 0 90px rgba(0, 168, 255, 0.2),\n                  0 2px 4px rgba(0, 0, 0, 0.8)\n                `\n              }}\n            >\n              <motion.span\n                initial={{ opacity: 0, x: -50 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ duration: 0.6, delay: 0.4 }}\n              >\n                Professional File Tools,{\" \"}\n              </motion.span>\n              <motion.span \n                className=\"text-yellow-300 inline-block\"\n                initial={{ opacity: 0, x: 50 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ duration: 0.6, delay: 0.5 }}\n                {...getMotionProps(reducedMotion, {\n                  whileHover: { scale: 1.05 }\n                })}\n              >\n                Zero Cloud Upload\n              </motion.span>\n            </motion.h1>\n            \n            {/* Enhanced Subheading with better readability */}\n            <motion.p \n              className=\"text-lg sm:text-xl lg:text-2xl text-white/95 mb-10 max-w-3xl mx-auto leading-relaxed font-light\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8, delay: 0.6 }}\n              style={{\n                textShadow: \"0 2px 8px rgba(0, 0, 0, 0.7), 0 1px 2px rgba(0, 0, 0, 0.9)\"\n              }}\n            >\n              Process PDFs, images, and documents instantly in your browser. \n              Your files stay on your device with enterprise-grade privacy. Free forever, no registration.\n            </motion.p>\n\n            {/* CTAs */}\n            <motion.div \n              className=\"flex flex-col sm:flex-row gap-4 justify-center mb-8\"\n              initial={{ opacity: 0, y: 30 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8, delay: 0.7 }}\n            >\n              <motion.div\n                whileHover={{ scale: 1.08, y: -2 }}\n                whileTap={{ scale: 0.98 }}\n                transition={{ type: \"spring\", stiffness: 400, damping: 17 }}\n                initial={{ opacity: 0, x: -20 }}\n                animate={{ opacity: 1, x: 0 }}\n              >\n                <Link href=\"/compress-pdf\">\n                  <Button size=\"lg\" className=\"hero-btn-primary text-white px-10 py-6 text-lg font-semibold shadow-2xl\" data-testid=\"button-try-compressor\">\n                    <motion.div\n                      className=\"mr-2\"\n                      animate={{ rotate: [0, 15, -15, 0] }}\n                      transition={{ duration: 2, repeat: Infinity, ease: \"easeInOut\" }}\n                    >\n                      <Zap className=\"w-5 h-5\" />\n                    </motion.div>\n                    Try PDF Compressor\n                  </Button>\n                </Link>\n              </motion.div>\n              <motion.div\n                whileHover={{ scale: 1.08, y: -2 }}\n                whileTap={{ scale: 0.98 }}\n                transition={{ type: \"spring\", stiffness: 400, damping: 17 }}\n                initial={{ opacity: 0, x: 20 }}\n                animate={{ opacity: 1, x: 0 }}\n              >\n                <Button \n                  size=\"lg\" \n                  className=\"hero-btn-secondary px-10 py-6 text-lg font-semibold\"\n                  onClick={() => {\n                    document.getElementById('tools-section')?.scrollIntoView({ behavior: 'smooth' });\n                  }}\n                  data-testid=\"button-browse-tools\"\n                >\n                  <Search className=\"w-5 h-5 mr-2\" />\n                  Browse All Tools\n                </Button>\n              </motion.div>\n            </motion.div>\n\n            {/* Stats */}\n            <motion.div \n              className=\"grid grid-cols-2 sm:grid-cols-4 gap-4 max-w-3xl mx-auto\"\n              initial=\"hidden\"\n              animate=\"visible\"\n              variants={{\n                hidden: { opacity: 0 },\n                visible: {\n                  opacity: 1,\n                  transition: {\n                    staggerChildren: 0.1,\n                    delayChildren: 0.8\n                  }\n                }\n              }}\n            >\n              {stats.map((stat, index) => (\n                <motion.div\n                  key={stat.label}\n                  variants={{\n                    hidden: { opacity: 0, y: 20, scale: 0.8 },\n                    visible: { \n                      opacity: 1, \n                      y: 0, \n                      scale: 1,\n                      transition: {\n                        type: \"spring\",\n                        stiffness: 100,\n                        damping: 12\n                      }\n                    }\n                  }}\n                  whileHover={{ scale: 1.05, y: -5 }}\n                  transition={{ type: \"spring\", stiffness: 400, damping: 17 }}\n                >\n                  <Card className=\"p-4 text-center glass h-full\" data-testid={`stat-${stat.label.toLowerCase().replace(' ', '-')}`}>\n                    <motion.div\n                      animate={{ rotate: [0, 5, -5, 0] }}\n                      transition={{ duration: 4, repeat: Infinity, delay: index * 0.2 }}\n                    >\n                      <stat.icon className=\"w-8 h-8 text-primary mx-auto mb-2\" />\n                    </motion.div>\n                    <p className=\"text-2xl font-bold gradient-text\">{stat.value}</p>\n                    <p className=\"text-sm font-medium\">{stat.label}</p>\n                    <p className=\"text-xs text-muted-foreground\">{stat.description}</p>\n                  </Card>\n                </motion.div>\n              ))}\n            </motion.div>\n          </motion.div>\n        </div>\n\n        {/* Decorative Elements */}\n        <div className=\"absolute top-20 left-10 w-72 h-72 bg-purple-300 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-blob\"></div>\n        <div className=\"absolute top-40 right-10 w-72 h-72 bg-blue-300 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-blob animation-delay-2000\"></div>\n        <div className=\"absolute bottom-20 left-1/3 w-96 h-96 bg-pink-300 rounded-full mix-blend-multiply filter blur-xl opacity-10 animate-blob animation-delay-4000\"></div>\n        \n        {/* Enhanced Floating Icons - More Tool-Related Symbols */}\n        <motion.div \n          className=\"absolute top-32 left-20 opacity-20\"\n          animate={{ \n            y: [0, -20, 0],\n            rotate: [0, 360]\n          }}\n          transition={{ \n            duration: 10, \n            repeat: Infinity,\n            ease: \"easeInOut\"\n          }}\n          aria-hidden=\"true\"\n        >\n          <FileText className=\"w-12 h-12 text-blue-400\" />\n        </motion.div>\n        \n        <motion.div \n          className=\"absolute top-48 right-32 opacity-20\"\n          animate={{ \n            y: [0, 20, 0],\n            rotate: [0, -360]\n          }}\n          transition={{ \n            duration: 12, \n            repeat: Infinity,\n            ease: \"easeInOut\",\n            delay: 2\n          }}\n          aria-hidden=\"true\"\n        >\n          <Image className=\"w-10 h-10 text-cyan-400\" />\n        </motion.div>\n        \n        <motion.div \n          className=\"absolute bottom-32 right-20 opacity-20\"\n          animate={{ \n            y: [0, -15, 0],\n            x: [0, 10, 0]\n          }}\n          transition={{ \n            duration: 8, \n            repeat: Infinity,\n            ease: \"easeInOut\",\n            delay: 1\n          }}\n          aria-hidden=\"true\"\n        >\n          <Shield className=\"w-14 h-14 text-green-400\" />\n        </motion.div>\n        \n        {/* Additional Tool-Related Floating Icons */}\n        <motion.div \n          className=\"absolute top-60 left-1/3 opacity-20\"\n          animate={{ \n            y: [0, -25, 0],\n            rotate: [0, 180, 360]\n          }}\n          transition={{ \n            duration: 15, \n            repeat: Infinity,\n            ease: \"easeInOut\",\n            delay: 3\n          }}\n          aria-hidden=\"true\"\n        >\n          <QrCode className=\"w-8 h-8 text-purple-400\" />\n        </motion.div>\n        \n        <motion.div \n          className=\"absolute bottom-48 left-16 opacity-20\"\n          animate={{ \n            y: [0, 18, 0],\n            x: [0, -12, 0],\n            rotate: [0, -90, 0]\n          }}\n          transition={{ \n            duration: 11, \n            repeat: Infinity,\n            ease: \"easeInOut\",\n            delay: 4\n          }}\n          aria-hidden=\"true\"\n        >\n          <Calculator className=\"w-9 h-9 text-emerald-400\" />\n        </motion.div>\n        \n        <motion.div \n          className=\"absolute top-72 right-16 opacity-20\"\n          animate={{ \n            y: [0, -22, 0],\n            scale: [1, 1.1, 1]\n          }}\n          transition={{ \n            duration: 9, \n            repeat: Infinity,\n            ease: \"easeInOut\",\n            delay: 1.5\n          }}\n          aria-hidden=\"true\"\n        >\n          <Lock className=\"w-11 h-11 text-red-400\" />\n        </motion.div>\n        \n        <motion.div \n          className=\"absolute bottom-60 right-1/3 opacity-20\"\n          animate={{ \n            y: [0, 16, 0],\n            rotate: [0, 45, 0]\n          }}\n          transition={{ \n            duration: 13, \n            repeat: Infinity,\n            ease: \"easeInOut\",\n            delay: 2.5\n          }}\n          aria-hidden=\"true\"\n        >\n          <BookOpen className=\"w-10 h-10 text-amber-400\" />\n        </motion.div>\n        \n        <motion.div \n          className=\"absolute top-80 left-1/4 opacity-20\"\n          animate={{ \n            y: [0, -14, 0],\n            x: [0, 8, 0]\n          }}\n          transition={{ \n            duration: 14, \n            repeat: Infinity,\n            ease: \"easeInOut\",\n            delay: 3.5\n          }}\n          aria-hidden=\"true\"\n        >\n          <FileCode className=\"w-9 h-9 text-indigo-400\" />\n        </motion.div>\n        \n        <motion.div \n          className=\"absolute bottom-80 left-1/2 opacity-20\"\n          animate={{ \n            y: [0, 20, 0],\n            rotate: [0, -45, 0]\n          }}\n          transition={{ \n            duration: 16, \n            repeat: Infinity,\n            ease: \"easeInOut\",\n            delay: 4.5\n          }}\n          aria-hidden=\"true\"\n        >\n          <Type className=\"w-8 h-8 text-pink-400\" />\n        </motion.div>\n        \n        <motion.div \n          className=\"absolute top-96 right-1/4 opacity-20\"\n          animate={{ \n            y: [0, -18, 0],\n            scale: [1, 0.9, 1]\n          }}\n          transition={{ \n            duration: 10, \n            repeat: Infinity,\n            ease: \"easeInOut\",\n            delay: 5\n          }}\n          aria-hidden=\"true\"\n        >\n          <PenTool className=\"w-9 h-9 text-teal-400\" />\n        </motion.div>\n        \n        {/* Enhanced Sparkle Effects */}\n        <div className=\"absolute top-1/4 left-1/4 animate-sparkle\">\n          <Sparkles className=\"w-6 h-6 text-yellow-400 opacity-60\" />\n        </div>\n        <div className=\"absolute top-3/4 right-1/3 animate-sparkle animation-delay-2000\">\n          <Sparkles className=\"w-4 h-4 text-purple-400 opacity-60\" />\n        </div>\n        <div className=\"absolute bottom-1/4 left-1/2 animate-sparkle animation-delay-4000\">\n          <Sparkles className=\"w-5 h-5 text-blue-400 opacity-60\" />\n        </div>\n        <div className=\"absolute top-1/3 right-1/6 animate-sparkle animation-delay-1000\">\n          <Sparkles className=\"w-5 h-5 text-green-400 opacity-50\" />\n        </div>\n        <div className=\"absolute bottom-1/3 left-1/6 animate-sparkle animation-delay-3000\">\n          <Sparkles className=\"w-4 h-4 text-cyan-400 opacity-55\" />\n        </div>\n        <div className=\"absolute top-2/3 left-2/3 animate-sparkle animation-delay-5000\">\n          <Sparkles className=\"w-6 h-6 text-pink-400 opacity-45\" />\n        </div>\n      </section>\n\n      {/* Comparison Table */}\n      <ComparisonTable />\n\n      {/* Features Section */}\n      <section className=\"py-16 bg-muted/30 dark:bg-gray-900/50 overflow-hidden\">\n        <div className=\"container-section\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold mb-4 text-foreground dark:text-foreground\">Why Choose AltafToolsHub?</h2>\n            <p className=\"text-muted-foreground dark:text-muted-foreground max-w-2xl mx-auto\">\n              Professional-grade tools with enterprise-level security, completely free\n            </p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 max-w-5xl mx-auto\">\n            {features.map((feature, index) => (\n              <motion.div\n                key={feature.title}\n                initial={{ opacity: 0, y: 20 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ delay: index * 0.1 }}\n                viewport={{ once: true }}\n              >\n                <Card className=\"p-6 h-full glass dark:glass-dark hover:shadow-lg transition-shadow rounded-lg bg-card dark:bg-card text-card-foreground dark:text-card-foreground\">\n                  <div className={cn(\n                    \"w-12 h-12 rounded-xl flex items-center justify-center mb-4\",\n                    \"bg-gradient-to-br\", feature.gradient\n                  )}>\n                    <feature.icon className=\"w-6 h-6 text-white\" />\n                  </div>\n                  <h3 className=\"text-xl font-semibold mb-2 text-foreground dark:text-foreground\">{feature.title}</h3>\n                  <p className=\"text-muted-foreground dark:text-muted-foreground\">{feature.description}</p>\n                </Card>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Available Tools Section */}\n      <section className=\"py-16 overflow-hidden\">\n        <div className=\"container-section\">\n          <div className=\"text-center mb-12\">\n            <Badge className=\"mb-4 bg-gradient-to-r from-green-500/20 to-emerald-500/20 text-green-600 dark:text-green-400 border-green-500/30\">\n              <Check className=\"w-3 h-3 mr-1\" />\n              Ready to Use Now\n            </Badge>\n            <h2 className=\"text-3xl sm:text-4xl font-bold mb-4\">\n              <span className=\"gradient-text\">Available Tools</span>\n            </h2>\n            <p className=\"text-muted-foreground max-w-2xl mx-auto mb-8\">\n              These tools are ready to use right now. All processing happens in your browser for complete privacy.\n            </p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 max-w-5xl mx-auto mb-8\">\n            {allTools.filter(tool => tool.available).slice(0, 6).map((tool, index) => {\n              const Icon = tool.icon;\n              return (\n                <motion.div\n                  key={tool.id}\n                  initial={{ opacity: 0, scale: 0.9 }}\n                  whileInView={{ opacity: 1, scale: 1 }}\n                  transition={{ delay: index * 0.05 }}\n                  viewport={{ once: true }}\n                >\n                  <Link href={tool.href}>\n                    <Card className=\"p-6 h-full hover:shadow-xl transition-all group cursor-pointer\" data-testid={`available-tool-${tool.id}`}>\n                      <div className=\"flex items-start justify-between mb-4\">\n                        <div className={cn(\n                          \"w-12 h-12 rounded-lg flex items-center justify-center\",\n                          \"bg-gradient-to-br\",\n                          tool.color\n                        )}>\n                          <Icon className=\"w-6 h-6 text-white\" />\n                        </div>\n                        {tool.popular && (\n                          <Badge variant=\"secondary\" className=\"text-xs\">\n                            <Star className=\"w-3 h-3 mr-1\" />\n                            Popular\n                          </Badge>\n                        )}\n                      </div>\n                      <h3 className=\"font-semibold text-lg mb-2 group-hover:text-primary transition-colors\">\n                        {tool.title}\n                      </h3>\n                      <p className=\"text-sm text-muted-foreground mb-3\">\n                        {tool.description}\n                      </p>\n                      {tool.features && (\n                        <div className=\"text-xs text-muted-foreground/70\">\n                          {tool.features.slice(0, 2).map((feature, idx) => (\n                            <span key={idx} className=\"inline-flex items-center gap-1 mr-3\">\n                              <Check className=\"w-3 h-3 text-green-500\" />\n                              {feature}\n                            </span>\n                          ))}\n                        </div>\n                      )}\n                    </Card>\n                  </Link>\n                </motion.div>\n              );\n            })}\n          </div>\n          \n          {/* See More Button */}\n          <div className=\"text-center\">\n            <Link href=\"/all-tools?category=available\">\n              <Button size=\"lg\" className=\"btn-gradient text-white\" data-testid=\"button-see-more-available\">\n                View All {allTools.filter(tool => tool.available).length} Available Tools\n                <ArrowRight className=\"w-4 h-4 ml-2\" />\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </section>\n\n      {/* Tools Section */}\n      <section id=\"tools-section\" className=\"py-16 bg-muted/30 overflow-hidden\">\n        <div className=\"container-section\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl sm:text-4xl font-bold mb-4\">\n              Complete Suite of <span className=\"gradient-text\">60+ Tools</span>\n            </h2>\n            <p className=\"text-muted-foreground max-w-2xl mx-auto mb-8\">\n              Professional file processing tools for every need. New tools added regularly.\n            </p>\n            \n            {/* Search Bar */}\n            <div className=\"max-w-md mx-auto mb-8\">\n              <div className=\"relative\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-5 h-5\" />\n                <Input\n                  type=\"text\"\n                  placeholder=\"Search tools...\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  className=\"pl-10 pr-4 py-2 w-full\"\n                  data-testid=\"input-search-tools\"\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* Category Tabs */}\n          <Tabs value={selectedCategory} onValueChange={setSelectedCategory} className=\"w-full\">\n            <TabsList className=\"flex flex-wrap justify-center mb-8 h-auto p-1 bg-muted/50\">\n              <TabsTrigger value=\"all\" className=\"data-[state=active]:bg-primary data-[state=active]:text-primary-foreground\">\n                All Tools ({allTools.length})\n              </TabsTrigger>\n              {toolCategories.map((category) => (\n                <TabsTrigger \n                  key={category.id} \n                  value={category.id}\n                  className=\"data-[state=active]:bg-primary data-[state=active]:text-primary-foreground\"\n                  data-testid={`tab-${category.id}`}\n                >\n                  <category.icon className=\"w-4 h-4 mr-2\" />\n                  {category.name} ({category.tools.length})\n                </TabsTrigger>\n              ))}\n            </TabsList>\n\n            <TabsContent value={selectedCategory} className=\"mt-0\">\n              {selectedCategory === \"all\" && searchQuery === '' ? (\n                // Show all tools grouped by category with see more/less functionality\n                <div className=\"space-y-12\">\n                  {toolCategories.map((category) => {\n                    const toolsToShow = category.tools.slice(0, INITIAL_TOOLS_COUNT);\n                    const hasMoreTools = category.tools.length > INITIAL_TOOLS_COUNT;\n                    \n                    return (\n                      <div key={category.id} id={category.id}>\n                        <div className=\"flex items-center gap-3 mb-6\">\n                          <category.icon className=\"w-6 h-6 text-primary\" />\n                          <h3 className=\"text-2xl font-bold\">{category.name}</h3>\n                          <Badge variant=\"secondary\" className=\"ml-auto\">\n                            {category.tools.length} tools\n                          </Badge>\n                        </div>\n                        <motion.div \n                          className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-3 gap-6\"\n                          variants={containerVariants}\n                          initial=\"hidden\"\n                          whileInView=\"visible\"\n                          viewport={{ once: true }}\n                        >\n                          {toolsToShow.map((tool) => (\n                            <motion.div key={tool.id} variants={itemVariants}>\n                              <ToolCard tool={tool} />\n                            </motion.div>\n                          ))}\n                        </motion.div>\n                        \n                        {/* See All Button - Redirects to All Tools page */}\n                        {hasMoreTools && (\n                          <motion.div \n                            className=\"flex justify-center mt-8\"\n                            initial={{ opacity: 0, y: 20 }}\n                            whileInView={{ opacity: 1, y: 0 }}\n                            viewport={{ once: true }}\n                          >\n                            <Button\n                              variant=\"outline\"\n                              size=\"lg\"\n                              onClick={() => {\n                                navigate(`/all-tools?category=${category.id}`);\n                              }}\n                              className=\"group px-8 py-3 text-base font-medium hover:bg-primary hover:text-primary-foreground transition-all duration-300\"\n                              data-testid={`button-see-all-${category.id}`}\n                            >\n                              <motion.div\n                                whileHover={{ x: 3 }}\n                                className=\"mr-2\"\n                              >\n                                <ChevronRight className=\"w-5 h-5\" />\n                              </motion.div>\n                              See All {category.name} ({category.tools.length} tools)\n                            </Button>\n                          </motion.div>\n                        )}\n                      </div>\n                    );\n                  })}\n                </div>\n              ) : (\n                // Show filtered tools when searching or filtering\n                <motion.div \n                  className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-3 gap-6\"\n                  variants={containerVariants}\n                  initial=\"hidden\"\n                  animate=\"visible\"\n                >\n                  {filteredTools.map((tool) => (\n                    <motion.div key={tool.id} variants={itemVariants}>\n                      <ToolCard tool={tool} />\n                    </motion.div>\n                  ))}\n                </motion.div>\n              )}\n            </TabsContent>\n          </Tabs>\n\n          {/* No results message */}\n          {filteredTools.length === 0 && (\n            <div className=\"text-center py-12\">\n              <p className=\"text-muted-foreground\">\n                No tools found matching your search. Try a different keyword or category.\n              </p>\n            </div>\n          )}\n        </div>\n      </section>\n\n      {/* Popular Tools Section */}\n      <section className=\"py-16 bg-muted/30\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold mb-4\">Most Popular Tools</h2>\n            <p className=\"text-muted-foreground max-w-2xl mx-auto\">\n              Trusted by thousands of users daily for secure file processing\n            </p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 max-w-5xl mx-auto\">\n            {popularTools.slice(0, 6).map((tool, index) => {\n              const Icon = tool.icon;\n              return (\n                <motion.div\n                  key={tool.id}\n                  initial={{ opacity: 0, scale: 0.9 }}\n                  whileInView={{ opacity: 1, scale: 1 }}\n                  transition={{ delay: index * 0.1 }}\n                  viewport={{ once: true }}\n                >\n                  <Link href={tool.href}>\n                    <Card className=\"p-6 h-full hover:shadow-xl transition-all group cursor-pointer\" data-testid={`popular-tool-${tool.id}`}>\n                      <div className=\"flex items-start justify-between mb-4\">\n                        <div className={cn(\n                          \"w-14 h-14 rounded-xl flex items-center justify-center\",\n                          \"bg-gradient-to-br\", tool.color\n                        )}>\n                          <Icon className=\"w-7 h-7 text-white\" />\n                        </div>\n                        <Badge className=\"bg-primary/10 text-primary border-primary/20\">\n                          <TrendingUp className=\"w-3 h-3 mr-1\" />\n                          Trending\n                        </Badge>\n                      </div>\n                      <h3 className=\"text-xl font-semibold mb-2 group-hover:text-primary transition-colors\">\n                        {tool.title}\n                      </h3>\n                      <p className=\"text-muted-foreground mb-4\">\n                        {tool.description}\n                      </p>\n                      <div className=\"flex items-center text-primary\">\n                        <span className=\"text-sm font-medium\">Try Now</span>\n                        <ArrowRight className=\"w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform\" />\n                      </div>\n                    </Card>\n                  </Link>\n                </motion.div>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Testimonials Section */}\n      <section className=\"py-16\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold mb-4\">Trusted by Professionals</h2>\n            <p className=\"text-muted-foreground max-w-2xl mx-auto\">\n              Join thousands of users who trust AltafToolsHub for secure file processing\n            </p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 max-w-5xl mx-auto\">\n            {testimonials.map((testimonial, index) => (\n              <motion.div\n                key={testimonial.name}\n                initial={{ opacity: 0, y: 20 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ delay: index * 0.1 }}\n                viewport={{ once: true }}\n              >\n                <Card className=\"p-6 h-full\">\n                  <div className=\"flex items-center gap-1 mb-4\">\n                    {[...Array(testimonial.rating)].map((_, i) => (\n                      <Star key={i} className=\"w-4 h-4 fill-primary text-primary\" />\n                    ))}\n                  </div>\n                  <p className=\"text-muted-foreground mb-4 italic\">\n                    \"{testimonial.content}\"\n                  </p>\n                  <div className=\"flex items-center gap-3\">\n                    <div className=\"w-10 h-10 rounded-full bg-primary/10 flex items-center justify-center font-semibold text-primary\">\n                      {testimonial.avatar}\n                    </div>\n                    <div>\n                      <p className=\"font-medium\">{testimonial.name}</p>\n                      <p className=\"text-sm text-muted-foreground\">{testimonial.role}</p>\n                    </div>\n                  </div>\n                </Card>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Contact Support Section */}\n      <ContactSupportSection />\n\n      {/* CTA Section */}\n      <section className=\"py-16 bg-gradient-to-r from-purple-600 to-blue-600 text-white\">\n        <div className=\"container mx-auto px-4 text-center\">\n          <h2 className=\"text-3xl sm:text-4xl font-bold mb-4\">\n            Start Processing Files Securely\n          </h2>\n          <p className=\"text-xl mb-8 opacity-90 max-w-2xl mx-auto\">\n            No registration, no uploads, no limits. Your privacy is our priority.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Link href=\"/compress-pdf\">\n              <Button size=\"lg\" className=\"bg-white text-primary hover:bg-gray-100\" data-testid=\"button-cta-pdf\">\n                <FileText className=\"w-5 h-5 mr-2\" />\n                Start with PDF Tools\n              </Button>\n            </Link>\n            <Link href=\"/#tools-section\">\n              <Button size=\"lg\" variant=\"outline\" className=\"border-white text-white hover:bg-white/10\" data-testid=\"button-cta-explore\">\n                <Globe className=\"w-5 h-5 mr-2\" />\n                Explore All Tools\n              </Button>\n            </Link>\n          </div>\n          \n          {/* Trust Indicators */}\n          <div className=\"flex flex-wrap justify-center gap-8 mt-12 opacity-90\">\n            <div className=\"flex items-center gap-2\">\n              <Shield className=\"w-5 h-5\" />\n              <span>256-bit Encryption</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Users className=\"w-5 h-5\" />\n              <span>50K+ Users</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Star className=\"w-5 h-5\" />\n              <span>4.9/5 Rating</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Download className=\"w-5 h-5\" />\n              <span>1M+ Files Processed</span>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}","size_bytes":45381},"client/src/pages/jpg-to-pdf.tsx":{"content":"import { useState } from \"react\";\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Label } from \"@/components/ui/label\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { \n  Image as ImageIcon, Check, X, Download, AlertCircle, ArrowLeft,\n  FileImage, Settings, Sparkles, Zap, Shield, Layers, FileText\n} from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport FileUpload from \"@/components/ui/file-upload\";\nimport { useSEO, generateHowToSchema, generateSoftwareApplicationSchema } from \"@/hooks/use-seo\";\nimport { PDFDocument, rgb } from \"pdf-lib\";\nimport { cn } from \"@/lib/utils\";\nimport Breadcrumbs from \"@/components/seo/breadcrumbs\";\nimport ToolSEO, { toolFAQs } from \"@/components/seo/tool-seo\";\nimport PrivacyNotice from \"@/components/privacy-notice\";\nimport { WhyUseSection, UseCasesSection, ComparisonSection, HowItWorksSection, commonFeatures } from \"@/components/seo/tool-features\";\nimport { ToolFAQ, generateJPGtoPDFFAQs } from \"@/components/seo/tool-faq\";\nimport { Camera, Presentation, BookOpen, Package, Globe2, Users, Upload } from \"lucide-react\";\nimport { Download as DownloadIcon } from \"lucide-react\";\nimport { generateSmartFileName, enhanceDownloadName } from \"@/lib/smart-file-namer\";\nimport { ContactSupportSection } from \"@/components/contact-support\";\n\ninterface ConversionResult {\n  pdfBlob: Blob;\n  fileCount: number;\n}\n\nexport default function JpgToPDF() {\n  const [selectedFiles, setSelectedFiles] = useState<File[]>([]);\n  const [pageSize, setPageSize] = useState(\"a4\");\n  const [orientation, setOrientation] = useState(\"portrait\");\n  const [quality, setQuality] = useState(\"high\");\n  const [layout, setLayout] = useState(\"one-per-page\");\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [result, setResult] = useState<ConversionResult | null>(null);\n  const [error, setError] = useState<string | null>(null);\n\n  // Generate structured data for SEO\n  const howToSchema = generateHowToSchema({\n    name: \"How to Convert JPG Images to PDF\",\n    description: \"Convert multiple images to a single PDF document with custom layouts\",\n    totalTime: \"PT1M\",\n    steps: [\n      { name: \"Select Images\", text: \"Upload one or more JPG, PNG, or WebP images\" },\n      { name: \"Arrange Order\", text: \"Drag to reorder images as needed\" },\n      { name: \"Choose Settings\", text: \"Select page size, orientation, and quality\" },\n      { name: \"Convert to PDF\", text: \"Click 'Convert to PDF' and download your file\" }\n    ]\n  });\n\n  const softwareSchema = generateSoftwareApplicationSchema({\n    name: \"JPG to PDF Converter - AltafToolsHub\",\n    description: \"Free image to PDF converter supporting JPG, PNG, WebP. Multiple layouts and custom settings. 100% browser-based.\",\n    applicationCategory: \"MultimediaApplication\",\n    url: \"https://www.altaftoolshub.com/jpg-to-pdf\",\n    aggregateRating: { ratingValue: 4.7, ratingCount: 1234, bestRating: 5 },\n    featureList: [\n      \"Convert multiple images to PDF\",\n      \"Support for JPG, PNG, WebP, GIF, BMP\",\n      \"Custom page sizes and orientations\",\n      \"Multiple images per page layouts\",\n      \"Adjustable quality settings\",\n      \"Drag and drop reordering\",\n      \"100% client-side processing\"\n    ],\n    datePublished: \"2024-01-01\",\n    dateModified: \"2025-01-17\"\n  });\n\n  useSEO({\n    title: \"Convert JPG to PDF Online Free - Multiple Images to PDF | AltafToolsHub\",\n    description: \"Free online JPG to PDF converter. Convert multiple JPG, PNG, WebP images to PDF with custom layouts. 100% client-side processing for complete privacy.\",\n    path: \"/jpg-to-pdf\",\n    keywords: \"jpg to pdf, convert jpg to pdf, image to pdf, png to pdf, photo to pdf, jpeg to pdf converter, online jpg to pdf, free image converter, images to pdf 2025, batch image converter\",\n    ogImage: \"https://www.altaftoolshub.com/og-jpg-to-pdf.png\",\n    structuredData: [howToSchema, softwareSchema],\n    additionalMetaTags: [\n      { name: \"application-name\", content: \"JPG to PDF Converter - AltafToolsHub\" },\n      { property: \"article:section\", content: \"Image Tools\" },\n      { property: \"article:tag\", content: \"Image Conversion\" },\n      { property: \"article:tag\", content: \"PDF Creation\" },\n      { property: \"article:tag\", content: \"Batch Processing\" }\n    ]\n  });\n\n  const handleFilesSelect = (files: File[]) => {\n    const validFiles: File[] = [];\n    const invalidFiles: string[] = [];\n    \n    files.forEach(file => {\n      if (file.type.startsWith('image/')) {\n        validFiles.push(file);\n      } else {\n        invalidFiles.push(file.name);\n      }\n    });\n    \n    if (invalidFiles.length > 0) {\n      setError(`Invalid files: ${invalidFiles.join(', ')}. Please select only image files.`);\n    } else {\n      setError(null);\n    }\n    \n    setSelectedFiles(validFiles);\n    setResult(null);\n  };\n\n  const removeFile = (indexToRemove: number) => {\n    setSelectedFiles(files => files.filter((_, index) => index !== indexToRemove));\n  };\n\n  const formatFileSize = (bytes: number) => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  const getPageDimensions = (size: string, orient: string): [number, number] => {\n    const sizes: { [key: string]: [number, number] } = {\n      'a4': [595.28, 841.89],\n      'letter': [612, 792],\n      'legal': [612, 1008],\n      'a3': [841.89, 1190.55],\n      'a5': [420.94, 595.28]\n    };\n    \n    const dimensions = sizes[size] || sizes['a4'];\n    return orient === 'landscape' ? [dimensions[1], dimensions[0]] : dimensions;\n  };\n\n  const getQualityValue = (q: string): number => {\n    switch(q) {\n      case 'low': return 0.5;\n      case 'medium': return 0.75;\n      case 'high': return 0.9;\n      case 'maximum': return 1.0;\n      default: return 0.9;\n    }\n  };\n\n  const convertToPDF = async () => {\n    if (selectedFiles.length === 0) {\n      setError('Please select at least one image file.');\n      return;\n    }\n\n    setIsProcessing(true);\n    setProgress(0);\n    setError(null);\n\n    try {\n      const pdfDoc = await PDFDocument.create();\n      const pageDimensions = getPageDimensions(pageSize, orientation);\n      setProgress(10);\n\n      const processedImages: Array<{ image: any, originalFile: File }> = [];\n\n      for (let i = 0; i < selectedFiles.length; i++) {\n        const file = selectedFiles[i];\n        const progressBase = 10 + (i / selectedFiles.length) * 80;\n        setProgress(progressBase);\n\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        if (!ctx) {\n          throw new Error('Canvas context not available');\n        }\n        \n        const img = new Image();\n        \n        const { getExifOrientation, applyExifOrientation, getOrientedDimensions } = await import('@/lib/exif-utils');\n        const exifOrientation = await getExifOrientation(file);\n        \n        const imageUrl = URL.createObjectURL(file);\n        \n        try {\n          await new Promise<void>((resolve, reject) => {\n            img.onload = () => resolve();\n            img.onerror = () => reject(new Error(`Failed to load image: ${file.name}`));\n            img.src = imageUrl;\n          });\n          \n          const orientedDims = getOrientedDimensions(img.width, img.height, exifOrientation);\n          \n          canvas.width = orientedDims.width;\n          canvas.height = orientedDims.height;\n          \n          ctx.save();\n          applyExifOrientation(ctx, exifOrientation, img.width, img.height);\n          ctx.drawImage(img, 0, 0);\n          ctx.restore();\n          \n          const jpegBlob = await new Promise<Blob>((resolve, reject) => {\n            canvas.toBlob((blob) => {\n              if (blob) {\n                resolve(blob);\n              } else {\n                reject(new Error('Failed to convert image to JPEG'));\n              }\n            }, 'image/jpeg', getQualityValue(quality));\n          });\n          \n          const jpegBytes = await jpegBlob.arrayBuffer();\n          const image = await pdfDoc.embedJpg(jpegBytes);\n          \n          URL.revokeObjectURL(imageUrl);\n          \n          processedImages.push({ image, originalFile: file });\n          \n        } catch (error) {\n          URL.revokeObjectURL(imageUrl);\n          throw error;\n        }\n      }\n      \n      setProgress(85);\n      \n      if (layout === 'one-per-page') {\n        for (const { image } of processedImages) {\n          const page = pdfDoc.addPage([pageDimensions[0], pageDimensions[1]]);\n          const { width: pageWidth, height: pageHeight } = page.getSize();\n          \n          const imgDims = image.scale(1);\n          const imgWidth = imgDims.width;\n          const imgHeight = imgDims.height;\n          \n          const widthRatio = pageWidth / imgWidth;\n          const heightRatio = pageHeight / imgHeight;\n          const scaleFactor = Math.min(widthRatio, heightRatio, 1);\n          \n          const scaledWidth = imgWidth * scaleFactor;\n          const scaledHeight = imgHeight * scaleFactor;\n          \n          const x = (pageWidth - scaledWidth) / 2;\n          const y = (pageHeight - scaledHeight) / 2;\n          \n          page.drawImage(image, {\n            x: x,\n            y: y,\n            width: scaledWidth,\n            height: scaledHeight,\n          });\n        }\n      } else if (layout === 'two-per-page') {\n        for (let i = 0; i < processedImages.length; i += 2) {\n          const page = pdfDoc.addPage([pageDimensions[0], pageDimensions[1]]);\n          const { width: pageWidth, height: pageHeight } = page.getSize();\n          \n          const halfHeight = pageHeight / 2;\n          \n          for (let j = 0; j < 2 && i + j < processedImages.length; j++) {\n            const { image } = processedImages[i + j];\n            const imgDims = image.scale(1);\n            \n            const widthRatio = pageWidth / imgDims.width;\n            const heightRatio = halfHeight / imgDims.height;\n            const scaleFactor = Math.min(widthRatio, heightRatio, 1);\n            \n            const scaledWidth = imgDims.width * scaleFactor;\n            const scaledHeight = imgDims.height * scaleFactor;\n            \n            const x = (pageWidth - scaledWidth) / 2;\n            const y = j === 0 ? halfHeight + (halfHeight - scaledHeight) / 2 : (halfHeight - scaledHeight) / 2;\n            \n            page.drawImage(image, {\n              x: x,\n              y: y,\n              width: scaledWidth,\n              height: scaledHeight,\n            });\n          }\n        }\n      } else if (layout === 'four-per-page') {\n        for (let i = 0; i < processedImages.length; i += 4) {\n          const page = pdfDoc.addPage([pageDimensions[0], pageDimensions[1]]);\n          const { width: pageWidth, height: pageHeight } = page.getSize();\n          \n          const halfWidth = pageWidth / 2;\n          const halfHeight = pageHeight / 2;\n          \n          for (let j = 0; j < 4 && i + j < processedImages.length; j++) {\n            const { image } = processedImages[i + j];\n            const imgDims = image.scale(1);\n            \n            const widthRatio = halfWidth / imgDims.width;\n            const heightRatio = halfHeight / imgDims.height;\n            const scaleFactor = Math.min(widthRatio, heightRatio, 1);\n            \n            const scaledWidth = imgDims.width * scaleFactor;\n            const scaledHeight = imgDims.height * scaleFactor;\n            \n            const col = j % 2;\n            const row = Math.floor(j / 2);\n            \n            const x = col * halfWidth + (halfWidth - scaledWidth) / 2;\n            const y = (1 - row) * halfHeight + (halfHeight - scaledHeight) / 2;\n            \n            page.drawImage(image, {\n              x: x,\n              y: y,\n              width: scaledWidth,\n              height: scaledHeight,\n            });\n          }\n        }\n      }\n      \n      setProgress(95);\n      \n      const pdfBytes = await pdfDoc.save();\n      const pdfBlob = new Blob([pdfBytes], { type: 'application/pdf' });\n      \n      setProgress(100);\n      \n      setTimeout(() => {\n        setResult({\n          pdfBlob,\n          fileCount: selectedFiles.length\n        });\n        setIsProcessing(false);\n        setProgress(0);\n      }, 500);\n      \n    } catch (err) {\n      console.error('PDF conversion error:', err);\n      setError(err instanceof Error ? err.message : 'Failed to convert images to PDF.');\n      setIsProcessing(false);\n      setProgress(0);\n    }\n  };\n\n  const downloadPDF = () => {\n    if (!result) return;\n\n    const url = URL.createObjectURL(result.pdfBlob);\n    const link = document.createElement('a');\n    link.href = url;\n    \n    // Use smart file naming\n    const baseName = selectedFiles.length > 0 ? selectedFiles[0].name : 'images';\n    const smartName = generateSmartFileName({\n      originalName: baseName.replace(/\\.[^/.]+$/, '') + '.pdf',\n      operation: 'convert',\n      fileType: 'pdf',\n      size: result.pdfBlob.size,\n      pageCount: selectedFiles.length,\n      date: new Date()\n    });\n    link.download = smartName.suggested;\n    \n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    \n    setTimeout(() => URL.revokeObjectURL(url), 100);\n  };\n\n  const resetTool = () => {\n    setSelectedFiles([]);\n    setResult(null);\n    setIsProcessing(false);\n    setProgress(0);\n    setError(null);\n    setPageSize(\"a4\");\n    setOrientation(\"portrait\");\n    setQuality(\"high\");\n    setLayout(\"one-per-page\");\n  };\n\n  if (result) {\n    return (\n      <div className=\"min-h-screen pattern-bg\">\n        <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\n          <div className=\"text-center mb-8\">\n            <Button \n              variant=\"ghost\" \n              className=\"mb-4\" \n              data-testid=\"button-back\"\n              onClick={() => {\n                window.location.href = '/';\n                setTimeout(() => {\n                  const toolsSection = document.getElementById('tools-section');\n                  if (toolsSection) {\n                    toolsSection.scrollIntoView({ behavior: 'smooth' });\n                  }\n                }, 100);\n              }}\n            >\n              <ArrowLeft className=\"w-4 h-4 mr-2\" />\n              Back to Tools\n            </Button>\n            <h1 className=\"text-3xl sm:text-4xl font-bold mb-4 gradient-text\">JPG to PDF Converter</h1>\n            <p className=\"text-lg text-muted-foreground\">Your images have been converted successfully!</p>\n          </div>\n\n          <Card className=\"glass p-8\">\n            <div className=\"gradient-primary w-20 h-20 rounded-2xl flex items-center justify-center mx-auto mb-6\">\n              <FileText className=\"w-10 h-10 text-white\" />\n            </div>\n            <h3 className=\"text-2xl font-semibold text-center mb-8\">Conversion Complete!</h3>\n            \n            <div className=\"glass rounded-xl p-6 mb-8\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"text-center\">\n                  <FileImage className=\"w-8 h-8 text-primary mx-auto mb-2\" />\n                  <p className=\"text-sm text-muted-foreground mb-1\">Images Converted</p>\n                  <p className=\"text-2xl font-bold gradient-text\" data-testid=\"text-file-count\">{result.fileCount}</p>\n                </div>\n                <div className=\"text-center\">\n                  <Settings className=\"w-8 h-8 text-primary mx-auto mb-2\" />\n                  <p className=\"text-sm text-muted-foreground mb-1\">Layout</p>\n                  <p className=\"text-lg font-bold\">{layout.replace('-', ' ')}</p>\n                </div>\n              </div>\n              \n              <div className=\"mt-4 pt-4 border-t border-border\">\n                <div className=\"flex justify-around text-sm\">\n                  <span><strong>Size:</strong> {pageSize.toUpperCase()}</span>\n                  <span><strong>Orientation:</strong> {orientation}</span>\n                  <span><strong>Quality:</strong> {quality}</span>\n                </div>\n              </div>\n            </div>\n\n            <Alert className=\"mb-6 border-primary/20 bg-primary/5\">\n              <Check className=\"h-4 w-4\" />\n              <AlertDescription>\n                Your PDF is ready for download. All images have been successfully converted and arranged according to your settings.\n              </AlertDescription>\n            </Alert>\n\n            <Button \n              onClick={downloadPDF}\n              className=\"w-full btn-gradient text-white font-semibold mb-4\"\n              size=\"lg\"\n              data-testid=\"button-download\"\n            >\n              <Download className=\"w-5 h-5 mr-2\" />\n              Download PDF\n            </Button>\n            \n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\n              <Button \n                variant=\"outline\" \n                onClick={resetTool}\n                size=\"lg\"\n                data-testid=\"button-convert-more\"\n              >\n                Convert More Images\n              </Button>\n              <Link href=\"/\">\n                <Button variant=\"ghost\" size=\"lg\" className=\"w-full\" data-testid=\"button-back-tools\">\n                  Back to All Tools\n                </Button>\n              </Link>\n            </div>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n\n  if (isProcessing) {\n    return (\n      <div className=\"min-h-screen pattern-bg\">\n        <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\n          <div className=\"text-center mb-8\">\n            <h1 className=\"text-3xl sm:text-4xl font-bold mb-4 gradient-text\">JPG to PDF Converter</h1>\n            <p className=\"text-lg text-muted-foreground\">Converting your images to PDF...</p>\n          </div>\n\n          <Card className=\"glass p-12 text-center\">\n            <div className=\"gradient-primary w-20 h-20 rounded-2xl flex items-center justify-center mx-auto mb-6\">\n              <Layers className=\"w-10 h-10 text-white animate-pulse\" />\n            </div>\n            <h3 className=\"text-xl font-semibold mb-4\">Converting Images...</h3>\n            <p className=\"text-muted-foreground mb-6\" data-testid=\"text-progress-message\">\n              Processing {selectedFiles.length} image{selectedFiles.length > 1 ? 's' : ''}\n            </p>\n            <div className=\"max-w-md mx-auto\">\n              <Progress value={progress} className=\"h-3 mb-3\" data-testid=\"progress-conversion\" />\n              <p className=\"text-sm font-medium gradient-text\">{progress}% complete</p>\n            </div>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen pattern-bg\">\n      <ToolSEO \n        toolName=\"JPG to PDF Converter\"\n        description=\"Convert multiple images to PDF with customizable layouts and quality settings\"\n        category=\"UtilitiesApplication\"\n        faqs={toolFAQs[\"jpg-to-pdf\"]}\n        rating={{ value: 4.7, count: 389 }}\n      />\n      <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\n        <Breadcrumbs items={[{ name: \"JPG to PDF\", url: \"/jpg-to-pdf\" }]} />\n        <div className=\"text-center mb-10\">\n          <Link href=\"/\">\n            <Button variant=\"ghost\" className=\"mb-4\" data-testid=\"button-back\">\n              <ArrowLeft className=\"w-4 h-4 mr-2\" />\n              Back to Tools\n            </Button>\n          </Link>\n          <div className=\"inline-flex items-center gap-2 px-4 py-2 rounded-full bg-primary/10 text-primary mb-6\">\n            <Sparkles className=\"w-4 h-4\" />\n            <span className=\"text-sm font-medium\">Smart Image Processing</span>\n          </div>\n          <h1 className=\"text-3xl sm:text-4xl lg:text-5xl font-bold mb-4\">\n            JPG to PDF <span className=\"gradient-text\">Converter</span>\n          </h1>\n          <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n            Convert multiple images to PDF with customizable layouts and quality settings. \n            Support for JPG, PNG, WebP, and more.\n          </p>\n        </div>\n\n        {/* Privacy Notice */}\n        <PrivacyNotice message=\"Images are converted to PDF in your browser. No uploads to any server.\" />\n\n        {/* Features */}\n        <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4 mb-8 max-w-3xl mx-auto\">\n          <Card className=\"glass p-4 text-center\">\n            <Shield className=\"w-8 h-8 text-primary mx-auto mb-2\" />\n            <p className=\"text-sm font-medium\">100% Private</p>\n          </Card>\n          <Card className=\"glass p-4 text-center\">\n            <Layers className=\"w-8 h-8 text-primary mx-auto mb-2\" />\n            <p className=\"text-sm font-medium\">Multiple Layouts</p>\n          </Card>\n          <Card className=\"glass p-4 text-center\">\n            <Zap className=\"w-8 h-8 text-primary mx-auto mb-2\" />\n            <p className=\"text-sm font-medium\">Fast Conversion</p>\n          </Card>\n        </div>\n\n        <FileUpload\n          onFilesSelect={handleFilesSelect}\n          accept=\"image/*\"\n          title=\"Upload your images\"\n          description=\"Drag & drop or click to select multiple images\"\n          className=\"mb-8\"\n          multiple={true}\n        />\n\n        {error && (\n          <Alert className=\"mb-6 border-destructive/20 bg-destructive/10\">\n            <AlertCircle className=\"h-4 w-4\" />\n            <AlertDescription data-testid=\"text-error\">\n              {error}\n            </AlertDescription>\n          </Alert>\n        )}\n\n        {selectedFiles.length > 0 && (\n          <Card className=\"glass p-6\">\n            {/* Selected Files */}\n            <div className=\"mb-6\">\n              <h3 className=\"text-lg font-semibold mb-3 flex items-center gap-2\">\n                <FileImage className=\"w-5 h-5 text-primary\" />\n                Selected Images ({selectedFiles.length})\n              </h3>\n              <div className=\"space-y-2 max-h-48 overflow-y-auto\">\n                {selectedFiles.map((file, index) => (\n                  <div key={index} className=\"glass rounded-lg p-3 flex items-center justify-between group\">\n                    <div className=\"flex items-center gap-3 flex-1 min-w-0\">\n                      <ImageIcon className=\"w-5 h-5 text-primary flex-shrink-0\" />\n                      <span className=\"text-sm truncate\" data-testid={`text-filename-${index}`}>\n                        {file.name}\n                      </span>\n                    </div>\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => removeFile(index)}\n                      className=\"opacity-0 group-hover:opacity-100 transition-opacity\"\n                      data-testid={`button-remove-${index}`}\n                    >\n                      <X className=\"w-4 h-4\" />\n                    </Button>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Settings */}\n            <div className=\"space-y-4 mb-6\">\n              <h3 className=\"text-lg font-semibold flex items-center gap-2\">\n                <Settings className=\"w-5 h-5 text-primary\" />\n                Conversion Settings\n              </h3>\n              \n              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n                <div>\n                  <Label htmlFor=\"page-size\" className=\"mb-2 block\">Page Size</Label>\n                  <Select value={pageSize} onValueChange={setPageSize}>\n                    <SelectTrigger id=\"page-size\" data-testid=\"select-page-size\">\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"a4\">A4</SelectItem>\n                      <SelectItem value=\"letter\">Letter</SelectItem>\n                      <SelectItem value=\"legal\">Legal</SelectItem>\n                      <SelectItem value=\"a3\">A3</SelectItem>\n                      <SelectItem value=\"a5\">A5</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"orientation\" className=\"mb-2 block\">Orientation</Label>\n                  <Select value={orientation} onValueChange={setOrientation}>\n                    <SelectTrigger id=\"orientation\" data-testid=\"select-orientation\">\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"portrait\">Portrait</SelectItem>\n                      <SelectItem value=\"landscape\">Landscape</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"quality\" className=\"mb-2 block\">Image Quality</Label>\n                  <Select value={quality} onValueChange={setQuality}>\n                    <SelectTrigger id=\"quality\" data-testid=\"select-quality\">\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"low\">Low (Smallest Size)</SelectItem>\n                      <SelectItem value=\"medium\">Medium</SelectItem>\n                      <SelectItem value=\"high\">High (Recommended)</SelectItem>\n                      <SelectItem value=\"maximum\">Maximum</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"layout\" className=\"mb-2 block\">Page Layout</Label>\n                  <Select value={layout} onValueChange={setLayout}>\n                    <SelectTrigger id=\"layout\" data-testid=\"select-layout\">\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"one-per-page\">One per page</SelectItem>\n                      <SelectItem value=\"two-per-page\">Two per page</SelectItem>\n                      <SelectItem value=\"four-per-page\">Four per page</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n              </div>\n            </div>\n\n            <Button \n              onClick={convertToPDF}\n              className=\"w-full btn-gradient text-white font-semibold\"\n              size=\"lg\"\n              data-testid=\"button-convert\"\n            >\n              <Zap className=\"w-5 h-5 mr-2\" />\n              Convert to PDF\n            </Button>\n          </Card>\n        )}\n      </div>\n\n      {/* SEO Content Sections */}\n      <HowItWorksSection\n        toolName=\"JPG to PDF Converter\"\n        steps={[\n          {\n            number: 1,\n            title: \"Upload Images\",\n            description: \"Select or drag multiple JPG, PNG, or WebP images. Process them all at once.\",\n            icon: Upload\n          },\n          {\n            number: 2,\n            title: \"Arrange & Configure\",\n            description: \"Reorder images, choose page size, orientation, and layout options.\",\n            icon: Settings\n          },\n          {\n            number: 3,\n            title: \"Download PDF\",\n            description: \"Get your perfectly formatted PDF with all images combined.\",\n            icon: Download\n          }\n        ]}\n      />\n\n      <WhyUseSection\n        toolName=\"JPG to PDF Converter\"\n        benefits={[\n          \"Convert unlimited images to PDF without any restrictions\",\n          \"Support for all major image formats: JPG, PNG, WebP, GIF, BMP\",\n          \"Create multi-page PDFs with custom layouts (1, 2, or 4 images per page)\",\n          \"Drag and drop to reorder images before conversion\",\n          \"Choose from 5 page sizes and 2 orientations\",\n          \"Adjustable quality settings to balance file size and clarity\",\n          \"Files never leave your browser - 100% privacy guaranteed\",\n          \"No watermarks, registration, or hidden costs\"\n        ]}\n        features={[\n          commonFeatures.privacy,\n          commonFeatures.batch,\n          commonFeatures.free,\n          {\n            icon: Layers,\n            title: \"Custom Layouts\",\n            description: \"Multiple images per page with professional formatting.\"\n          }\n        ]}\n      />\n\n      <UseCasesSection\n        useCases={[\n          {\n            title: \"Photo Albums\",\n            description: \"Create digital photo albums from vacation pictures or family photos.\",\n            icon: Camera,\n            example: \"Convert 50 vacation photos into a single PDF album\"\n          },\n          {\n            title: \"Document Scanning\",\n            description: \"Combine multiple scanned pages into a single PDF document.\",\n            icon: FileImage,\n            example: \"Merge scanned contract pages into one PDF\"\n          },\n          {\n            title: \"Presentations\",\n            description: \"Convert presentation slides or infographics to PDF format.\",\n            icon: Presentation,\n            example: \"Transform PowerPoint screenshots to PDF\"\n          },\n          {\n            title: \"Educational Materials\",\n            description: \"Compile study materials, worksheets, or handouts into PDFs.\",\n            icon: BookOpen,\n            example: \"Create PDF workbooks from educational images\"\n          },\n          {\n            title: \"Product Catalogs\",\n            description: \"Build product catalogs from individual product images.\",\n            icon: Package,\n            example: \"Generate PDF catalog from product photos\"\n          },\n          {\n            title: \"Portfolio Creation\",\n            description: \"Showcase your work by combining portfolio images into PDFs.\",\n            icon: Globe2,\n            example: \"Create design portfolio from artwork images\"\n          }\n        ]}\n      />\n\n      <ComparisonSection\n        toolName=\"Image to PDF Converter\"\n        comparisons={[\n          { feature: \"File Privacy\", ourTool: \"100% browser-based\", others: \"Upload to servers\", highlight: true },\n          { feature: \"Supported Formats\", ourTool: \"JPG, PNG, WebP, GIF, BMP\", others: \"JPG, PNG only\" },\n          { feature: \"Batch Processing\", ourTool: \"Unlimited images\", others: \"10-20 image limit\" },\n          { feature: \"Custom Layouts\", ourTool: \"Multiple per page\", others: \"One per page only\" },\n          { feature: \"Page Reordering\", ourTool: true, others: \"Premium feature\" },\n          { feature: \"Quality Control\", ourTool: \"4 quality levels\", others: \"Fixed compression\" },\n          { feature: \"Watermarks\", ourTool: false, others: \"On free tier\" },\n          { feature: \"File Size Limit\", ourTool: \"Device memory only\", others: \"25MB typical\" },\n          { feature: \"Registration\", ourTool: false, others: \"Email required\" },\n          { feature: \"Cost\", ourTool: \"Free forever\", others: \"$5-15/month\" }\n        ]}\n      />\n\n      <ToolFAQ \n        faqs={generateJPGtoPDFFAQs()}\n        toolName=\"JPG to PDF Converter\"\n        toolPath=\"/jpg-to-pdf\"\n      />\n    </div>\n\n  );\n}","size_bytes":31314},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle, Home } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50 dark:bg-gray-900 transition-colors duration-300\">\n      <Card className=\"w-full max-w-md mx-4 glass dark:glass-dark\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500 dark:text-red-400\" />\n            <h1 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600 dark:text-gray-400\">\n            The page you're looking for doesn't exist or has been moved.\n          </p>\n          \n          <Link href=\"/\">\n            <Button className=\"mt-6 w-full\" variant=\"default\" data-testid=\"button-home\">\n              <Home className=\"w-4 h-4 mr-2\" />\n              Go Back Home\n            </Button>\n          </Link>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":1179},"client/src/pages/unlock-pdf.tsx":{"content":"import { useState } from \"react\";\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { \n  Lock, Shield, Check, AlertCircle, Download, Eye, EyeOff,\n  ArrowLeft, KeyRound, Sparkles, Zap, FileText, Unlock\n} from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport FileUpload from \"@/components/ui/file-upload\";\nimport { useSEO, generateHowToSchema, generateSoftwareApplicationSchema } from \"@/hooks/use-seo\";\nimport { cn } from \"@/lib/utils\";\nimport Breadcrumbs from \"@/components/seo/breadcrumbs\";\nimport ToolSEO, { toolFAQs } from \"@/components/seo/tool-seo\";\nimport PrivacyNotice from \"@/components/privacy-notice\";\nimport { WhyUseSection, UseCasesSection, ComparisonSection, HowItWorksSection, commonFeatures } from \"@/components/seo/tool-features\";\nimport { ToolFAQ, generatePDFUnlockFAQs } from \"@/components/seo/tool-faq\";\nimport { Building2, Users, Briefcase, Home, Archive, FileKey, School } from \"lucide-react\";\nimport { ContactSupportSection } from \"@/components/contact-support\";\n\ninterface UnlockResult {\n  originalSize: number;\n  unlockedBlob: Blob;\n}\n\nexport default function UnlockPDF() {\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [password, setPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [result, setResult] = useState<UnlockResult | null>(null);\n  const [error, setError] = useState<string | null>(null);\n\n  // Generate structured data for SEO\n  const howToSchema = generateHowToSchema({\n    name: \"How to Unlock Password-Protected PDF Files\",\n    description: \"Remove password protection from PDF files securely in your browser\",\n    totalTime: \"PT30S\",\n    steps: [\n      { name: \"Upload PDF\", text: \"Select or drag your password-protected PDF file\" },\n      { name: \"Enter Password\", text: \"Type the PDF password you know\" },\n      { name: \"Unlock PDF\", text: \"Click 'Unlock PDF' to remove protection\" },\n      { name: \"Download\", text: \"Download your unlocked PDF instantly\" }\n    ]\n  });\n\n  const softwareSchema = generateSoftwareApplicationSchema({\n    name: \"PDF Unlocker - AltafToolsHub\",\n    description: \"Secure PDF password remover. Unlock password-protected PDFs directly in your browser with complete privacy.\",\n    applicationCategory: \"SecurityApplication\",\n    url: \"https://www.altaftoolshub.com/unlock-pdf\",\n    aggregateRating: { ratingValue: 4.8, ratingCount: 987, bestRating: 5 },\n    featureList: [\n      \"Remove PDF password protection\",\n      \"100% client-side processing\",\n      \"No file upload to servers\",\n      \"Preserves document quality\",\n      \"Works with all PDF versions\",\n      \"Instant unlocking process\"\n    ],\n    datePublished: \"2024-01-01\",\n    dateModified: \"2025-01-17\"\n  });\n\n  useSEO({\n    title: \"Unlock PDF Files Online - Remove PDF Password Free | AltafToolsHub\",\n    description: \"Free online PDF unlocker to remove password protection from PDFs. 100% secure client-side processing. Your files and passwords never leave your browser.\",\n    path: \"/unlock-pdf\",\n    keywords: \"unlock pdf, remove pdf password, pdf unlocker, pdf password remover, decrypt pdf, unlock protected pdf, free pdf unlocker, online pdf unlock, pdf security remover 2025\",\n    ogImage: \"https://www.altaftoolshub.com/og-unlock-pdf.png\",\n    structuredData: [howToSchema, softwareSchema],\n    additionalMetaTags: [\n      { name: \"application-name\", content: \"PDF Unlocker - AltafToolsHub\" },\n      { property: \"article:section\", content: \"PDF Tools\" },\n      { property: \"article:tag\", content: \"PDF Security\" },\n      { property: \"article:tag\", content: \"Privacy Tools\" },\n      { property: \"article:tag\", content: \"Document Management\" }\n    ]\n  });\n\n  const handleFileSelect = (file: File) => {\n    if (file.type !== 'application/pdf') {\n      setError('Please select a valid PDF file.');\n      return;\n    }\n    setSelectedFile(file);\n    setResult(null);\n    setError(null);\n  };\n\n  const formatFileSize = (bytes: number) => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  const downloadUnlockedPDF = () => {\n    if (!selectedFile || !result) return;\n\n    const url = URL.createObjectURL(result.unlockedBlob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = selectedFile.name.replace('.pdf', '-unlocked.pdf');\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    \n    setTimeout(() => URL.revokeObjectURL(url), 100);\n  };\n\n  const resetTool = () => {\n    setSelectedFile(null);\n    setPassword('');\n    setShowPassword(false);\n    setResult(null);\n    setIsProcessing(false);\n    setProgress(0);\n    setError(null);\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && selectedFile && password.trim() && !isProcessing) {\n      unlockPDF();\n    }\n  };\n\n  const unlockPDF = async () => {\n    if (!selectedFile || !password.trim()) {\n      setError('Please select a file and enter the password.');\n      return;\n    }\n\n    setIsProcessing(true);\n    setProgress(0);\n    setError(null);\n\n    try {\n      setProgress(20);\n      const arrayBuffer = await selectedFile.arrayBuffer();\n      \n      setProgress(40);\n      const { getPDFJS } = await import('@/lib/pdf-utils');\n      const pdfjsLib = getPDFJS();\n      \n      const loadingTask = pdfjsLib.getDocument({\n        data: arrayBuffer,\n        password: password.trim()\n      });\n      \n      const pdfDocument = await loadingTask.promise;\n      setProgress(30);\n      \n      const { PDFDocument: PDFLibDocument } = await import('pdf-lib');\n      const newPdfDoc = await PDFLibDocument.create();\n      \n      const numPages = pdfDocument.numPages;\n      const baseProgress = 30;\n      const pageProgress = 60 / numPages;\n      \n      for (let pageNum = 1; pageNum <= numPages; pageNum++) {\n        setProgress(baseProgress + (pageNum - 1) * pageProgress);\n        \n        const page = await pdfDocument.getPage(pageNum);\n        const scale = 2.0;\n        const viewport = page.getViewport({ scale });\n        \n        const canvas = document.createElement('canvas');\n        const context = canvas.getContext('2d');\n        if (!context) {\n          throw new Error('Canvas context not available');\n        }\n        \n        canvas.height = viewport.height;\n        canvas.width = viewport.width;\n        \n        const renderContext = {\n          canvasContext: context,\n          viewport: viewport,\n          canvas: canvas\n        };\n        \n        await page.render(renderContext).promise;\n        \n        const jpegBlob = await new Promise<Blob>((resolve, reject) => {\n          canvas.toBlob((blob) => {\n            if (blob) {\n              resolve(blob);\n            } else {\n              reject(new Error('Failed to convert page to JPEG'));\n            }\n          }, 'image/jpeg', 0.9);\n        });\n        \n        const jpegBytes = await jpegBlob.arrayBuffer();\n        const image = await newPdfDoc.embedJpg(jpegBytes);\n        \n        const pageWidth = viewport.width / scale * 0.75;\n        const pageHeight = viewport.height / scale * 0.75;\n        \n        const newPage = newPdfDoc.addPage([pageWidth, pageHeight]);\n        \n        newPage.drawImage(image, {\n          x: 0,\n          y: 0,\n          width: pageWidth,\n          height: pageHeight,\n        });\n      }\n      \n      setProgress(95);\n      \n      const unlockedPdfBytes = await newPdfDoc.save();\n      pdfDocument.destroy();\n      \n      setProgress(90);\n      \n      const unlockedBlob = new Blob([unlockedPdfBytes], { type: 'application/pdf' });\n      \n      setProgress(100);\n      \n      setTimeout(() => {\n        setResult({\n          originalSize: selectedFile.size,\n          unlockedBlob\n        });\n        setIsProcessing(false);\n        setProgress(0);\n      }, 500);\n      \n    } catch (err) {\n      console.error('PDF unlock error:', err);\n      let errorMessage = 'Failed to unlock PDF. ';\n      \n      if (err instanceof Error) {\n        if (err.message.includes('password')) {\n          errorMessage = 'Incorrect password. Please check and try again.';\n        } else if (err.message.includes('encrypt')) {\n          errorMessage = 'This PDF uses an unsupported encryption method.';\n        } else {\n          errorMessage += err.message;\n        }\n      }\n      \n      setError(errorMessage);\n      setIsProcessing(false);\n      setProgress(0);\n    }\n  };\n\n  if (result) {\n    return (\n      <div className=\"min-h-screen pattern-bg\">\n        <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\n          <div className=\"text-center mb-8\">\n            <Button \n              variant=\"ghost\" \n              className=\"mb-4\" \n              data-testid=\"button-back\"\n              onClick={() => {\n                window.location.href = '/';\n                setTimeout(() => {\n                  const toolsSection = document.getElementById('tools-section');\n                  if (toolsSection) {\n                    toolsSection.scrollIntoView({ behavior: 'smooth' });\n                  }\n                }, 100);\n              }}\n            >\n              <ArrowLeft className=\"w-4 h-4 mr-2\" />\n              Back to Tools\n            </Button>\n            <h1 className=\"text-3xl sm:text-4xl font-bold mb-4 gradient-text\">PDF Unlocker</h1>\n            <p className=\"text-lg text-muted-foreground\">Your PDF has been unlocked successfully!</p>\n          </div>\n\n          <Card className=\"glass p-8\">\n            <div className=\"gradient-primary w-20 h-20 rounded-2xl flex items-center justify-center mx-auto mb-6\">\n              <Unlock className=\"w-10 h-10 text-white\" />\n            </div>\n            <h3 className=\"text-2xl font-semibold text-center mb-8\">PDF Unlocked Successfully!</h3>\n            \n            <div className=\"glass rounded-xl p-6 mb-8\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <div className=\"flex items-center gap-3\">\n                  <FileText className=\"w-8 h-8 text-primary\" />\n                  <div>\n                    <p className=\"font-semibold\">{selectedFile?.name}</p>\n                    <p className=\"text-sm text-muted-foreground\">Original file</p>\n                  </div>\n                </div>\n                <Check className=\"w-6 h-6 text-green-500\" />\n              </div>\n              \n              <div className=\"grid grid-cols-2 gap-4 mt-4\">\n                <div className=\"text-center\">\n                  <p className=\"text-sm text-muted-foreground mb-1\">Original Size</p>\n                  <p className=\"font-bold\" data-testid=\"text-original-size\">{formatFileSize(result.originalSize)}</p>\n                </div>\n                <div className=\"text-center\">\n                  <p className=\"text-sm text-muted-foreground mb-1\">Status</p>\n                  <p className=\"font-bold text-green-600\">Unlocked</p>\n                </div>\n              </div>\n            </div>\n\n            <Alert className=\"mb-6 border-primary/20 bg-primary/5\">\n              <Shield className=\"h-4 w-4\" />\n              <AlertDescription>\n                Your PDF has been successfully unlocked and can now be viewed, edited, and printed without restrictions.\n              </AlertDescription>\n            </Alert>\n\n            <Button \n              onClick={downloadUnlockedPDF}\n              className=\"w-full btn-gradient text-white font-semibold mb-4\"\n              size=\"lg\"\n              data-testid=\"button-download\"\n            >\n              <Download className=\"w-5 h-5 mr-2\" />\n              Download Unlocked PDF\n            </Button>\n            \n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\n              <Button \n                variant=\"outline\" \n                onClick={resetTool}\n                size=\"lg\"\n                data-testid=\"button-unlock-another\"\n              >\n                Unlock Another File\n              </Button>\n              <Link href=\"/\">\n                <Button variant=\"ghost\" size=\"lg\" className=\"w-full\" data-testid=\"button-back-tools\">\n                  Back to All Tools\n                </Button>\n              </Link>\n            </div>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n\n  if (isProcessing) {\n    return (\n      <div className=\"min-h-screen pattern-bg\">\n        <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\n          <div className=\"text-center mb-8\">\n            <h1 className=\"text-3xl sm:text-4xl font-bold mb-4 gradient-text\">PDF Unlocker</h1>\n            <p className=\"text-lg text-muted-foreground\">Removing password protection...</p>\n          </div>\n\n          <Card className=\"glass p-12 text-center\">\n            <div className=\"gradient-primary w-20 h-20 rounded-2xl flex items-center justify-center mx-auto mb-6\">\n              <KeyRound className=\"w-10 h-10 text-white animate-pulse\" />\n            </div>\n            <h3 className=\"text-xl font-semibold mb-4\">Unlocking PDF...</h3>\n            <p className=\"text-muted-foreground mb-6\" data-testid=\"text-progress-message\">\n              Processing pages and removing protection\n            </p>\n            <div className=\"max-w-md mx-auto\">\n              <Progress value={progress} className=\"h-3 mb-3\" data-testid=\"progress-unlock\" />\n              <p className=\"text-sm font-medium gradient-text\">{progress}% complete</p>\n            </div>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen pattern-bg\">\n      <ToolSEO \n        toolName=\"PDF Unlocker\"\n        description=\"Remove password protection from PDF files securely in your browser\"\n        category=\"UtilitiesApplication\"\n        faqs={toolFAQs[\"unlock-pdf\"]}\n        rating={{ value: 4.8, count: 412 }}\n      />\n      <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\n        <Breadcrumbs items={[{ name: \"Unlock PDF\", url: \"/unlock-pdf\" }]} />\n        <div className=\"text-center mb-10\">\n          <Link href=\"/\">\n            <Button variant=\"ghost\" className=\"mb-4\" data-testid=\"button-back\">\n              <ArrowLeft className=\"w-4 h-4 mr-2\" />\n              Back to Tools\n            </Button>\n          </Link>\n          <div className=\"inline-flex items-center gap-2 px-4 py-2 rounded-full bg-primary/10 text-primary mb-6\">\n            <Sparkles className=\"w-4 h-4\" />\n            <span className=\"text-sm font-medium\">100% Secure Processing</span>\n          </div>\n          <h1 className=\"text-3xl sm:text-4xl lg:text-5xl font-bold mb-4\">\n            PDF <span className=\"gradient-text\">Unlocker</span>\n          </h1>\n          <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n            Remove password protection from PDF files securely in your browser. \n            Your files and passwords never leave your device.\n          </p>\n        </div>\n\n        {/* Privacy Notice */}\n        <PrivacyNotice message=\"PDF passwords are removed locally. Your files and passwords stay private.\" />\n\n        {/* Features */}\n        <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4 mb-8 max-w-3xl mx-auto\">\n          <Card className=\"glass p-4 text-center\">\n            <Shield className=\"w-8 h-8 text-primary mx-auto mb-2\" />\n            <p className=\"text-sm font-medium\">100% Private</p>\n          </Card>\n          <Card className=\"glass p-4 text-center\">\n            <Lock className=\"w-8 h-8 text-primary mx-auto mb-2\" />\n            <p className=\"text-sm font-medium\">Secure Processing</p>\n          </Card>\n          <Card className=\"glass p-4 text-center\">\n            <Zap className=\"w-8 h-8 text-primary mx-auto mb-2\" />\n            <p className=\"text-sm font-medium\">Instant Unlock</p>\n          </Card>\n        </div>\n\n        <FileUpload\n          onFileSelect={handleFileSelect}\n          accept=\".pdf,application/pdf\"\n          title=\"Upload your locked PDF\"\n          description=\"Drag & drop or click to select\"\n          className=\"mb-8\"\n        />\n\n        {error && (\n          <Alert className=\"mb-6 border-destructive/20 bg-destructive/10\">\n            <AlertCircle className=\"h-4 w-4\" />\n            <AlertDescription data-testid=\"text-error\">\n              {error}\n            </AlertDescription>\n          </Alert>\n        )}\n\n        {selectedFile && (\n          <Card className=\"glass p-6\">\n            <div className=\"mb-6\">\n              <h3 className=\"text-lg font-semibold mb-3 flex items-center gap-2\">\n                <FileText className=\"w-5 h-5 text-primary\" />\n                Selected File\n              </h3>\n              <div className=\"glass rounded-lg p-4 flex items-center justify-between\">\n                <span className=\"text-sm font-medium truncate\" data-testid=\"text-filename\">{selectedFile.name}</span>\n                <span className=\"text-sm font-bold gradient-text\" data-testid=\"text-filesize\">{formatFileSize(selectedFile.size)}</span>\n              </div>\n            </div>\n\n            <div>\n              <h3 className=\"text-lg font-semibold mb-4 flex items-center gap-2\">\n                <KeyRound className=\"w-5 h-5 text-primary\" />\n                Enter Password\n              </h3>\n              \n              <div className=\"relative mb-6\">\n                <Input\n                  type={showPassword ? \"text\" : \"password\"}\n                  placeholder=\"Enter PDF password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  onKeyPress={handleKeyPress}\n                  className=\"pr-12 h-12 text-base\"\n                  data-testid=\"input-password\"\n                />\n                <Button\n                  type=\"button\"\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"absolute right-1 top-1 h-10 w-10\"\n                  onClick={() => setShowPassword(!showPassword)}\n                  data-testid=\"button-toggle-password\"\n                >\n                  {showPassword ? (\n                    <EyeOff className=\"w-4 h-4\" />\n                  ) : (\n                    <Eye className=\"w-4 h-4\" />\n                  )}\n                </Button>\n              </div>\n\n              <Alert className=\"mb-6 border-primary/20 bg-primary/5\">\n                <Shield className=\"h-4 w-4\" />\n                <AlertDescription>\n                  Your password is used only to unlock the PDF locally. It's never sent to any server.\n                </AlertDescription>\n              </Alert>\n\n              <Button \n                onClick={unlockPDF}\n                disabled={!password.trim()}\n                className=\"w-full btn-gradient text-white font-semibold\"\n                size=\"lg\"\n                data-testid=\"button-unlock\"\n              >\n                <Unlock className=\"w-5 h-5 mr-2\" />\n                Unlock PDF\n              </Button>\n            </div>\n          </Card>\n        )}\n      </div>\n\n      {/* SEO Content Sections */}\n      <HowItWorksSection\n        toolName=\"PDF Unlocker\"\n        steps={[\n          {\n            number: 1,\n            title: \"Select Protected PDF\",\n            description: \"Upload your password-protected PDF file. The file stays in your browser.\",\n            icon: FileKey\n          },\n          {\n            number: 2,\n            title: \"Enter Known Password\",\n            description: \"Type the password you know. We don't crack passwords - you must know it.\",\n            icon: KeyRound\n          },\n          {\n            number: 3,\n            title: \"Download Unlocked PDF\",\n            description: \"Get your unlocked PDF instantly with all content and quality preserved.\",\n            icon: Download\n          }\n        ]}\n      />\n\n      <WhyUseSection\n        toolName=\"PDF Unlocker\"\n        benefits={[\n          \"Remove password protection from PDFs you own or have permission to access\",\n          \"Your password and file never leave your browser - 100% private\",\n          \"Preserves all document formatting, images, and text quality\",\n          \"Works with PDFs protected by any version of Adobe Acrobat\",\n          \"No registration, email, or personal information required\",\n          \"Instant processing - no waiting for server queues\",\n          \"Free forever with no limits or hidden costs\",\n          \"Legal tool for accessing your own documents\"\n        ]}\n        features={[\n          commonFeatures.privacy,\n          commonFeatures.speed,\n          commonFeatures.free,\n          {\n            icon: Shield,\n            title: \"Secure Processing\",\n            description: \"Your password is never transmitted or stored anywhere.\",\n            highlight: true\n          }\n        ]}\n      />\n\n      <UseCasesSection\n        useCases={[\n          {\n            title: \"Forgotten Restrictions\",\n            description: \"Remove outdated password protection from your own documents when you still know the password.\",\n            icon: Home,\n            example: \"Unlock old tax documents or personal records\"\n          },\n          {\n            title: \"Business Documents\",\n            description: \"Access password-protected invoices, contracts, or reports shared with you.\",\n            icon: Briefcase,\n            example: \"Open protected vendor invoices or client contracts\"\n          },\n          {\n            title: \"Team Collaboration\",\n            description: \"Remove passwords from shared documents to improve team workflow.\",\n            icon: Users,\n            example: \"Unlock project documents for easier sharing\"\n          },\n          {\n            title: \"Archive Management\",\n            description: \"Process archived documents that no longer need password protection.\",\n            icon: Archive,\n            example: \"Unlock old company records for digitization\"\n          },\n          {\n            title: \"Legal Documents\",\n            description: \"Access legal PDFs shared by lawyers or government agencies.\",\n            icon: Building2,\n            example: \"Open protected legal agreements or forms\"\n          },\n          {\n            title: \"Educational Materials\",\n            description: \"Access password-protected course materials or research papers.\",\n            icon: School,\n            example: \"Unlock protected lecture notes or study guides\"\n          }\n        ]}\n      />\n\n      <ComparisonSection\n        toolName=\"PDF Unlocker\"\n        comparisons={[\n          { feature: \"Password Security\", ourTool: \"Never transmitted\", others: \"Sent to servers\", highlight: true },\n          { feature: \"Processing Location\", ourTool: \"Your browser only\", others: \"Cloud servers\" },\n          { feature: \"File Privacy\", ourTool: \"100% private\", others: \"Stored temporarily\" },\n          { feature: \"Speed\", ourTool: \"Instant\", others: \"Queue wait times\" },\n          { feature: \"File Size Limit\", ourTool: \"Device memory only\", others: \"10-50MB typical\" },\n          { feature: \"Registration\", ourTool: false, others: \"Email required\" },\n          { feature: \"Usage Limits\", ourTool: \"Unlimited\", others: \"3-5 files/day\" },\n          { feature: \"Quality Preserved\", ourTool: \"100%\", others: \"May compress\" },\n          { feature: \"Works Offline\", ourTool: true, others: false },\n          { feature: \"Cost\", ourTool: \"Free forever\", others: \"Freemium model\" }\n        ]}\n      />\n\n      <ToolFAQ \n        faqs={generatePDFUnlockFAQs()}\n        toolName=\"PDF Unlocker\"\n        toolPath=\"/unlock-pdf\"\n      />\n    </div>\n\n  );\n}","size_bytes":23848},"client/src/components/layout/footer.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Logo } from \"@/components/logo\";\nimport { Link } from \"wouter\";\nimport { motion } from \"framer-motion\";\nimport { \n  Shield, \n  Lock, \n  Mail, \n  FileText, \n  Image, \n  QrCode,\n  Calculator,\n  Twitter,\n  Linkedin,\n  Github,\n  ChevronRight,\n  ChevronDown,\n  Heart\n} from \"lucide-react\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Collapsible, CollapsibleContent, CollapsibleTrigger } from \"@/components/ui/collapsible\";\nimport { cn } from \"@/lib/utils\";\n\nconst productLinks = [\n  { name: \"PDF Compressor\", href: \"/compress-pdf\", icon: FileText },\n  { name: \"PDF Unlocker\", href: \"/unlock-pdf\", icon: Lock },\n  { name: \"JPG to PDF\", href: \"/jpg-to-pdf\", icon: Image },\n  { name: \"QR Code Generator\", href: \"/qr-generator\", icon: QrCode },\n  // { name: \"Calculator\", href: \"/calculator\", icon: Calculator }, // Tool not yet available\n  { name: \"All Tools\", href: \"/all-tools\", icon: ChevronRight }\n];\n\nconst resourceLinks = [\n  { name: \"FAQ\", href: \"/faq\" },\n  { name: \"Blog\", href: \"/blog\" },\n  { name: \"Documentation\", href: \"/documentation\" },\n  { name: \"How It Works\", href: \"/#features-section\" },\n  { name: \"Use Cases\", href: \"/#use-cases\" }\n];\n\nconst legalLinks = [\n  { name: \"Privacy Policy\", href: \"/privacy-policy\" },\n  { name: \"Terms of Service\", href: \"/terms-conditions\" },\n  // { name: \"Cookie Policy\", href: \"/cookies\" }, // Coming soon\n  // { name: \"GDPR Compliance\", href: \"/gdpr\" } // Coming soon\n];\n\nconst socialLinks = [\n  { name: \"Twitter\", icon: Twitter, href: \"https://twitter.com/altaftoolshub\", ariaLabel: \"Follow us on Twitter\" },\n  { name: \"LinkedIn\", icon: Linkedin, href: \"https://linkedin.com/company/altaftoolshub\", ariaLabel: \"Connect on LinkedIn\" },\n  { name: \"GitHub\", icon: Github, href: \"https://github.com/altaftoolshub\", ariaLabel: \"View our GitHub\" }\n];\n\nexport default function Footer() {\n  const [openSections, setOpenSections] = useState<string[]>([]);\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    const checkMobile = () => {\n      setIsMobile(window.innerWidth < 640);\n    };\n    checkMobile();\n    window.addEventListener('resize', checkMobile);\n    return () => window.removeEventListener('resize', checkMobile);\n  }, []);\n  return (\n    <footer className=\"bg-muted/50 dark:bg-gray-900 border-t border-border transition-colors duration-300\">\n      <div className=\"container-section py-12 lg:py-16\">\n        {/* Trust/Privacy Messaging */}\n        <motion.div \n          className=\"text-center mb-12 pb-12 border-b border-border/50\"\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: true }}\n        >\n          <div className=\"flex items-center justify-center gap-2 mb-4\">\n            <Shield className=\"w-6 h-6 text-primary\" />\n            <h3 className=\"text-xl font-semibold text-foreground dark:text-foreground\">Your Privacy is Our Priority</h3>\n          </div>\n          <p className=\"text-muted-foreground max-w-2xl mx-auto\">\n            All file processing happens directly in your browser. No uploads, no data storage, no tracking.\n            Your files never leave your device.\n          </p>\n          <div className=\"flex flex-wrap items-center justify-center gap-4 mt-6\">\n            <Badge variant=\"secondary\" className=\"px-3 py-1\">\n              <Lock className=\"w-3 h-3 mr-1\" />\n              100% Client-Side\n            </Badge>\n            <Badge variant=\"secondary\" className=\"px-3 py-1\">\n              <Shield className=\"w-3 h-3 mr-1\" />\n              No Data Storage\n            </Badge>\n            <Badge variant=\"secondary\" className=\"px-3 py-1\">\n              <Heart className=\"w-3 h-3 mr-1\" />\n              Free Forever\n            </Badge>\n          </div>\n        </motion.div>\n\n        {/* Main Footer Content - 4 Column Desktop, Stacked Mobile */}\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-8 mb-12\">\n          {/* Product Column - Collapsible on Mobile */}\n          <Collapsible\n            open={!isMobile || openSections.includes('tools')}\n            onOpenChange={() => setOpenSections(prev => \n              prev.includes('tools') \n                ? prev.filter(s => s !== 'tools')\n                : [...prev, 'tools']\n            )}\n            className=\"group\"\n          >\n            <div className=\"flex sm:block items-center justify-between mb-4\">\n              <h4 className=\"font-semibold text-lg flex items-center gap-2 text-foreground dark:text-foreground\">\n                <FileText className=\"w-5 h-5 text-primary\" />\n                Popular Tools\n              </h4>\n              <CollapsibleTrigger className=\"sm:hidden p-3 min-h-[44px] min-w-[44px] flex items-center justify-center -mr-3\" aria-label=\"Toggle tools section\">\n                <ChevronDown className={cn(\n                  \"w-5 h-5 transition-transform\",\n                  openSections.includes('tools') && \"rotate-180\"\n                )} />\n              </CollapsibleTrigger>\n            </div>\n            <CollapsibleContent className=\"space-y-3 sm:!block\">\n              {productLinks.map((link) => {\n                const Icon = link.icon;\n                return (\n                  <li key={link.href}>\n                    <Link \n                      href={link.href}\n                      className=\"flex items-center gap-2 text-muted-foreground hover:text-primary transition-colors group\"\n                      data-testid={`footer-link-${link.name.toLowerCase().replace(/\\s/g, '-')}`}\n                    >\n                      <Icon className=\"w-4 h-4 opacity-50 group-hover:opacity-100 transition-opacity\" />\n                      <span className=\"text-sm\">{link.name}</span>\n                      <ChevronRight className=\"w-3 h-3 opacity-0 group-hover:opacity-100 -ml-1 transition-all group-hover:translate-x-1\" />\n                    </Link>\n                  </li>\n                );\n              })}\n            </CollapsibleContent>\n          </Collapsible>\n\n          {/* Resources Column - Collapsible on Mobile */}\n          <Collapsible\n            open={!isMobile || openSections.includes('resources')}\n            onOpenChange={() => setOpenSections(prev => \n              prev.includes('resources') \n                ? prev.filter(s => s !== 'resources')\n                : [...prev, 'resources']\n            )}\n            className=\"group\"\n          >\n            <div className=\"flex sm:block items-center justify-between mb-4\">\n              <h4 className=\"font-semibold text-lg text-foreground dark:text-foreground\">Resources</h4>\n              <CollapsibleTrigger className=\"sm:hidden p-3 min-h-[44px] min-w-[44px] flex items-center justify-center -mr-3\" aria-label=\"Toggle resources section\">\n                <ChevronDown className={cn(\n                  \"w-5 h-5 transition-transform\",\n                  openSections.includes('resources') && \"rotate-180\"\n                )} />\n              </CollapsibleTrigger>\n            </div>\n            <CollapsibleContent className=\"space-y-3 sm:!block\">\n              {resourceLinks.map((link) => (\n                <li key={link.href}>\n                  <Link \n                    href={link.href}\n                    className=\"text-sm text-muted-foreground hover:text-primary transition-colors inline-flex items-center gap-1 group\"\n                    data-testid={`footer-link-${link.name.toLowerCase().replace(/\\s/g, '-')}`}\n                  >\n                    <span>{link.name}</span>\n                    <ChevronRight className=\"w-3 h-3 opacity-0 group-hover:opacity-100 transition-all group-hover:translate-x-1\" />\n                  </Link>\n                </li>\n              ))}\n            </CollapsibleContent>\n          </Collapsible>\n\n          {/* Legal Column - Collapsible on Mobile */}\n          <Collapsible\n            open={!isMobile || openSections.includes('legal')}\n            onOpenChange={() => setOpenSections(prev => \n              prev.includes('legal') \n                ? prev.filter(s => s !== 'legal')\n                : [...prev, 'legal']\n            )}\n            className=\"group\"\n          >\n            <div className=\"flex sm:block items-center justify-between mb-4\">\n              <h4 className=\"font-semibold text-lg text-foreground dark:text-foreground\">Legal</h4>\n              <CollapsibleTrigger className=\"sm:hidden p-3 min-h-[44px] min-w-[44px] flex items-center justify-center -mr-3\" aria-label=\"Toggle legal section\">\n                <ChevronDown className={cn(\n                  \"w-5 h-5 transition-transform\",\n                  openSections.includes('legal') && \"rotate-180\"\n                )} />\n              </CollapsibleTrigger>\n            </div>\n            <CollapsibleContent className=\"space-y-3 sm:!block\">\n              {legalLinks.map((link) => (\n                <li key={link.href}>\n                  <Link \n                    href={link.href}\n                    className=\"text-sm text-muted-foreground hover:text-primary transition-colors inline-flex items-center gap-1 group\"\n                    data-testid={`footer-link-${link.name.toLowerCase().replace(/\\s/g, '-')}`}\n                  >\n                    <span>{link.name}</span>\n                    <ChevronRight className=\"w-3 h-3 opacity-0 group-hover:opacity-100 transition-all group-hover:translate-x-1\" />\n                  </Link>\n                </li>\n              ))}\n            </CollapsibleContent>\n          </Collapsible>\n\n          {/* Contact Column */}\n          <div>\n            <h4 className=\"font-semibold text-lg mb-4 text-foreground dark:text-foreground\">Contact</h4>\n            <div className=\"space-y-4\">\n              <a \n                href=\"mailto:altaftoolshub@gmail.com?subject=Support%20Request%20-%20AltafToolsHub\"\n                className=\"flex items-center gap-2 text-sm text-muted-foreground hover:text-primary transition-colors group\"\n                data-testid=\"footer-email\"\n              >\n                <Mail className=\"w-4 h-4 opacity-50 group-hover:opacity-100 transition-opacity\" />\n                <span>altaftoolshub@gmail.com</span>\n              </a>\n              \n              <div className=\"pt-2\">\n                <p className=\"text-sm font-medium mb-3 text-foreground dark:text-foreground\">Follow Us</p>\n                <div className=\"flex gap-3\">\n                  {socialLinks.map((social) => {\n                    const Icon = social.icon;\n                    return (\n                      <a\n                        key={social.name}\n                        href={social.href}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"w-11 h-11 sm:w-10 sm:h-10 rounded-lg bg-muted dark:bg-gray-800 hover:bg-primary/10 dark:hover:bg-primary/20 hover:text-primary transition-all flex items-center justify-center group min-w-[44px] min-h-[44px]\"\n                        aria-label={social.ariaLabel}\n                        data-testid={`footer-social-${social.name.toLowerCase()}`}\n                      >\n                        <Icon className=\"w-5 h-5 opacity-70 group-hover:opacity-100 transition-opacity\" />\n                      </a>\n                    );\n                  })}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Bottom Bar */}\n        <div className=\"pt-8 border-t border-border/50\">\n          <div className=\"flex flex-col sm:flex-row items-center justify-between gap-4\">\n            <div className=\"flex items-center gap-4\">\n              <Logo size=\"sm\" variant=\"full\" className=\"text-primary\" />\n              <span className=\"text-sm text-muted-foreground\">\n                © 2025 AltafToolsHub. All rights reserved.\n              </span>\n            </div>\n            \n            <div className=\"flex items-center gap-6 text-xs text-muted-foreground\">\n              <span className=\"flex items-center gap-1\">\n                Made with <Heart className=\"w-3 h-3 text-red-500 fill-red-500\" /> for privacy\n              </span>\n              <span>•</span>\n              <span>60+ Free Tools</span>\n              <span>•</span>\n              <span>No Registration</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}","size_bytes":12335},"client/src/components/layout/header.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Logo, LogoIcon } from \"@/components/logo\";\nimport { ThemeToggle } from \"@/components/theme-toggle\";\nimport {\n  Sheet,\n  SheetContent,\n  SheetHeader,\n  SheetTitle,\n  SheetTrigger,\n  SheetClose,\n} from \"@/components/ui/sheet\";\nimport { cn } from \"@/lib/utils\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { \n  Menu, X, Home, Info, Mail, ArrowRight, Clock\n} from \"lucide-react\";\nimport { toolCategories, popularTools, Tool } from \"@/lib/tools-data\";\nimport { MultiDropdownNav } from \"@/components/multi-dropdown-nav\";\nimport { getMotionProps } from \"@/hooks/use-reduced-motion\";\nimport { ReducedMotionToggle } from \"@/components/reduced-motion-toggle\";\nimport { useReducedMotionContext } from \"@/components/reduced-motion-provider\";\n\nexport default function Header() {\n  const [location] = useLocation();\n  const [isScrolled, setIsScrolled] = useState(false);\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const { reducedMotion } = useReducedMotionContext();\n  \n  useEffect(() => {\n    const handleScroll = () => {\n      setIsScrolled(window.scrollY > 10);\n    };\n    \n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  // Close mobile menu on route change\n  useEffect(() => {\n    setMobileMenuOpen(false);\n  }, [location]);\n\n  const isActive = (path: string) => {\n    return location === path;\n  };\n\n  return (\n    <motion.header \n      className={cn(\n        \"sticky top-0 w-full max-w-full transition-all duration-300\",\n        isScrolled \n          ? \"bg-background/80 backdrop-blur-lg border-b shadow-sm\" \n          : \"bg-background border-b\"\n      )}\n      style={{ \n        zIndex: 10000,  // High z-index for header but not maximum (dropdown needs to be above)\n        position: 'sticky',\n        top: 0,\n        isolation: 'isolate' // Create new stacking context\n      }}\n      {...getMotionProps(reducedMotion, {\n        initial: { y: -100 },\n        animate: { y: 0 },\n        transition: { type: \"spring\", stiffness: 100, damping: 20 }\n      })}\n    >\n      <div className=\"container mx-auto px-4\">\n        <div className=\"flex h-16 items-center justify-between\">\n          {/* Logo */}\n          <Link \n            href=\"/\" \n            className=\"flex items-center space-x-2\" \n            data-testid=\"link-home\"\n            aria-label=\"Home - AltafToolsHub\"\n          >\n            <motion.div\n              {...getMotionProps(reducedMotion, {\n                whileHover: { scale: 1.05 },\n                whileTap: { scale: 0.95 },\n                transition: { type: \"spring\", stiffness: 400, damping: 17 }\n              })}\n            >\n              <Logo size=\"sm\" variant=\"full\" className=\"text-primary\" />\n            </motion.div>\n          </Link>\n\n          {/* Desktop Navigation */}\n          <div className=\"hidden lg:flex items-center space-x-2\">\n            <Button \n              variant=\"ghost\" \n              className=\"font-medium focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2\"\n              asChild\n            >\n              <Link href=\"/\">\n                <Home className=\"w-4 h-4 mr-2\" />\n                Home\n              </Link>\n            </Button>\n            \n            <Button \n              variant=\"ghost\" \n              className=\"font-medium focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2\"\n              data-testid=\"nav-all-tools-desktop\"\n              asChild\n            >\n              <Link href=\"/all-tools\">\n                <Menu className=\"w-4 h-4 mr-2\" />\n                All Tools\n              </Link>\n            </Button>\n            \n            <MultiDropdownNav />\n            \n            <Button \n              variant=\"ghost\" \n              className=\"font-medium\"\n              data-testid=\"nav-about-desktop\"\n            >\n              <Info className=\"w-4 h-4 mr-2\" />\n              About\n            </Button>\n          </div>\n\n          {/* Desktop Right Section */}\n          <div className=\"hidden lg:flex items-center space-x-2\">\n            <motion.div \n              {...getMotionProps(reducedMotion, {\n                whileHover: { scale: 1.05 },\n                whileTap: { scale: 0.95 }\n              })}\n            >\n              <Button \n                className=\"btn-gradient text-white font-medium focus-visible:ring-2 focus-visible:ring-white focus-visible:ring-offset-2\"\n                data-testid=\"button-try-now-desktop\"\n                asChild\n              >\n                <Link href=\"/compress-pdf\">\n                  Try Now\n                  <ArrowRight className=\"w-4 h-4 ml-2\" />\n                </Link>\n              </Button>\n            </motion.div>\n            <ReducedMotionToggle />\n            <ThemeToggle />\n          </div>\n\n          {/* Mobile Right Section */}\n          <div className=\"flex lg:hidden items-center space-x-2\">\n            <ReducedMotionToggle />\n            <ThemeToggle />\n            \n            {/* Mobile Menu Trigger */}\n            <Sheet open={mobileMenuOpen} onOpenChange={setMobileMenuOpen}>\n              <SheetTrigger asChild>\n                <Button \n                  variant=\"ghost\" \n                  size=\"icon\"\n                  className=\"relative\"\n                  data-testid=\"button-mobile-menu\"\n                >\n                  <AnimatePresence mode=\"wait\">\n                    {mobileMenuOpen ? (\n                      <motion.div\n                        key=\"close\"\n                        {...getMotionProps(reducedMotion, {\n                          initial: { rotate: -90, opacity: 0 },\n                          animate: { rotate: 0, opacity: 1 },\n                          exit: { rotate: 90, opacity: 0 },\n                          transition: { duration: 0.2 }\n                        })}\n                        className=\"absolute inset-0 flex items-center justify-center\"\n                      >\n                        <X className=\"h-5 w-5\" />\n                      </motion.div>\n                    ) : (\n                      <motion.div\n                        key=\"menu\"\n                        {...getMotionProps(reducedMotion, {\n                          initial: { rotate: 90, opacity: 0 },\n                          animate: { rotate: 0, opacity: 1 },\n                          exit: { rotate: -90, opacity: 0 },\n                          transition: { duration: 0.2 }\n                        })}\n                        className=\"absolute inset-0 flex items-center justify-center\"\n                      >\n                        <Menu className=\"h-5 w-5\" />\n                      </motion.div>\n                    )}\n                  </AnimatePresence>\n                  <span className=\"sr-only\">Toggle menu</span>\n                </Button>\n              </SheetTrigger>\n              \n              <SheetContent \n                side=\"left\" \n                className=\"w-full sm:w-[400px] p-0\"\n              >\n                <SheetHeader className=\"border-b px-6 py-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <SheetTitle className=\"flex items-center space-x-2\">\n                      <LogoIcon size=\"sm\" />\n                      <span>Navigation</span>\n                    </SheetTitle>\n                  </div>\n                </SheetHeader>\n                \n                <div className=\"flex flex-col h-full\">\n                  <nav className=\"flex-1 overflow-y-auto px-6 py-6\">\n                    <div className=\"space-y-1\">\n                      {/* Home Link */}\n                      <SheetClose asChild>\n                        <Button\n                          variant={isActive(\"/\") ? \"secondary\" : \"ghost\"}\n                          className=\"w-full justify-start focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2\"\n                          data-testid=\"nav-home-mobile\"\n                          asChild\n                        >\n                          <Link href=\"/\">\n                            <Home className=\"w-4 h-4 mr-3\" />\n                            Home\n                          </Link>\n                        </Button>\n                      </SheetClose>\n                      \n                      {/* All Tools Link */}\n                      <SheetClose asChild>\n                        <Button\n                          variant={isActive(\"/all-tools\") ? \"secondary\" : \"ghost\"}\n                          className=\"w-full justify-start focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2\"\n                          data-testid=\"nav-all-tools-mobile\"\n                          asChild\n                        >\n                          <Link href=\"/all-tools\">\n                            <Menu className=\"w-4 h-4 mr-3\" />\n                            All Tools\n                          </Link>\n                        </Button>\n                      </SheetClose>\n\n                      {/* Tool Categories for Mobile */}\n                      {toolCategories.map((category) => (\n                        <div key={category.id} className=\"py-3\">\n                          <h3 className=\"mb-2 px-3 text-sm font-semibold text-muted-foreground flex items-center\">\n                            <category.icon className=\"w-4 h-4 mr-2\" />\n                            {category.name}\n                          </h3>\n                          <div className=\"space-y-1\">\n                            {category.tools.slice(0, 5).map((tool) => {\n                              const Icon = tool.icon;\n                              return (\n                                <SheetClose key={tool.id} asChild>\n                                  <Button\n                                    variant={isActive(tool.href) ? \"secondary\" : \"ghost\"}\n                                    className={cn(\n                                      \"w-full justify-start group focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2\",\n                                      !tool.available && \"opacity-60 cursor-not-allowed\"\n                                    )}\n                                    data-testid={`nav-${tool.id}-mobile`}\n                                    disabled={!tool.available}\n                                    aria-disabled={!tool.available}\n                                    asChild={tool.available}\n                                    onClick={!tool.available ? (e) => e.preventDefault() : undefined}\n                                  >\n                                    {tool.available ? (\n                                      <Link href={tool.href}>\n                                        <Icon className=\"w-4 h-4 mr-3\" />\n                                        <div className=\"flex-1 text-left\">\n                                          <div className=\"flex items-center gap-2\">\n                                            {tool.title}\n                                            {tool.new && (\n                                              <span className=\"text-xs px-1.5 py-0.5 rounded-full bg-green-500/10 text-green-600\">\n                                                New\n                                              </span>\n                                            )}\n                                          </div>\n                                          <div className=\"text-xs text-muted-foreground\">\n                                            {tool.description}\n                                          </div>\n                                        </div>\n                                        <ArrowRight className=\"w-4 h-4 opacity-0 group-hover:opacity-100 transition-opacity\" />\n                                      </Link>\n                                    ) : (\n                                      <div className=\"flex w-full items-center\">\n                                        <Icon className=\"w-4 h-4 mr-3\" />\n                                        <div className=\"flex-1 text-left\">\n                                          <div className=\"flex items-center gap-2\">\n                                            {tool.title}\n                                            <span className=\"text-xs px-1.5 py-0.5 rounded-full bg-muted-foreground/10 text-muted-foreground\">\n                                              Soon\n                                            </span>\n                                          </div>\n                                          <div className=\"text-xs text-muted-foreground\">\n                                            {tool.description}\n                                          </div>\n                                        </div>\n                                        <Clock className=\"w-4 h-4 text-muted-foreground\" />\n                                      </div>\n                                    )}\n                                  </Button>\n                                </SheetClose>\n                              );\n                            })}\n                            {category.tools.length > 5 && (\n                              <SheetClose asChild>\n                                <Button\n                                  variant=\"ghost\"\n                                  className=\"w-full justify-start text-primary focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2\"\n                                  size=\"sm\"\n                                  asChild\n                                >\n                                  <Link href={`/#${category.id}`}>\n                                    View all {category.tools.length} tools\n                                    <ArrowRight className=\"w-4 h-4 ml-2\" />\n                                  </Link>\n                                </Button>\n                              </SheetClose>\n                            )}\n                          </div>\n                        </div>\n                      ))}\n\n                      {/* About and Contact */}\n                      <div className=\"py-3 border-t\">\n                        <Button\n                          variant=\"ghost\"\n                          className=\"w-full justify-start\"\n                          data-testid=\"nav-about-mobile\"\n                        >\n                          <Info className=\"w-4 h-4 mr-3\" />\n                          About\n                        </Button>\n                        <Button\n                          variant=\"ghost\"\n                          className=\"w-full justify-start\"\n                          data-testid=\"nav-contact-mobile\"\n                        >\n                          <Mail className=\"w-4 h-4 mr-3\" />\n                          Contact\n                        </Button>\n                      </div>\n                    </div>\n                  </nav>\n\n                  {/* CTA Button */}\n                  <div className=\"p-6 border-t\">\n                    <SheetClose asChild>\n                      <Button \n                        className=\"w-full btn-gradient text-white focus-visible:ring-2 focus-visible:ring-white focus-visible:ring-offset-2\"\n                        data-testid=\"button-try-now-mobile\"\n                        asChild\n                      >\n                        <Link href=\"/compress-pdf\">\n                          Try PDF Compressor\n                          <ArrowRight className=\"w-4 h-4 ml-2\" />\n                        </Link>\n                      </Button>\n                    </SheetClose>\n                  </div>\n                </div>\n              </SheetContent>\n            </Sheet>\n          </div>\n        </div>\n      </div>\n    </motion.header>\n  );\n}","size_bytes":15885},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/file-upload.tsx":{"content":"import { useCallback, useState } from \"react\";\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { \n  X, Upload, FileText, Image as ImageIcon, File, \n  CheckCircle2, AlertCircle, Loader2 \n} from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\n\ninterface FileUploadProps {\n  onFileSelect?: (file: File) => void;\n  onFilesSelect?: (files: File[]) => void;\n  accept?: string;\n  maxSize?: number;\n  title: string;\n  description: string;\n  className?: string;\n  multiple?: boolean;\n}\n\nexport default function FileUpload({\n  onFileSelect,\n  onFilesSelect,\n  accept = \"*\",\n  maxSize = 50 * 1024 * 1024, // 50MB default\n  title,\n  description,\n  className = \"\",\n  multiple = false\n}: FileUploadProps) {\n  const [isDragOver, setIsDragOver] = useState(false);\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [selectedFiles, setSelectedFiles] = useState<File[]>([]);\n  const [error, setError] = useState<string | null>(null);\n  const [isValidating, setIsValidating] = useState(false);\n\n  const getFileIcon = (file: File) => {\n    if (file.type.startsWith('image/')) return ImageIcon;\n    if (file.type === 'application/pdf') return FileText;\n    return File;\n  };\n\n  const validateFile = async (file: File): Promise<boolean> => {\n    setError(null);\n    \n    if (maxSize && file.size > maxSize) {\n      setError(`File size must be less than ${Math.round(maxSize / 1024 / 1024)}MB`);\n      return false;\n    }\n\n    // Check if file type matches accept pattern\n    if (accept && accept !== \"*\") {\n      const acceptedTypes = accept.split(',').map(type => type.trim());\n      const fileExtension = `.${file.name.split('.').pop()}`;\n      const isAccepted = acceptedTypes.some(type => \n        type === file.type || \n        type.endsWith('/*') && file.type.startsWith(type.replace('/*', '')) ||\n        type === fileExtension\n      );\n      \n      if (!isAccepted) {\n        setError(`File type not accepted. Please upload ${accept} files only.`);\n        return false;\n      }\n    }\n    \n    return true;\n  };\n\n  const handleFileSelect = useCallback(async (file: File) => {\n    setIsValidating(true);\n    const isValid = await validateFile(file);\n    setIsValidating(false);\n    \n    if (!isValid) return;\n\n    setSelectedFile(file);\n    setError(null);\n    onFileSelect?.(file);\n  }, [onFileSelect, maxSize, accept]);\n\n  const handleFilesSelect = useCallback(async (files: File[]) => {\n    setIsValidating(true);\n    const validFiles = [];\n    \n    for (const file of files) {\n      const isValid = await validateFile(file);\n      if (isValid) {\n        validFiles.push(file);\n      }\n    }\n    \n    setIsValidating(false);\n    \n    if (validFiles.length > 0) {\n      setSelectedFiles(validFiles);\n      setError(null);\n      onFilesSelect?.(validFiles);\n    }\n  }, [onFilesSelect, maxSize, accept]);\n\n  const handleDrop = useCallback((e: React.DragEvent) => {\n    e.preventDefault();\n    setIsDragOver(false);\n    \n    if (e.dataTransfer.files.length > 0) {\n      if (multiple) {\n        const filesArray = Array.from(e.dataTransfer.files);\n        handleFilesSelect(filesArray);\n      } else {\n        handleFileSelect(e.dataTransfer.files[0]);\n      }\n    }\n  }, [handleFileSelect, handleFilesSelect, multiple]);\n\n  const handleDragOver = useCallback((e: React.DragEvent) => {\n    e.preventDefault();\n    if (!isDragOver) setIsDragOver(true);\n  }, [isDragOver]);\n\n  const handleDragLeave = useCallback((e: React.DragEvent) => {\n    e.preventDefault();\n    // Only set dragOver to false if we're leaving the drop zone entirely\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX;\n    const y = e.clientY;\n    \n    if (x < rect.left || x >= rect.right || y < rect.top || y >= rect.bottom) {\n      setIsDragOver(false);\n    }\n  }, []);\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files.length > 0) {\n      if (multiple) {\n        const filesArray = Array.from(e.target.files);\n        handleFilesSelect(filesArray);\n      } else {\n        handleFileSelect(e.target.files[0]);\n      }\n    }\n  }, [handleFileSelect, handleFilesSelect, multiple]);\n\n  const formatFileSize = (bytes: number) => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  const resetFile = () => {\n    setSelectedFile(null);\n    setError(null);\n  };\n\n  const resetFiles = () => {\n    setSelectedFiles([]);\n    setError(null);\n  };\n\n  const removeFile = (index: number) => {\n    const newFiles = selectedFiles.filter((_, i) => i !== index);\n    setSelectedFiles(newFiles);\n    onFilesSelect?.(newFiles);\n  };\n\n  return (\n    <Card className={cn(\"overflow-hidden flex flex-col\", className)}>\n      <div className=\"p-6 flex-1 flex flex-col\">\n        <div\n          className={cn(\n            \"drag-area relative flex-1 flex flex-col items-center justify-center p-8 text-center transition-all duration-300 cursor-pointer min-h-[250px]\",\n            isDragOver && \"dragover\",\n            isValidating && \"pointer-events-none opacity-70\"\n          )}\n          onDrop={handleDrop}\n          onDragOver={handleDragOver}\n          onDragLeave={handleDragLeave}\n          onClick={() => !isValidating && document.getElementById('file-input')?.click()}\n          data-testid=\"file-drop-area\"\n        >\n          {isValidating ? (\n            <Loader2 className=\"w-16 h-16 text-primary mx-auto mb-4 animate-spin\" />\n          ) : (\n            <div className=\"gradient-primary w-20 h-20 rounded-2xl flex items-center justify-center mx-auto mb-4\">\n              <Upload className=\"w-10 h-10 text-white\" />\n            </div>\n          )}\n          \n          <h3 className=\"text-xl font-semibold mb-2\">{title}</h3>\n          <p className=\"text-muted-foreground mb-6\">{description}</p>\n          \n          <Button \n            className=\"btn-gradient text-white relative z-10 px-6 py-2.5\"\n            disabled={isValidating}\n            data-testid=\"button-select-file\"\n            type=\"button\"\n            onClick={(e) => {\n              e.stopPropagation();\n              document.getElementById('file-input')?.click();\n            }}\n          >\n            {isValidating ? (\n              <>\n                <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\n                Validating...\n              </>\n            ) : (\n              <>\n                <Upload className=\"w-4 h-4 mr-2\" />\n                Select {multiple ? 'Files' : 'File'}\n              </>\n            )}\n          </Button>\n          \n          <input\n            type=\"file\"\n            id=\"file-input\"\n            accept={accept}\n            multiple={multiple}\n            className=\"hidden\"\n            onChange={handleInputChange}\n            disabled={isValidating}\n            data-testid=\"input-file\"\n          />\n          \n          <div className=\"mt-4 flex flex-col sm:flex-row items-center justify-center gap-2 sm:gap-4 text-sm text-muted-foreground\">\n            <span>or drag and drop</span>\n            <span className=\"hidden sm:inline\">•</span>\n            <span>Max size: {Math.round(maxSize / 1024 / 1024)}MB</span>\n          </div>\n        </div>\n\n        {/* Error Message */}\n        {error && (\n          <div className=\"mt-4 p-4 rounded-lg bg-destructive/10 border border-destructive/20 flex items-start gap-3\">\n            <AlertCircle className=\"w-5 h-5 text-destructive mt-0.5\" />\n            <div className=\"flex-1\">\n              <p className=\"text-sm font-medium text-destructive\">{error}</p>\n            </div>\n          </div>\n        )}\n\n        {/* Single File Display */}\n        {selectedFile && !multiple && (\n          <div className=\"mt-6\">\n            <div className=\"glass rounded-xl p-4 border border-primary/20\" data-testid=\"file-info\">\n              <div className=\"flex items-center gap-4\">\n                <div className=\"gradient-primary w-12 h-12 rounded-lg flex items-center justify-center\">\n                  {(() => {\n                    const Icon = getFileIcon(selectedFile);\n                    return <Icon className=\"w-6 h-6 text-white\" />;\n                  })()}\n                </div>\n                <div className=\"flex-1 min-w-0\">\n                  <p className=\"font-semibold truncate\" data-testid=\"text-file-name\">\n                    {selectedFile.name}\n                  </p>\n                  <p className=\"text-sm text-muted-foreground\">\n                    <span data-testid=\"text-file-size\">{formatFileSize(selectedFile.size)}</span>\n                    {selectedFile.type && (\n                      <span className=\"ml-2\">• {selectedFile.type.split('/')[1]?.toUpperCase() || 'File'}</span>\n                    )}\n                  </p>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <CheckCircle2 className=\"w-5 h-5 text-green-500\" />\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      resetFile();\n                    }}\n                    className=\"hover:bg-destructive/10 hover:text-destructive\"\n                    data-testid=\"button-remove-file\"\n                  >\n                    <X className=\"w-5 h-5\" />\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Multiple Files Display */}\n        {selectedFiles.length > 0 && multiple && (\n          <div className=\"mt-6\" data-testid=\"files-info\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <div className=\"flex items-center gap-2\">\n                <CheckCircle2 className=\"w-5 h-5 text-green-500\" />\n                <h4 className=\"font-semibold\" data-testid=\"text-files-count\">\n                  {selectedFiles.length} file{selectedFiles.length > 1 ? 's' : ''} selected\n                </h4>\n              </div>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={resetFiles}\n                className=\"hover:bg-destructive/10 hover:text-destructive\"\n                data-testid=\"button-remove-all-files\"\n              >\n                Clear All\n              </Button>\n            </div>\n            \n            <div className=\"space-y-2 max-h-64 overflow-y-auto\">\n              {selectedFiles.map((file, index) => {\n                const Icon = getFileIcon(file);\n                return (\n                  <div \n                    key={index} \n                    className=\"glass rounded-lg p-3 flex items-center gap-3 group hover:border-primary/30 transition-all\"\n                  >\n                    <div className=\"gradient-primary w-10 h-10 rounded-lg flex items-center justify-center opacity-80 group-hover:opacity-100\">\n                      <Icon className=\"w-5 h-5 text-white\" />\n                    </div>\n                    <div className=\"flex-1 min-w-0\">\n                      <p className=\"text-sm font-medium truncate\" data-testid={`text-file-name-${index}`}>\n                        {file.name}\n                      </p>\n                      <p className=\"text-xs text-muted-foreground\">\n                        <span data-testid={`text-file-size-${index}`}>{formatFileSize(file.size)}</span>\n                      </p>\n                    </div>\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => removeFile(index)}\n                      className=\"opacity-0 group-hover:opacity-100 hover:bg-destructive/10 hover:text-destructive transition-opacity\"\n                      data-testid={`button-remove-file-${index}`}\n                    >\n                      <X className=\"w-4 h-4\" />\n                    </Button>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </div>\n    </Card>\n  );\n}","size_bytes":12245},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/components/cookie-consent.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription } from \"@/components/ui/dialog\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Label } from \"@/components/ui/label\";\nimport { Cookie, Shield, Settings, X } from \"lucide-react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\ninterface CookiePreferences {\n  necessary: boolean;\n  analytics: boolean;\n  functional: boolean;\n}\n\nexport default function CookieConsent() {\n  const [showBanner, setShowBanner] = useState(false);\n  const [showPreferences, setShowPreferences] = useState(false);\n  const [preferences, setPreferences] = useState<CookiePreferences>({\n    necessary: true,\n    analytics: false,\n    functional: false,\n  });\n\n  useEffect(() => {\n    const consent = localStorage.getItem(\"cookieConsent\");\n    if (!consent) {\n      // Small delay to ensure smooth page load\n      const timer = setTimeout(() => setShowBanner(true), 1000);\n      return () => clearTimeout(timer);\n    }\n  }, []);\n\n  const handleAcceptAll = () => {\n    const allPreferences = {\n      necessary: true,\n      analytics: true,\n      functional: true,\n    };\n    localStorage.setItem(\"cookieConsent\", JSON.stringify(allPreferences));\n    localStorage.setItem(\"cookieConsentDate\", new Date().toISOString());\n    setShowBanner(false);\n  };\n\n  const handleRejectAll = () => {\n    const minimalPreferences = {\n      necessary: true,\n      analytics: false,\n      functional: false,\n    };\n    localStorage.setItem(\"cookieConsent\", JSON.stringify(minimalPreferences));\n    localStorage.setItem(\"cookieConsentDate\", new Date().toISOString());\n    setShowBanner(false);\n  };\n\n  const handleSavePreferences = () => {\n    localStorage.setItem(\"cookieConsent\", JSON.stringify(preferences));\n    localStorage.setItem(\"cookieConsentDate\", new Date().toISOString());\n    setShowPreferences(false);\n    setShowBanner(false);\n  };\n\n  const handleManagePreferences = () => {\n    setShowPreferences(true);\n  };\n\n  return (\n    <>\n      <AnimatePresence>\n        {showBanner && (\n          <motion.div\n            initial={{ y: 100, opacity: 0 }}\n            animate={{ y: 0, opacity: 1 }}\n            exit={{ y: 100, opacity: 0 }}\n            transition={{ type: \"spring\", stiffness: 100, damping: 15 }}\n            className=\"fixed bottom-0 left-0 right-0 z-50 p-4 sm:p-6\"\n            data-testid=\"cookie-consent-banner\"\n          >\n            <Card className=\"glass max-w-7xl mx-auto p-6 sm:p-8 shadow-2xl border-2\">\n              <button\n                onClick={() => setShowBanner(false)}\n                className=\"absolute top-4 right-4 p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors\"\n                aria-label=\"Close cookie banner\"\n                data-testid=\"button-close-banner\"\n              >\n                <X className=\"w-5 h-5\" />\n              </button>\n              \n              <div className=\"flex flex-col lg:flex-row items-start lg:items-center gap-6\">\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center gap-3 mb-3\">\n                    <div className=\"p-2 rounded-lg bg-primary/10\">\n                      <Cookie className=\"w-6 h-6 text-primary\" />\n                    </div>\n                    <h3 className=\"text-lg font-semibold\">We value your privacy</h3>\n                  </div>\n                  <p className=\"text-sm text-muted-foreground leading-relaxed\">\n                    We use cookies to enhance your browsing experience and analyze our traffic. \n                    All file processing happens entirely in your browser - <span className=\"font-medium\">your files never leave your device</span>. \n                    By clicking \"Accept All\", you consent to our use of cookies. \n                    You can manage your preferences or learn more in our privacy policy.\n                  </p>\n                </div>\n                \n                <div className=\"flex flex-col sm:flex-row gap-3 w-full lg:w-auto\">\n                  <Button\n                    onClick={handleManagePreferences}\n                    variant=\"outline\"\n                    className=\"w-full sm:w-auto\"\n                    data-testid=\"button-manage-cookies\"\n                  >\n                    <Settings className=\"w-4 h-4 mr-2\" />\n                    Manage\n                  </Button>\n                  <Button\n                    onClick={handleRejectAll}\n                    variant=\"outline\"\n                    className=\"w-full sm:w-auto\"\n                    data-testid=\"button-reject-cookies\"\n                  >\n                    Reject All\n                  </Button>\n                  <Button\n                    onClick={handleAcceptAll}\n                    className=\"btn-gradient text-white w-full sm:w-auto\"\n                    data-testid=\"button-accept-cookies\"\n                  >\n                    Accept All\n                  </Button>\n                </div>\n              </div>\n            </Card>\n          </motion.div>\n        )}\n      </AnimatePresence>\n\n      <Dialog open={showPreferences} onOpenChange={setShowPreferences}>\n        <DialogContent className=\"max-w-2xl max-h-[90vh] overflow-y-auto\">\n          <DialogHeader>\n            <DialogTitle className=\"flex items-center gap-2\">\n              <Shield className=\"w-5 h-5 text-primary\" />\n              Cookie Preferences\n            </DialogTitle>\n            <DialogDescription>\n              Manage your cookie preferences. You can enable or disable different types of cookies below.\n            </DialogDescription>\n          </DialogHeader>\n          \n          <div className=\"space-y-6 py-4\">\n            {/* Necessary Cookies */}\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"space-y-1\">\n                  <Label htmlFor=\"necessary\" className=\"text-base font-medium\">\n                    Necessary Cookies\n                  </Label>\n                  <p className=\"text-sm text-muted-foreground\">\n                    These cookies are essential for the website to function properly. They cannot be disabled.\n                  </p>\n                </div>\n                <Switch\n                  id=\"necessary\"\n                  checked={preferences.necessary}\n                  disabled\n                  data-testid=\"switch-necessary\"\n                />\n              </div>\n            </div>\n\n            {/* Analytics Cookies */}\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"space-y-1\">\n                  <Label htmlFor=\"analytics\" className=\"text-base font-medium\">\n                    Analytics Cookies\n                  </Label>\n                  <p className=\"text-sm text-muted-foreground\">\n                    These cookies help us understand how visitors interact with our website by collecting anonymous information.\n                  </p>\n                </div>\n                <Switch\n                  id=\"analytics\"\n                  checked={preferences.analytics}\n                  onCheckedChange={(checked) => \n                    setPreferences(prev => ({ ...prev, analytics: checked }))\n                  }\n                  data-testid=\"switch-analytics\"\n                />\n              </div>\n            </div>\n\n            {/* Functional Cookies */}\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"space-y-1\">\n                  <Label htmlFor=\"functional\" className=\"text-base font-medium\">\n                    Functional Cookies\n                  </Label>\n                  <p className=\"text-sm text-muted-foreground\">\n                    These cookies enable enhanced functionality and personalization, such as remembering your preferences.\n                  </p>\n                </div>\n                <Switch\n                  id=\"functional\"\n                  checked={preferences.functional}\n                  onCheckedChange={(checked) => \n                    setPreferences(prev => ({ ...prev, functional: checked }))\n                  }\n                  data-testid=\"switch-functional\"\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"flex flex-col sm:flex-row gap-3 pt-4\">\n            <Button\n              onClick={() => setShowPreferences(false)}\n              variant=\"outline\"\n              className=\"w-full sm:w-auto\"\n              data-testid=\"button-cancel-preferences\"\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={handleSavePreferences}\n              className=\"btn-gradient text-white w-full sm:w-auto\"\n              data-testid=\"button-save-preferences\"\n            >\n              Save Preferences\n            </Button>\n          </div>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}","size_bytes":9122},"client/src/pages/password-generator.tsx":{"content":"import { useState, useEffect, useCallback } from \"react\";\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Label } from \"@/components/ui/label\";\nimport { Slider } from \"@/components/ui/slider\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useSEO, generateHowToSchema, generateSoftwareApplicationSchema } from \"@/hooks/use-seo\";\nimport { Shield, Copy, RefreshCw, Lock, Zap, Check, X, History, Trash2, ArrowLeft } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\nimport Breadcrumbs from \"@/components/seo/breadcrumbs\";\nimport ToolSEO, { toolFAQs } from \"@/components/seo/tool-seo\";\nimport PrivacyNotice from \"@/components/privacy-notice\";\nimport { WhyUseSection, UseCasesSection, ComparisonSection, HowItWorksSection, commonFeatures } from \"@/components/seo/tool-features\";\nimport { ToolFAQ, generatePasswordGeneratorFAQs } from \"@/components/seo/tool-faq\";\nimport { Key, Settings, Download, User, Mail, CreditCard, ShieldCheck, Hash, Briefcase, School, Users, Globe } from \"lucide-react\";\nimport { ContactSupportSection } from \"@/components/contact-support\";\n\ninterface PasswordOptions {\n  length: number;\n  uppercase: boolean;\n  lowercase: boolean;\n  numbers: boolean;\n  symbols: boolean;\n}\n\ninterface GeneratedPassword {\n  value: string;\n  timestamp: Date;\n  strength: PasswordStrength;\n}\n\ntype PasswordStrength = \"weak\" | \"medium\" | \"strong\" | \"very-strong\";\n\nconst DEFAULT_OPTIONS: PasswordOptions = {\n  length: 16,\n  uppercase: true,\n  lowercase: true,\n  numbers: true,\n  symbols: false\n};\n\nconst CHAR_SETS = {\n  uppercase: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n  lowercase: \"abcdefghijklmnopqrstuvwxyz\",\n  numbers: \"0123456789\",\n  symbols: \"!@#$%^&*()_+-=[]{}|;:,.<>?\"\n};\n\nexport default function PasswordGenerator() {\n  // Generate structured data for SEO\n  const howToSchema = generateHowToSchema({\n    name: \"How to Generate Strong Passwords\",\n    description: \"Create secure, random passwords with customizable length and character types\",\n    totalTime: \"PT10S\",\n    steps: [\n      { name: \"Set Length\", text: \"Choose password length between 4-50 characters\" },\n      { name: \"Select Characters\", text: \"Choose which character types to include\" },\n      { name: \"Generate Password\", text: \"Click 'Generate New Password' button\" },\n      { name: \"Copy Password\", text: \"Copy the generated password to your clipboard\" }\n    ]\n  });\n\n  const softwareSchema = generateSoftwareApplicationSchema({\n    name: \"Password Generator - AltafToolsHub\",\n    description: \"Cryptographically secure password generator with strength meter. Create strong passwords with custom settings. 100% browser-based.\",\n    applicationCategory: \"SecurityApplication\",\n    url: \"https://www.altaftoolshub.com/password-generator\",\n    aggregateRating: { ratingValue: 4.9, ratingCount: 3421, bestRating: 5 },\n    featureList: [\n      \"Cryptographically secure random generation\",\n      \"Password length 4-50 characters\",\n      \"Custom character sets (uppercase, lowercase, numbers, symbols)\",\n      \"Real-time strength meter\",\n      \"Password history tracking\",\n      \"One-click copy to clipboard\",\n      \"100% client-side generation\"\n    ],\n    datePublished: \"2024-01-01\",\n    dateModified: \"2025-01-17\"\n  });\n\n  useSEO({\n    title: \"Strong Password Generator - Create Secure Passwords | AltafToolsHub\",\n    description: \"Free secure password generator. Create strong, random passwords with custom length and character types. Includes strength meter. 100% client-side processing.\",\n    path: \"/password-generator\",\n    keywords: \"password generator, secure password, strong password, random password generator, password creator, password maker, online password generator, free password tool, password generator 2025, ai password security\",\n    ogImage: \"https://www.altaftoolshub.com/og-password-generator.png\",\n    structuredData: [howToSchema, softwareSchema],\n    additionalMetaTags: [\n      { name: \"application-name\", content: \"Password Generator - AltafToolsHub\" },\n      { property: \"article:section\", content: \"Security Tools\" },\n      { property: \"article:tag\", content: \"Password Security\" },\n      { property: \"article:tag\", content: \"Cybersecurity\" },\n      { property: \"article:tag\", content: \"Privacy Tools\" }\n    ]\n  });\n\n  const [options, setOptions] = useState<PasswordOptions>(DEFAULT_OPTIONS);\n  const [password, setPassword] = useState(\"\");\n  const [strength, setStrength] = useState<PasswordStrength>(\"weak\");\n  const [history, setHistory] = useState<GeneratedPassword[]>([]);\n  const [showHistory, setShowHistory] = useState(false);\n  const { toast } = useToast();\n\n  const calculateStrength = useCallback((pass: string, opts: PasswordOptions): PasswordStrength => {\n    if (pass.length < 8) return \"weak\";\n    \n    let score = 0;\n    \n    // Length score\n    if (pass.length >= 12) score += 2;\n    if (pass.length >= 16) score += 2;\n    if (pass.length >= 20) score += 1;\n    \n    // Character variety score\n    if (opts.uppercase && /[A-Z]/.test(pass)) score += 1;\n    if (opts.lowercase && /[a-z]/.test(pass)) score += 1;\n    if (opts.numbers && /[0-9]/.test(pass)) score += 1;\n    if (opts.symbols && /[!@#$%^&*()_+\\-=\\[\\]{}|;:,.<>?]/.test(pass)) score += 2;\n    \n    // Pattern checks (reduce score for patterns)\n    if (/(.)\\1{2,}/.test(pass)) score -= 1; // Repeated characters\n    if (/^[A-Z][a-z]+[0-9]+$/.test(pass)) score -= 1; // Common pattern\n    \n    if (score >= 8) return \"very-strong\";\n    if (score >= 6) return \"strong\";\n    if (score >= 4) return \"medium\";\n    return \"weak\";\n  }, []);\n\n  const generatePassword = useCallback(() => {\n    const { length, uppercase, lowercase, numbers, symbols } = options;\n    \n    // Validate at least one character type is selected\n    if (!uppercase && !lowercase && !numbers && !symbols) {\n      toast({\n        title: \"Invalid Options\",\n        description: \"Please select at least one character type.\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    let charset = \"\";\n    if (uppercase) charset += CHAR_SETS.uppercase;\n    if (lowercase) charset += CHAR_SETS.lowercase;\n    if (numbers) charset += CHAR_SETS.numbers;\n    if (symbols) charset += CHAR_SETS.symbols;\n\n    let newPassword = \"\";\n    const array = new Uint32Array(length);\n    crypto.getRandomValues(array);\n    \n    for (let i = 0; i < length; i++) {\n      newPassword += charset[array[i] % charset.length];\n    }\n\n    // Ensure at least one character from each selected type\n    const ensureChars: string[] = [];\n    if (uppercase) ensureChars.push(CHAR_SETS.uppercase[Math.floor(Math.random() * CHAR_SETS.uppercase.length)]);\n    if (lowercase) ensureChars.push(CHAR_SETS.lowercase[Math.floor(Math.random() * CHAR_SETS.lowercase.length)]);\n    if (numbers) ensureChars.push(CHAR_SETS.numbers[Math.floor(Math.random() * CHAR_SETS.numbers.length)]);\n    if (symbols) ensureChars.push(CHAR_SETS.symbols[Math.floor(Math.random() * CHAR_SETS.symbols.length)]);\n\n    // Replace random positions with ensured characters\n    const passwordArray = newPassword.split('');\n    ensureChars.forEach((char, index) => {\n      const randomPos = Math.floor(Math.random() * length);\n      passwordArray[randomPos] = char;\n    });\n    \n    newPassword = passwordArray.join('');\n    const newStrength = calculateStrength(newPassword, options);\n    \n    setPassword(newPassword);\n    setStrength(newStrength);\n    \n    // Add to history\n    const newEntry: GeneratedPassword = {\n      value: newPassword,\n      timestamp: new Date(),\n      strength: newStrength\n    };\n    setHistory(prev => [newEntry, ...prev.slice(0, 9)]); // Keep last 10\n  }, [options, calculateStrength, toast]);\n\n  // Generate initial password on mount\n  useEffect(() => {\n    generatePassword();\n  }, []);\n\n  const copyToClipboard = async (text: string) => {\n    try {\n      await navigator.clipboard.writeText(text);\n      toast({\n        title: \"Copied!\",\n        description: \"Password copied to clipboard.\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Copy Failed\",\n        description: \"Failed to copy password. Please try again.\",\n        variant: \"destructive\"\n      });\n    }\n  };\n\n  const clearHistory = () => {\n    setHistory([]);\n    toast({\n      title: \"History Cleared\",\n      description: \"Password history has been cleared.\",\n    });\n  };\n\n  const getStrengthColor = (s: PasswordStrength) => {\n    switch (s) {\n      case \"very-strong\": return \"text-green-500\";\n      case \"strong\": return \"text-emerald-500\";\n      case \"medium\": return \"text-yellow-500\";\n      case \"weak\": return \"text-red-500\";\n    }\n  };\n\n  const getStrengthBg = (s: PasswordStrength) => {\n    switch (s) {\n      case \"very-strong\": return \"bg-green-500\";\n      case \"strong\": return \"bg-emerald-500\";\n      case \"medium\": return \"bg-yellow-500\";\n      case \"weak\": return \"bg-red-500\";\n    }\n  };\n\n  const getStrengthWidth = (s: PasswordStrength) => {\n    switch (s) {\n      case \"very-strong\": return \"100%\";\n      case \"strong\": return \"75%\";\n      case \"medium\": return \"50%\";\n      case \"weak\": return \"25%\";\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen pattern-bg\">\n      <ToolSEO \n        toolName=\"Password Generator\"\n        description=\"Generate strong, secure passwords with customizable options and strength indicator\"\n        category=\"UtilitiesApplication\"\n        faqs={toolFAQs[\"password-generator\"]}\n        rating={{ value: 4.8, count: 378 }}\n      />\n      <div className=\"container mx-auto px-4 py-8 max-w-6xl\">\n        <Breadcrumbs items={[{ name: \"Password Generator\", url: \"/password-generator\" }]} />\n        {/* Header */}\n        <div className=\"text-center mb-8\">\n          <Button \n            variant=\"ghost\" \n            className=\"mb-4\" \n            data-testid=\"button-back\"\n            onClick={() => {\n              window.location.href = '/';\n              setTimeout(() => {\n                const toolsSection = document.getElementById('tools-section');\n                if (toolsSection) {\n                  toolsSection.scrollIntoView({ behavior: 'smooth' });\n                }\n              }, 100);\n            }}\n          >\n            <ArrowLeft className=\"w-4 h-4 mr-2\" />\n            Back to Tools\n          </Button>\n          <div className=\"inline-flex items-center justify-center w-16 h-16 rounded-2xl bg-gradient-to-br from-emerald-500 to-teal-600 mb-4\">\n            <Lock className=\"w-8 h-8 text-white\" />\n          </div>\n          <h1 className=\"text-4xl font-bold mb-4\">Password Generator</h1>\n          <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n            Generate strong, secure passwords with customizable options. All passwords are created using cryptographically secure randomness.\n          </p>\n        </div>\n\n        {/* Privacy Notice */}\n        <PrivacyNotice message=\"Passwords are generated using your device's secure random generator. Each password is unique and never stored.\" />\n\n        {/* Features */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-8\">\n          <Card className=\"p-4 glass\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"w-10 h-10 rounded-lg bg-gradient-to-br from-purple-500 to-blue-500 flex items-center justify-center\">\n                <Shield className=\"w-5 h-5 text-white\" />\n              </div>\n              <div>\n                <h3 className=\"font-semibold\">Cryptographically Secure</h3>\n                <p className=\"text-sm text-muted-foreground\">Uses Web Crypto API</p>\n              </div>\n            </div>\n          </Card>\n          <Card className=\"p-4 glass\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"w-10 h-10 rounded-lg bg-gradient-to-br from-blue-500 to-cyan-500 flex items-center justify-center\">\n                <Zap className=\"w-5 h-5 text-white\" />\n              </div>\n              <div>\n                <h3 className=\"font-semibold\">Instant Generation</h3>\n                <p className=\"text-sm text-muted-foreground\">No server required</p>\n              </div>\n            </div>\n          </Card>\n          <Card className=\"p-4 glass\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"w-10 h-10 rounded-lg bg-gradient-to-br from-cyan-500 to-teal-500 flex items-center justify-center\">\n                <History className=\"w-5 h-5 text-white\" />\n              </div>\n              <div>\n                <h3 className=\"font-semibold\">Password History</h3>\n                <p className=\"text-sm text-muted-foreground\">Session-only storage</p>\n              </div>\n            </div>\n          </Card>\n        </div>\n\n        {/* Main Content */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          {/* Options Section */}\n          <Card className=\"p-6\">\n            <h2 className=\"text-xl font-semibold mb-4\">Password Options</h2>\n            \n            <div className=\"space-y-6\">\n              <div>\n                <div className=\"flex justify-between items-center mb-2\">\n                  <Label htmlFor=\"length\">Password Length</Label>\n                  <span className=\"text-2xl font-bold text-primary\">{options.length}</span>\n                </div>\n                <Slider\n                  id=\"length\"\n                  min={8}\n                  max={64}\n                  step={1}\n                  value={[options.length]}\n                  onValueChange={([value]) => setOptions(prev => ({ ...prev, length: value }))}\n                  className=\"mb-2\"\n                  data-testid=\"slider-password-length\"\n                />\n                <div className=\"flex justify-between text-xs text-muted-foreground\">\n                  <span>8</span>\n                  <span>64</span>\n                </div>\n              </div>\n\n              <div className=\"space-y-3\">\n                <Label>Character Types</Label>\n                \n                <div className=\"flex items-center space-x-2\">\n                  <Checkbox\n                    id=\"uppercase\"\n                    checked={options.uppercase}\n                    onCheckedChange={(checked) => \n                      setOptions(prev => ({ ...prev, uppercase: checked as boolean }))\n                    }\n                    data-testid=\"checkbox-uppercase\"\n                  />\n                  <Label htmlFor=\"uppercase\" className=\"flex-1 cursor-pointer\">\n                    Uppercase Letters (A-Z)\n                  </Label>\n                </div>\n\n                <div className=\"flex items-center space-x-2\">\n                  <Checkbox\n                    id=\"lowercase\"\n                    checked={options.lowercase}\n                    onCheckedChange={(checked) => \n                      setOptions(prev => ({ ...prev, lowercase: checked as boolean }))\n                    }\n                    data-testid=\"checkbox-lowercase\"\n                  />\n                  <Label htmlFor=\"lowercase\" className=\"flex-1 cursor-pointer\">\n                    Lowercase Letters (a-z)\n                  </Label>\n                </div>\n\n                <div className=\"flex items-center space-x-2\">\n                  <Checkbox\n                    id=\"numbers\"\n                    checked={options.numbers}\n                    onCheckedChange={(checked) => \n                      setOptions(prev => ({ ...prev, numbers: checked as boolean }))\n                    }\n                    data-testid=\"checkbox-numbers\"\n                  />\n                  <Label htmlFor=\"numbers\" className=\"flex-1 cursor-pointer\">\n                    Numbers (0-9)\n                  </Label>\n                </div>\n\n                <div className=\"flex items-center space-x-2\">\n                  <Checkbox\n                    id=\"symbols\"\n                    checked={options.symbols}\n                    onCheckedChange={(checked) => \n                      setOptions(prev => ({ ...prev, symbols: checked as boolean }))\n                    }\n                    data-testid=\"checkbox-symbols\"\n                  />\n                  <Label htmlFor=\"symbols\" className=\"flex-1 cursor-pointer\">\n                    Special Characters (!@#$%...)\n                  </Label>\n                </div>\n              </div>\n\n              <Button\n                onClick={generatePassword}\n                className=\"w-full\"\n                size=\"lg\"\n                data-testid=\"button-generate-password\"\n              >\n                <RefreshCw className=\"w-4 h-4 mr-2\" />\n                Generate New Password\n              </Button>\n            </div>\n          </Card>\n\n          {/* Generated Password Section */}\n          <Card className=\"p-6\">\n            <h2 className=\"text-xl font-semibold mb-4\">Generated Password</h2>\n            \n            <div className=\"space-y-4\">\n              {/* Password Display */}\n              <div className=\"p-4 bg-muted/50 rounded-lg\">\n                <div className=\"font-mono text-lg break-all mb-3\" data-testid=\"text-generated-password\">\n                  {password || \"Click 'Generate' to create a password\"}\n                </div>\n                \n                {/* Strength Indicator */}\n                {password && (\n                  <div className=\"space-y-2\">\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-sm text-muted-foreground\">Strength:</span>\n                      <span className={cn(\"text-sm font-medium capitalize\", getStrengthColor(strength))}>\n                        {strength.replace(\"-\", \" \")}\n                      </span>\n                    </div>\n                    <div className=\"h-2 bg-muted rounded-full overflow-hidden\">\n                      <div \n                        className={cn(\"h-full transition-all duration-300\", getStrengthBg(strength))}\n                        style={{ width: getStrengthWidth(strength) }}\n                      />\n                    </div>\n                  </div>\n                )}\n              </div>\n\n              {password && (\n                <Button\n                  onClick={() => copyToClipboard(password)}\n                  className=\"w-full\"\n                  variant=\"outline\"\n                  data-testid=\"button-copy-password\"\n                >\n                  <Copy className=\"w-4 h-4 mr-2\" />\n                  Copy to Clipboard\n                </Button>\n              )}\n\n              {/* History Toggle */}\n              <div className=\"pt-4 border-t\">\n                <div className=\"flex justify-between items-center mb-3\">\n                  <Button\n                    onClick={() => setShowHistory(!showHistory)}\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    data-testid=\"button-toggle-history\"\n                  >\n                    <History className=\"w-4 h-4 mr-2\" />\n                    {showHistory ? \"Hide\" : \"Show\"} History ({history.length})\n                  </Button>\n                  {history.length > 0 && (\n                    <Button\n                      onClick={clearHistory}\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      data-testid=\"button-clear-history\"\n                    >\n                      <Trash2 className=\"w-4 h-4 mr-2\" />\n                      Clear\n                    </Button>\n                  )}\n                </div>\n\n                {/* History List */}\n                {showHistory && history.length > 0 && (\n                  <div className=\"space-y-2 max-h-64 overflow-y-auto\">\n                    {history.map((item, index) => (\n                      <div \n                        key={index}\n                        className=\"p-3 bg-muted/30 rounded-lg text-sm\"\n                      >\n                        <div className=\"flex justify-between items-start mb-1\">\n                          <span className=\"font-mono text-xs break-all flex-1\">\n                            {item.value}\n                          </span>\n                          <Button\n                            onClick={() => copyToClipboard(item.value)}\n                            variant=\"ghost\"\n                            size=\"sm\"\n                            className=\"ml-2\"\n                            data-testid={`button-copy-history-${index}`}\n                          >\n                            <Copy className=\"w-3 h-3\" />\n                          </Button>\n                        </div>\n                        <div className=\"flex justify-between items-center text-xs text-muted-foreground\">\n                          <span>{item.timestamp.toLocaleTimeString()}</span>\n                          <span className={cn(\"capitalize\", getStrengthColor(item.strength))}>\n                            {item.strength.replace(\"-\", \" \")}\n                          </span>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n            </div>\n          </Card>\n        </div>\n\n        {/* Tips Section */}\n        <Card className=\"mt-8 p-6 bg-gradient-to-br from-primary/5 to-primary/10\">\n          <h3 className=\"text-lg font-semibold mb-3\">Security Tips</h3>\n          <ul className=\"space-y-2\">\n            <li className=\"flex items-start gap-2\">\n              <Check className=\"w-5 h-5 text-green-500 mt-0.5\" />\n              <span className=\"text-sm\">Use unique passwords for each account</span>\n            </li>\n            <li className=\"flex items-start gap-2\">\n              <Check className=\"w-5 h-5 text-green-500 mt-0.5\" />\n              <span className=\"text-sm\">Longer passwords are generally more secure than complex short ones</span>\n            </li>\n            <li className=\"flex items-start gap-2\">\n              <Check className=\"w-5 h-5 text-green-500 mt-0.5\" />\n              <span className=\"text-sm\">Consider using a password manager to store your passwords securely</span>\n            </li>\n            <li className=\"flex items-start gap-2\">\n              <Check className=\"w-5 h-5 text-green-500 mt-0.5\" />\n              <span className=\"text-sm\">Enable two-factor authentication when available</span>\n            </li>\n          </ul>\n        </Card>\n      </div>\n\n      {/* SEO Content Sections */}\n      <HowItWorksSection\n        toolName=\"Password Generator\"\n        steps={[\n          {\n            number: 1,\n            title: \"Set Parameters\",\n            description: \"Choose password length and which character types to include.\",\n            icon: Settings\n          },\n          {\n            number: 2,\n            title: \"Generate Password\",\n            description: \"Click generate to create a cryptographically secure password.\",\n            icon: Key\n          },\n          {\n            number: 3,\n            title: \"Copy & Use\",\n            description: \"Copy your password and save it in a secure password manager.\",\n            icon: Copy\n          }\n        ]}\n      />\n\n      <WhyUseSection\n        toolName=\"Password Generator\"\n        benefits={[\n          \"Uses cryptographically secure random generation (crypto.getRandomValues)\",\n          \"Generates passwords up to 50 characters long\",\n          \"Real-time strength indicator helps create strong passwords\",\n          \"Customizable character sets for different requirements\",\n          \"Password history tracking for convenience\",\n          \"100% client-side - passwords never leave your browser\",\n          \"No limits, registration, or tracking\",\n          \"Works offline once the page is loaded\"\n        ]}\n        features={[\n          commonFeatures.privacy,\n          commonFeatures.instant,\n          commonFeatures.free,\n          {\n            icon: ShieldCheck,\n            title: \"Cryptographically Secure\",\n            description: \"Uses browser's crypto API for true randomness.\",\n            highlight: true\n          }\n        ]}\n      />\n\n      <UseCasesSection\n        useCases={[\n          {\n            title: \"Account Security\",\n            description: \"Create unique, strong passwords for all your online accounts.\",\n            icon: User,\n            example: \"Generate different passwords for banking, email, social media\"\n          },\n          {\n            title: \"Work Accounts\",\n            description: \"Meet corporate password requirements with custom settings.\",\n            icon: Briefcase,\n            example: \"Create passwords matching company security policies\"\n          },\n          {\n            title: \"Email Protection\",\n            description: \"Secure email accounts with strong, unique passwords.\",\n            icon: Mail,\n            example: \"Generate complex passwords for Gmail, Outlook, ProtonMail\"\n          },\n          {\n            title: \"Financial Security\",\n            description: \"Protect banking and payment accounts with maximum security.\",\n            icon: CreditCard,\n            example: \"Create ultra-strong passwords for banking apps\"\n          },\n          {\n            title: \"Development & Testing\",\n            description: \"Generate test passwords for development environments.\",\n            icon: Hash,\n            example: \"Quick password generation for testing user accounts\"\n          },\n          {\n            title: \"Password Rotation\",\n            description: \"Regular password updates for enhanced security.\",\n            icon: RefreshCw,\n            example: \"Generate new passwords during quarterly security updates\"\n          }\n        ]}\n      />\n\n      <ComparisonSection\n        toolName=\"Password Generator\"\n        comparisons={[\n          { feature: \"Generation Method\", ourTool: \"Crypto API\", others: \"Math.random()\", highlight: true },\n          { feature: \"Privacy\", ourTool: \"100% client-side\", others: \"Server-generated\" },\n          { feature: \"Password Length\", ourTool: \"Up to 50 chars\", others: \"16-32 typical\" },\n          { feature: \"Character Sets\", ourTool: \"Fully customizable\", others: \"Limited options\" },\n          { feature: \"Strength Meter\", ourTool: \"Real-time analysis\", others: \"Basic or none\" },\n          { feature: \"History Tracking\", ourTool: \"Local only\", others: \"Cloud stored\" },\n          { feature: \"Usage Limits\", ourTool: \"Unlimited\", others: \"5-10 per day\" },\n          { feature: \"Registration\", ourTool: false, others: \"Often required\" },\n          { feature: \"Works Offline\", ourTool: true, others: false },\n          { feature: \"Cost\", ourTool: \"Free forever\", others: \"Freemium\" }\n        ]}\n      />\n\n      <ToolFAQ \n        faqs={generatePasswordGeneratorFAQs()}\n        toolName=\"Password Generator\"\n        toolPath=\"/password-generator\"\n      />\n    </div>\n\n  );\n}","size_bytes":26714},"client/src/pages/privacy-policy.tsx":{"content":"import { Card } from \"@/components/ui/card\";\nimport { Shield, Lock, Cookie, Mail, Globe, FileText, Users, Server } from \"lucide-react\";\nimport { useSEO } from \"@/hooks/use-seo\";\nimport { motion } from \"framer-motion\";\n\nconst sections = [\n  {\n    icon: Shield,\n    title: \"Our Privacy Commitment\",\n    content: [\n      \"At AltafToolsHub, your privacy is our top priority. We've built our entire platform around the principle of maximum privacy protection.\",\n      \"All file processing happens directly in your browser using WebAssembly and JavaScript. Your files never leave your device, and we never have access to them.\",\n      \"This privacy policy explains how we handle any information we collect and your rights regarding that information.\"\n    ]\n  },\n  {\n    icon: Server,\n    title: \"Data Collection & Processing\",\n    content: [\n      \"**Client-Side Processing Only**: All file manipulation, conversion, and compression happens entirely in your browser. We do not upload, store, or have access to any files you process using our tools.\",\n      \"**No Server Storage**: Since all processing is client-side, your files are never transmitted to our servers. They remain on your device throughout the entire process.\",\n      \"**Automatic Deletion**: Processed files exist only in your browser's memory during the session and are automatically cleared when you close the tab or navigate away.\"\n    ]\n  },\n  {\n    icon: Cookie,\n    title: \"Cookie Usage\",\n    content: [\n      \"We use cookies to improve your experience on our website. Here's how:\",\n      \"**Necessary Cookies**: Essential for the website to function properly. These include session cookies and security cookies.\",\n      \"**Analytics Cookies**: Help us understand how visitors interact with our website. We use privacy-focused analytics that don't track individual users.\",\n      \"**Functional Cookies**: Remember your preferences such as theme selection (light/dark mode) and language settings.\",\n      \"You can manage your cookie preferences at any time through the cookie consent banner or your browser settings.\"\n    ]\n  },\n  {\n    icon: Users,\n    title: \"Information We Collect\",\n    content: [\n      \"**Anonymous Analytics**: We collect aggregated, anonymous data about page views, tool usage, and general traffic patterns to improve our services.\",\n      \"**Error Reports**: If our tools encounter an error, we may collect anonymous error logs to help us fix issues. These never contain your file data.\",\n      \"**Voluntary Information**: Information you provide when contacting us via email for support or feedback.\",\n      \"**No Personal Data from Files**: We never collect, see, or store any data from the files you process.\"\n    ]\n  },\n  {\n    icon: Lock,\n    title: \"Your Rights & Control\",\n    content: [\n      \"**Access**: You have the right to request information about any data we have about you (which is minimal by design).\",\n      \"**Deletion**: You can request deletion of any information we might have about you.\",\n      \"**Opt-Out**: You can opt out of analytics cookies at any time through our cookie preferences.\",\n      \"**Data Portability**: You can request a copy of any data we have about you in a portable format.\",\n      \"**No Account Required**: We don't require accounts or registration, further protecting your privacy.\"\n    ]\n  },\n  {\n    icon: Globe,\n    title: \"Third-Party Services\",\n    content: [\n      \"**Analytics**: We use privacy-focused analytics services that don't track individual users or use cookies for tracking.\",\n      \"**CDN**: We use content delivery networks to serve our website faster, but they don't have access to your processed files.\",\n      \"**No Advertising**: We don't use any advertising networks or tracking pixels.\",\n      \"**No Social Media Tracking**: We don't use social media plugins that could track your activity.\"\n    ]\n  },\n  {\n    icon: FileText,\n    title: \"Data Security\",\n    content: [\n      \"**HTTPS Only**: Our entire website is served over HTTPS, ensuring encrypted connections.\",\n      \"**Browser Sandbox**: File processing happens within your browser's security sandbox, isolated from other websites.\",\n      \"**No Data Transmission**: Since files aren't uploaded, there's no risk of interception during transmission.\",\n      \"**Open Source Libraries**: We use well-maintained, open-source libraries for file processing.\"\n    ]\n  },\n  {\n    icon: Mail,\n    title: \"Contact & Updates\",\n    content: [\n      \"**Privacy Questions**: For any privacy-related questions or concerns, contact us at altaftoolshub@gmail.com\",\n      \"**Policy Updates**: We'll notify users of any significant changes to this privacy policy through a prominent notice on our website.\",\n      \"**Response Time**: We aim to respond to all privacy-related inquiries within 48 hours.\",\n      \"**Transparency Reports**: We commit to transparency about any data requests we receive (though we have no user data to share).\"\n    ]\n  }\n];\n\nexport default function PrivacyPolicy() {\n  useSEO({\n    title: \"Privacy Policy - AltafToolsHub | Your Privacy is Our Priority\",\n    description: \"Learn how AltafToolsHub protects your privacy with 100% client-side file processing. No uploads, no tracking, complete privacy.\",\n    path: \"/privacy\"\n  });\n\n  return (\n    <div className=\"min-h-screen pattern-bg\">\n      <div className=\"container mx-auto px-4 py-16\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n          className=\"max-w-4xl mx-auto\"\n        >\n          {/* Header */}\n          <div className=\"text-center mb-12\">\n            <div className=\"inline-flex items-center justify-center w-20 h-20 rounded-2xl bg-gradient-to-br from-purple-500 to-blue-500 mb-6\">\n              <Shield className=\"w-10 h-10 text-white\" />\n            </div>\n            <h1 className=\"text-4xl sm:text-5xl font-bold mb-4\">Privacy Policy</h1>\n            <p className=\"text-lg text-muted-foreground\">\n              Your privacy matters. Learn how we protect it.\n            </p>\n            <p className=\"text-sm text-muted-foreground mt-2\">\n              Last updated: January 20, 2025\n            </p>\n          </div>\n\n          {/* Key Privacy Features */}\n          <Card className=\"glass mb-8 p-6 border-2 border-primary/20\">\n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-6 text-center\">\n              <div>\n                <div className=\"text-3xl font-bold gradient-text mb-2\">100%</div>\n                <p className=\"text-sm text-muted-foreground\">Client-side processing</p>\n              </div>\n              <div>\n                <div className=\"text-3xl font-bold gradient-text mb-2\">0</div>\n                <p className=\"text-sm text-muted-foreground\">Files uploaded to servers</p>\n              </div>\n              <div>\n                <div className=\"text-3xl font-bold gradient-text mb-2\">Never</div>\n                <p className=\"text-sm text-muted-foreground\">Your data leaves your device</p>\n              </div>\n            </div>\n          </Card>\n\n          {/* Privacy Policy Sections */}\n          <div className=\"space-y-8\">\n            {sections.map((section, index) => {\n              const Icon = section.icon;\n              return (\n                <motion.div\n                  key={index}\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.6, delay: index * 0.1 }}\n                >\n                  <Card className=\"glass p-6 hover:shadow-xl transition-shadow duration-300\">\n                    <div className=\"flex items-start gap-4\">\n                      <div className=\"p-3 rounded-lg bg-primary/10 shrink-0\">\n                        <Icon className=\"w-6 h-6 text-primary\" />\n                      </div>\n                      <div className=\"flex-1\">\n                        <h2 className=\"text-2xl font-semibold mb-4\">{section.title}</h2>\n                        <div className=\"space-y-3\">\n                          {section.content.map((paragraph, pIndex) => (\n                            <p \n                              key={pIndex} \n                              className=\"text-muted-foreground leading-relaxed\"\n                              dangerouslySetInnerHTML={{ \n                                __html: paragraph\n                                  .replace(/\\*\\*(.*?)\\*\\*/g, '<strong class=\"text-foreground font-medium\">$1</strong>')\n                              }}\n                            />\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  </Card>\n                </motion.div>\n              );\n            })}\n          </div>\n\n          {/* GDPR Compliance Notice */}\n          <Card className=\"glass mt-8 p-6 bg-primary/5 border-primary/20\">\n            <h3 className=\"text-xl font-semibold mb-3\">GDPR Compliance</h3>\n            <p className=\"text-muted-foreground leading-relaxed\">\n              AltafToolsHub is fully compliant with the General Data Protection Regulation (GDPR). \n              We respect the privacy rights of all users, regardless of location. Our client-side \n              processing approach means we collect minimal data by design, giving you complete control \n              over your information.\n            </p>\n          </Card>\n\n          {/* Contact Section */}\n          <div className=\"text-center mt-12 p-8 rounded-2xl bg-gradient-to-br from-primary/10 to-primary/5\">\n            <Mail className=\"w-12 h-12 text-primary mx-auto mb-4\" />\n            <h3 className=\"text-2xl font-semibold mb-2\">Questions About Privacy?</h3>\n            <p className=\"text-muted-foreground mb-4\">\n              We're here to help with any privacy concerns you may have.\n            </p>\n            <a \n              href=\"mailto:altaftoolshub@gmail.com?subject=Privacy%20Question%20-%20AltafToolsHub\" \n              className=\"text-primary hover:underline font-medium\"\n              data-testid=\"link-privacy-email\"\n            >\n              altaftoolshub@gmail.com\n            </a>\n          </div>\n        </motion.div>\n      </div>\n    </div>\n  );\n}","size_bytes":10227},"client/src/pages/qr-generator.tsx":{"content":"import { useState, useEffect, useRef } from \"react\";\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useSEO, generateHowToSchema, generateSoftwareApplicationSchema } from \"@/hooks/use-seo\";\nimport { QrCode, Download, Copy, Palette, Zap, Shield, Check, X, RefreshCw, ArrowLeft } from \"lucide-react\";\nimport QRCode from \"qrcode\";\nimport Breadcrumbs from \"@/components/seo/breadcrumbs\";\nimport ToolSEO, { toolFAQs } from \"@/components/seo/tool-seo\";\nimport PrivacyNotice from \"@/components/privacy-notice\";\nimport { WhyUseSection, UseCasesSection, ComparisonSection, HowItWorksSection, commonFeatures } from \"@/components/seo/tool-features\";\nimport { ToolFAQ, generateQRGeneratorFAQs } from \"@/components/seo/tool-faq\";\nimport { Store, Share2, Wifi, Calendar, MapPin, CreditCard, Type, Settings as SettingsIcon } from \"lucide-react\";\nimport { ContactSupportSection } from \"@/components/contact-support\";\n\ntype QRSize = \"small\" | \"medium\" | \"large\";\n\nconst sizeMap: Record<QRSize, number> = {\n  small: 200,\n  medium: 300,\n  large: 400\n};\n\nexport default function QRGenerator() {\n  // Generate structured data for SEO\n  const howToSchema = generateHowToSchema({\n    name: \"How to Generate QR Codes Online\",\n    description: \"Create custom QR codes for text, URLs, and more with customizable colors and sizes\",\n    totalTime: \"PT30S\",\n    steps: [\n      { name: \"Enter Data\", text: \"Type or paste the text, URL, or data for your QR code\" },\n      { name: \"Customize Design\", text: \"Choose size and colors for your QR code\" },\n      { name: \"Generate QR Code\", text: \"QR code generates automatically as you type\" },\n      { name: \"Download\", text: \"Download your QR code as a PNG image\" }\n    ]\n  });\n\n  const softwareSchema = generateSoftwareApplicationSchema({\n    name: \"QR Code Generator - AltafToolsHub\",\n    description: \"Free QR code generator with custom colors and sizes. Create QR codes for URLs, text, WiFi, and more. 100% browser-based.\",\n    applicationCategory: \"BusinessApplication\",\n    url: \"https://www.altaftoolshub.com/qr-generator\",\n    aggregateRating: { ratingValue: 4.9, ratingCount: 2156, bestRating: 5 },\n    featureList: [\n      \"Generate QR codes for any text or URL\",\n      \"Custom foreground and background colors\",\n      \"Three size options (200px, 300px, 400px)\",\n      \"Real-time QR generation as you type\",\n      \"Download as PNG image\",\n      \"100% client-side processing\",\n      \"No watermarks or limits\"\n    ],\n    datePublished: \"2024-01-01\",\n    dateModified: \"2025-01-17\"\n  });\n\n  useSEO({\n    title: \"Free QR Code Generator - Create Custom QR Codes Online | AltafToolsHub\",\n    description: \"Free online QR code generator. Create custom QR codes from text, URLs, emails, phone numbers. Customize colors and sizes. 100% client-side for privacy.\",\n    path: \"/qr-generator\",\n    keywords: \"qr code generator, create qr code, free qr generator, online qr code, custom qr code, qr code maker, generate qr code, qr code creator, qr code 2025, ai qr generator\",\n    ogImage: \"https://www.altaftoolshub.com/og-qr-generator.png\",\n    structuredData: [howToSchema, softwareSchema],\n    additionalMetaTags: [\n      { name: \"application-name\", content: \"QR Code Generator - AltafToolsHub\" },\n      { property: \"article:section\", content: \"Utility Tools\" },\n      { property: \"article:tag\", content: \"QR Code Generation\" },\n      { property: \"article:tag\", content: \"Marketing Tools\" },\n      { property: \"article:tag\", content: \"Business Tools\" }\n    ]\n  });\n\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [text, setText] = useState(\"\");\n  const [size, setSize] = useState<QRSize>(\"medium\");\n  const [fgColor, setFgColor] = useState(\"#000000\");\n  const [bgColor, setBgColor] = useState(\"#ffffff\");\n  const [qrDataUrl, setQrDataUrl] = useState<string | null>(null);\n  const [isGenerating, setIsGenerating] = useState(false);\n  const { toast } = useToast();\n\n  // Generate QR code whenever input changes\n  useEffect(() => {\n    if (!text.trim()) {\n      setQrDataUrl(null);\n      return;\n    }\n\n    const generateQR = async () => {\n      setIsGenerating(true);\n      try {\n        const canvas = canvasRef.current;\n        if (!canvas) return;\n\n        await QRCode.toCanvas(canvas, text, {\n          width: sizeMap[size],\n          color: {\n            dark: fgColor,\n            light: bgColor\n          },\n          margin: 2,\n          errorCorrectionLevel: 'M'\n        });\n\n        const dataUrl = canvas.toDataURL('image/png');\n        setQrDataUrl(dataUrl);\n      } catch (error) {\n        console.error('Error generating QR code:', error);\n        toast({\n          title: \"Generation Failed\",\n          description: \"Failed to generate QR code. Please try again.\",\n          variant: \"destructive\"\n        });\n      } finally {\n        setIsGenerating(false);\n      }\n    };\n\n    const debounceTimer = setTimeout(generateQR, 300);\n    return () => clearTimeout(debounceTimer);\n  }, [text, size, fgColor, bgColor]);\n\n  const handleDownload = () => {\n    if (!qrDataUrl) return;\n\n    const link = document.createElement('a');\n    link.download = `qr-code-${Date.now()}.png`;\n    link.href = qrDataUrl;\n    link.click();\n\n    toast({\n      title: \"Downloaded!\",\n      description: \"QR code has been downloaded successfully.\",\n    });\n  };\n\n  const handleCopyImage = async () => {\n    if (!qrDataUrl) return;\n\n    try {\n      const blob = await (await fetch(qrDataUrl)).blob();\n      await navigator.clipboard.write([\n        new ClipboardItem({\n          'image/png': blob\n        })\n      ]);\n      \n      toast({\n        title: \"Copied!\",\n        description: \"QR code copied to clipboard.\",\n      });\n    } catch (error) {\n      // Fallback: copy data URL as text\n      await navigator.clipboard.writeText(qrDataUrl);\n      toast({\n        title: \"Copied!\",\n        description: \"QR code data copied to clipboard.\",\n      });\n    }\n  };\n\n  const handleReset = () => {\n    setText(\"\");\n    setSize(\"medium\");\n    setFgColor(\"#000000\");\n    setBgColor(\"#ffffff\");\n    setQrDataUrl(null);\n  };\n\n  return (\n    <div className=\"min-h-screen pattern-bg\">\n      <ToolSEO \n        toolName=\"QR Code Generator\"\n        description=\"Generate QR codes instantly from text or URLs with customizable colors and sizes\"\n        category=\"UtilitiesApplication\"\n        faqs={toolFAQs[\"qr-generator\"]}\n        rating={{ value: 4.9, count: 456 }}\n      />\n      <div className=\"container mx-auto px-4 py-8 max-w-6xl\">\n        <Breadcrumbs items={[{ name: \"QR Generator\", url: \"/qr-generator\" }]} />\n        {/* Header */}\n        <div className=\"text-center mb-8\">\n          <Button \n            variant=\"ghost\" \n            className=\"mb-4\" \n            data-testid=\"button-back\"\n            onClick={() => {\n              window.location.href = '/';\n              setTimeout(() => {\n                const toolsSection = document.getElementById('tools-section');\n                if (toolsSection) {\n                  toolsSection.scrollIntoView({ behavior: 'smooth' });\n                }\n              }, 100);\n            }}\n          >\n            <ArrowLeft className=\"w-4 h-4 mr-2\" />\n            Back to Tools\n          </Button>\n          <div className=\"inline-flex items-center justify-center w-16 h-16 rounded-2xl bg-gradient-to-br from-indigo-500 to-purple-600 mb-4\">\n            <QrCode className=\"w-8 h-8 text-white\" />\n          </div>\n          <h1 className=\"text-4xl font-bold mb-4\">QR Code Generator</h1>\n          <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n            Generate QR codes instantly from any text or URL. Customize colors and sizes, all processed securely in your browser.\n          </p>\n        </div>\n\n        {/* Privacy Notice */}\n        <PrivacyNotice message=\"QR codes are generated locally. Your data remains completely private.\" />\n\n        {/* Features */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-8\">\n          <Card className=\"p-4 glass\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"w-10 h-10 rounded-lg bg-gradient-to-br from-purple-500 to-blue-500 flex items-center justify-center\">\n                <Shield className=\"w-5 h-5 text-white\" />\n              </div>\n              <div>\n                <h3 className=\"font-semibold\">100% Private</h3>\n                <p className=\"text-sm text-muted-foreground\">Generated in your browser</p>\n              </div>\n            </div>\n          </Card>\n          <Card className=\"p-4 glass\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"w-10 h-10 rounded-lg bg-gradient-to-br from-blue-500 to-cyan-500 flex items-center justify-center\">\n                <Zap className=\"w-5 h-5 text-white\" />\n              </div>\n              <div>\n                <h3 className=\"font-semibold\">Instant Generation</h3>\n                <p className=\"text-sm text-muted-foreground\">Real-time QR codes</p>\n              </div>\n            </div>\n          </Card>\n          <Card className=\"p-4 glass\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"w-10 h-10 rounded-lg bg-gradient-to-br from-cyan-500 to-teal-500 flex items-center justify-center\">\n                <Palette className=\"w-5 h-5 text-white\" />\n              </div>\n              <div>\n                <h3 className=\"font-semibold\">Customizable</h3>\n                <p className=\"text-sm text-muted-foreground\">Colors and sizes</p>\n              </div>\n            </div>\n          </Card>\n        </div>\n\n        {/* Main Content */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          {/* Input Section */}\n          <Card className=\"p-6\">\n            <h2 className=\"text-xl font-semibold mb-4\">QR Code Content</h2>\n            \n            <div className=\"space-y-4\">\n              <div>\n                <Label htmlFor=\"qr-text\">Text or URL</Label>\n                <Textarea\n                  id=\"qr-text\"\n                  placeholder=\"Enter text, URL, or any data to encode...\"\n                  value={text}\n                  onChange={(e) => setText(e.target.value)}\n                  className=\"mt-2 min-h-[120px]\"\n                  data-testid=\"input-qr-text\"\n                />\n                <p className=\"text-sm text-muted-foreground mt-1\">\n                  {text.length} characters\n                </p>\n              </div>\n\n              <div>\n                <Label htmlFor=\"qr-size\">Size</Label>\n                <Select value={size} onValueChange={(v) => setSize(v as QRSize)}>\n                  <SelectTrigger id=\"qr-size\" className=\"mt-2\" data-testid=\"select-qr-size\">\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"small\">Small (200x200)</SelectItem>\n                    <SelectItem value=\"medium\">Medium (300x300)</SelectItem>\n                    <SelectItem value=\"large\">Large (400x400)</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <Label htmlFor=\"fg-color\">Foreground Color</Label>\n                  <div className=\"flex gap-2 mt-2\">\n                    <Input\n                      id=\"fg-color\"\n                      type=\"color\"\n                      value={fgColor}\n                      onChange={(e) => setFgColor(e.target.value)}\n                      className=\"w-16 h-10 p-1 cursor-pointer\"\n                      data-testid=\"input-fg-color\"\n                    />\n                    <Input\n                      type=\"text\"\n                      value={fgColor}\n                      onChange={(e) => setFgColor(e.target.value)}\n                      placeholder=\"#000000\"\n                      className=\"flex-1\"\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"bg-color\">Background Color</Label>\n                  <div className=\"flex gap-2 mt-2\">\n                    <Input\n                      id=\"bg-color\"\n                      type=\"color\"\n                      value={bgColor}\n                      onChange={(e) => setBgColor(e.target.value)}\n                      className=\"w-16 h-10 p-1 cursor-pointer\"\n                      data-testid=\"input-bg-color\"\n                    />\n                    <Input\n                      type=\"text\"\n                      value={bgColor}\n                      onChange={(e) => setBgColor(e.target.value)}\n                      placeholder=\"#ffffff\"\n                      className=\"flex-1\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <Button\n                onClick={handleReset}\n                variant=\"outline\"\n                className=\"w-full\"\n                data-testid=\"button-reset-qr\"\n              >\n                <RefreshCw className=\"w-4 h-4 mr-2\" />\n                Reset All\n              </Button>\n            </div>\n          </Card>\n\n          {/* Output Section */}\n          <Card className=\"p-6\">\n            <h2 className=\"text-xl font-semibold mb-4\">Generated QR Code</h2>\n            \n            <div className=\"flex flex-col items-center\">\n              {text.trim() ? (\n                <>\n                  <div className=\"relative mb-6\">\n                    <canvas\n                      ref={canvasRef}\n                      className=\"border rounded-lg shadow-lg\"\n                      style={{\n                        maxWidth: '100%',\n                        height: 'auto',\n                        display: isGenerating ? 'none' : 'block'\n                      }}\n                    />\n                    {isGenerating && (\n                      <div className=\"flex items-center justify-center w-full h-64 border rounded-lg\">\n                        <div className=\"text-center\">\n                          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary mx-auto mb-4\"></div>\n                          <p className=\"text-muted-foreground\">Generating QR code...</p>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n\n                  {qrDataUrl && !isGenerating && (\n                    <div className=\"flex gap-4 w-full\">\n                      <Button\n                        onClick={handleDownload}\n                        className=\"flex-1\"\n                        data-testid=\"button-download-qr\"\n                      >\n                        <Download className=\"w-4 h-4 mr-2\" />\n                        Download PNG\n                      </Button>\n                      <Button\n                        onClick={handleCopyImage}\n                        variant=\"outline\"\n                        className=\"flex-1\"\n                        data-testid=\"button-copy-qr\"\n                      >\n                        <Copy className=\"w-4 h-4 mr-2\" />\n                        Copy Image\n                      </Button>\n                    </div>\n                  )}\n                </>\n              ) : (\n                <div className=\"flex flex-col items-center justify-center h-64 text-center\">\n                  <QrCode className=\"w-16 h-16 text-muted-foreground mb-4\" />\n                  <p className=\"text-muted-foreground\">\n                    Enter text or URL to generate QR code\n                  </p>\n                </div>\n              )}\n            </div>\n          </Card>\n        </div>\n\n        {/* Tips Section */}\n        <Card className=\"mt-8 p-6 bg-gradient-to-br from-primary/5 to-primary/10\">\n          <h3 className=\"text-lg font-semibold mb-3\">Pro Tips</h3>\n          <ul className=\"space-y-2\">\n            <li className=\"flex items-start gap-2\">\n              <Check className=\"w-5 h-5 text-green-500 mt-0.5\" />\n              <span className=\"text-sm\">QR codes can store URLs, text, WiFi credentials, contact info, and more</span>\n            </li>\n            <li className=\"flex items-start gap-2\">\n              <Check className=\"w-5 h-5 text-green-500 mt-0.5\" />\n              <span className=\"text-sm\">Higher error correction allows QR codes to work even when partially damaged</span>\n            </li>\n            <li className=\"flex items-start gap-2\">\n              <Check className=\"w-5 h-5 text-green-500 mt-0.5\" />\n              <span className=\"text-sm\">Use high contrast colors for better scanning reliability</span>\n            </li>\n            <li className=\"flex items-start gap-2\">\n              <Check className=\"w-5 h-5 text-green-500 mt-0.5\" />\n              <span className=\"text-sm\">Test your QR code with different devices before sharing</span>\n            </li>\n          </ul>\n        </Card>\n      </div>\n\n      {/* SEO Content Sections */}\n      <HowItWorksSection\n        toolName=\"QR Code Generator\"\n        steps={[\n          {\n            number: 1,\n            title: \"Enter Your Data\",\n            description: \"Type or paste any text, URL, email, or phone number into the input field.\",\n            icon: Type\n          },\n          {\n            number: 2,\n            title: \"Customize Appearance\",\n            description: \"Choose size and colors to match your brand or preference.\",\n            icon: Palette\n          },\n          {\n            number: 3,\n            title: \"Download QR Code\",\n            description: \"Save your QR code as a high-quality PNG image for any use.\",\n            icon: Download\n          }\n        ]}\n      />\n\n      <WhyUseSection\n        toolName=\"QR Code Generator\"\n        benefits={[\n          \"Generate unlimited QR codes without any restrictions or watermarks\",\n          \"Real-time generation - see your QR code update as you type\",\n          \"Custom colors to match your brand or design requirements\",\n          \"Three size options for different use cases and resolutions\",\n          \"Works with any QR scanner app on smartphones and tablets\",\n          \"100% browser-based - no data sent to servers\",\n          \"No registration, email, or personal information required\",\n          \"QR codes never expire and work forever\"\n        ]}\n        features={[\n          commonFeatures.privacy,\n          commonFeatures.instant,\n          commonFeatures.free,\n          {\n            icon: Palette,\n            title: \"Custom Colors\",\n            description: \"Match your brand with custom foreground and background colors.\"\n          }\n        ]}\n      />\n\n      <UseCasesSection\n        useCases={[\n          {\n            title: \"Business Cards\",\n            description: \"Add QR codes to business cards for instant contact sharing.\",\n            icon: CreditCard,\n            example: \"Link to your digital vCard or LinkedIn profile\"\n          },\n          {\n            title: \"Restaurant Menus\",\n            description: \"Create contactless digital menus for restaurants and cafes.\",\n            icon: Store,\n            example: \"QR code linking to online menu or ordering system\"\n          },\n          {\n            title: \"WiFi Sharing\",\n            description: \"Share WiFi credentials without revealing the password.\",\n            icon: Wifi,\n            example: \"Generate WiFi QR for guests and customers\"\n          },\n          {\n            title: \"Event Management\",\n            description: \"Use QR codes for event tickets, check-ins, and information.\",\n            icon: Calendar,\n            example: \"Event registration and attendance tracking\"\n          },\n          {\n            title: \"Marketing Campaigns\",\n            description: \"Track campaign performance with unique QR codes.\",\n            icon: Share2,\n            example: \"Print ads, flyers, and promotional materials\"\n          },\n          {\n            title: \"Location Sharing\",\n            description: \"Share locations for meetups, stores, or events.\",\n            icon: MapPin,\n            example: \"Google Maps links for easy navigation\"\n          }\n        ]}\n      />\n\n      <ComparisonSection\n        toolName=\"QR Generator\"\n        comparisons={[\n          { feature: \"Data Privacy\", ourTool: \"100% client-side\", others: \"Server processing\", highlight: true },\n          { feature: \"Generation Speed\", ourTool: \"Real-time\", others: \"Submit and wait\" },\n          { feature: \"Custom Colors\", ourTool: \"Full RGB control\", others: \"Limited presets\" },\n          { feature: \"Size Options\", ourTool: \"3 sizes\", others: \"Fixed size\" },\n          { feature: \"Usage Limits\", ourTool: \"Unlimited\", others: \"10-50 per day\" },\n          { feature: \"Registration\", ourTool: false, others: \"Email required\" },\n          { feature: \"Watermarks\", ourTool: false, others: \"On free tier\" },\n          { feature: \"QR Code Expiry\", ourTool: \"Never expires\", others: \"May expire\" },\n          { feature: \"Download Format\", ourTool: \"PNG\", others: \"PNG, paid for SVG\" },\n          { feature: \"Cost\", ourTool: \"Free forever\", others: \"$5-20/month\" }\n        ]}\n      />\n\n      <ToolFAQ \n        faqs={generateQRGeneratorFAQs()}\n        toolName=\"QR Code Generator\"\n        toolPath=\"/qr-generator\"\n      />\n    </div>\n\n  );\n}","size_bytes":21502},"client/src/pages/terms-conditions.tsx":{"content":"import { Card } from \"@/components/ui/card\";\nimport { ScrollText, Shield, AlertCircle, Users, Globe, Scale, Ban, Mail } from \"lucide-react\";\nimport { useSEO } from \"@/hooks/use-seo\";\nimport { motion } from \"framer-motion\";\n\nconst sections = [\n  {\n    icon: ScrollText,\n    title: \"Terms of Service\",\n    content: [\n      \"Welcome to AltafToolsHub. These Terms and Conditions (\\\"Terms\\\") govern your use of our website and services.\",\n      \"By accessing or using AltafToolsHub, you agree to be bound by these Terms. If you disagree with any part of these terms, you may not access our services.\",\n      \"Our services are provided \\\"as is\\\" for personal and commercial use, subject to the restrictions outlined in these Terms.\"\n    ]\n  },\n  {\n    icon: Shield,\n    title: \"Service Description\",\n    content: [\n      \"**Client-Side Processing**: AltafToolsHub provides browser-based file manipulation tools that process files entirely on your device. No files are uploaded to our servers.\",\n      \"**Free to Use**: All tools are currently provided free of charge for both personal and commercial use.\",\n      \"**No Registration Required**: You can use our services without creating an account or providing personal information.\",\n      \"**Service Availability**: While we strive for 100% uptime, we cannot guarantee uninterrupted access to our services.\"\n    ]\n  },\n  {\n    icon: Users,\n    title: \"User Responsibilities\",\n    content: [\n      \"**Legal Use Only**: You agree to use our services only for lawful purposes and in accordance with these Terms.\",\n      \"**File Ownership**: You must own or have the necessary rights to any files you process using our tools.\",\n      \"**Data Backup**: You are responsible for maintaining backups of your files. We are not liable for any data loss.\",\n      \"**Security**: You are responsible for the security of your device and files. Ensure you're using our services on secure, malware-free systems.\"\n    ]\n  },\n  {\n    icon: Ban,\n    title: \"Prohibited Uses\",\n    content: [\n      \"You may not use our services to:\",\n      \"• Process files containing illegal, harmful, or malicious content\",\n      \"• Violate any applicable laws or regulations\",\n      \"• Infringe upon intellectual property rights of others\",\n      \"• Attempt to reverse engineer, decompile, or hack our services\",\n      \"• Use automated systems or bots to access our services in a manner that impairs performance\",\n      \"• Misrepresent the source or ownership of processed files\"\n    ]\n  },\n  {\n    icon: AlertCircle,\n    title: \"Limitation of Liability\",\n    content: [\n      \"**No Warranties**: Our services are provided \\\"as is\\\" without any warranties, express or implied.\",\n      \"**Data Loss**: We are not responsible for any data loss or corruption that may occur during file processing.\",\n      \"**Indirect Damages**: We shall not be liable for any indirect, incidental, special, or consequential damages.\",\n      \"**Maximum Liability**: Our total liability shall not exceed the amount you paid for using our services (which is currently zero).\",\n      \"**Force Majeure**: We are not liable for any failure to perform due to circumstances beyond our reasonable control.\"\n    ]\n  },\n  {\n    icon: Globe,\n    title: \"Intellectual Property\",\n    content: [\n      \"**Our Content**: All content on AltafToolsHub, including text, graphics, logos, and software, is our property or licensed to us.\",\n      \"**Your Files**: You retain all rights to the files you process. We do not claim any ownership of your content.\",\n      \"**Feedback**: Any feedback or suggestions you provide may be used by us without compensation or attribution.\",\n      \"**Open Source**: Some components of our service use open-source software, subject to their respective licenses.\"\n    ]\n  },\n  {\n    icon: Scale,\n    title: \"Privacy & Data Protection\",\n    content: [\n      \"**Privacy First**: We process all files locally in your browser. Your files never leave your device.\",\n      \"**No Data Collection**: We don't collect, store, or have access to the contents of your files.\",\n      \"**Analytics**: We use privacy-focused analytics to improve our services. No personal data is collected.\",\n      \"**Compliance**: We comply with GDPR and other applicable data protection regulations.\",\n      \"For more details, please refer to our Privacy Policy.\"\n    ]\n  },\n  {\n    icon: Mail,\n    title: \"Changes & Contact\",\n    content: [\n      \"**Terms Updates**: We reserve the right to modify these Terms at any time. Significant changes will be notified on our website.\",\n      \"**Continued Use**: Your continued use of our services after changes constitutes acceptance of the new Terms.\",\n      \"**Severability**: If any provision of these Terms is found invalid, the remaining provisions shall continue in effect.\",\n      \"**Contact Us**: For questions about these Terms, contact us at altaftoolshub@gmail.com\",\n      \"**Governing Law**: These Terms are governed by the laws of the jurisdiction where we operate.\"\n    ]\n  }\n];\n\nconst faqs = [\n  {\n    question: \"Can I use AltafToolsHub for commercial purposes?\",\n    answer: \"Yes, our tools are free for both personal and commercial use. However, you must ensure you have the rights to process the files you're working with.\"\n  },\n  {\n    question: \"What happens to my files after processing?\",\n    answer: \"Your files are processed entirely in your browser and never leave your device. Once you close the tab or navigate away, all file data is automatically cleared from memory.\"\n  },\n  {\n    question: \"Are there any file size limits?\",\n    answer: \"File size limits depend on your device's available memory since all processing happens locally. Generally, files up to several hundred MB can be processed on most modern devices.\"\n  },\n  {\n    question: \"Do you store or have access to my files?\",\n    answer: \"No. All file processing happens in your browser using client-side JavaScript. We have no access to your files and cannot see, store, or retrieve them.\"\n  }\n];\n\nexport default function TermsConditions() {\n  useSEO({\n    title: \"Terms & Conditions - AltafToolsHub | Service Agreement\",\n    description: \"Read our terms of service for using AltafToolsHub's privacy-focused file tools. Understand your rights and responsibilities.\",\n    path: \"/terms\"\n  });\n\n  return (\n    <div className=\"min-h-screen pattern-bg\">\n      <div className=\"container mx-auto px-4 py-16\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n          className=\"max-w-4xl mx-auto\"\n        >\n          {/* Header */}\n          <div className=\"text-center mb-12\">\n            <div className=\"inline-flex items-center justify-center w-20 h-20 rounded-2xl bg-gradient-to-br from-blue-500 to-cyan-500 mb-6\">\n              <ScrollText className=\"w-10 h-10 text-white\" />\n            </div>\n            <h1 className=\"text-4xl sm:text-5xl font-bold mb-4\">Terms & Conditions</h1>\n            <p className=\"text-lg text-muted-foreground\">\n              Please read these terms carefully before using our services\n            </p>\n            <p className=\"text-sm text-muted-foreground mt-2\">\n              Effective Date: January 20, 2025\n            </p>\n          </div>\n\n          {/* Quick Summary */}\n          <Card className=\"glass mb-8 p-6 border-2 border-primary/20\">\n            <h2 className=\"text-xl font-semibold mb-4 flex items-center gap-2\">\n              <AlertCircle className=\"w-5 h-5 text-primary\" />\n              Quick Summary\n            </h2>\n            <ul className=\"space-y-2 text-muted-foreground\">\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-primary mt-1\">✓</span>\n                <span>Free to use for personal and commercial purposes</span>\n              </li>\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-primary mt-1\">✓</span>\n                <span>All processing happens in your browser - we never see your files</span>\n              </li>\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-primary mt-1\">✓</span>\n                <span>You retain all rights to your files</span>\n              </li>\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-primary mt-1\">✓</span>\n                <span>Service provided \"as is\" without warranties</span>\n              </li>\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-primary mt-1\">✓</span>\n                <span>We respect your privacy and comply with data protection laws</span>\n              </li>\n            </ul>\n          </Card>\n\n          {/* Terms Sections */}\n          <div className=\"space-y-8\">\n            {sections.map((section, index) => {\n              const Icon = section.icon;\n              return (\n                <motion.div\n                  key={index}\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.6, delay: index * 0.1 }}\n                >\n                  <Card className=\"glass p-6 hover:shadow-xl transition-shadow duration-300\">\n                    <div className=\"flex items-start gap-4\">\n                      <div className=\"p-3 rounded-lg bg-primary/10 shrink-0\">\n                        <Icon className=\"w-6 h-6 text-primary\" />\n                      </div>\n                      <div className=\"flex-1\">\n                        <h2 className=\"text-2xl font-semibold mb-4\">{section.title}</h2>\n                        <div className=\"space-y-3\">\n                          {section.content.map((paragraph, pIndex) => (\n                            <p \n                              key={pIndex} \n                              className=\"text-muted-foreground leading-relaxed\"\n                              dangerouslySetInnerHTML={{ \n                                __html: paragraph\n                                  .replace(/\\*\\*(.*?)\\*\\*/g, '<strong class=\"text-foreground font-medium\">$1</strong>')\n                                  .replace(/^• /gm, '<span class=\"ml-4\">• </span>')\n                              }}\n                            />\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  </Card>\n                </motion.div>\n              );\n            })}\n          </div>\n\n          {/* FAQs Section */}\n          <div className=\"mt-12\">\n            <h2 className=\"text-2xl font-semibold mb-6 text-center\">Frequently Asked Questions</h2>\n            <div className=\"space-y-4\">\n              {faqs.map((faq, index) => (\n                <motion.div\n                  key={index}\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.6, delay: 0.8 + index * 0.1 }}\n                >\n                  <Card className=\"glass p-6\">\n                    <h3 className=\"font-semibold mb-2\">{faq.question}</h3>\n                    <p className=\"text-muted-foreground\">{faq.answer}</p>\n                  </Card>\n                </motion.div>\n              ))}\n            </div>\n          </div>\n\n          {/* Acceptance Notice */}\n          <Card className=\"glass mt-8 p-6 bg-primary/5 border-primary/20\">\n            <h3 className=\"text-xl font-semibold mb-3\">Acceptance of Terms</h3>\n            <p className=\"text-muted-foreground leading-relaxed\">\n              By using AltafToolsHub, you acknowledge that you have read, understood, and agree to be \n              bound by these Terms and Conditions. If you do not agree with any part of these terms, \n              please do not use our services. We reserve the right to update these terms at any time, \n              and your continued use constitutes acceptance of any changes.\n            </p>\n          </Card>\n\n          {/* Contact Section */}\n          <div className=\"text-center mt-12 p-8 rounded-2xl bg-gradient-to-br from-primary/10 to-primary/5\">\n            <Scale className=\"w-12 h-12 text-primary mx-auto mb-4\" />\n            <h3 className=\"text-2xl font-semibold mb-2\">Legal Questions?</h3>\n            <p className=\"text-muted-foreground mb-4\">\n              Contact our legal team for any questions about these terms.\n            </p>\n            <a \n              href=\"mailto:altaftoolshub@gmail.com?subject=Legal%20Question%20-%20AltafToolsHub\" \n              className=\"text-primary hover:underline font-medium\"\n              data-testid=\"link-legal-email\"\n            >\n              altaftoolshub@gmail.com\n            </a>\n          </div>\n        </motion.div>\n      </div>\n    </div>\n  );\n}","size_bytes":12825},"client/src/components/seo/breadcrumbs.tsx":{"content":"import { Link } from \"wouter\";\nimport { ChevronRight, Home } from \"lucide-react\";\nimport { useEffect } from \"react\";\nimport { generateBreadcrumbSchema } from \"@/hooks/use-seo\";\n\ninterface BreadcrumbItem {\n  name: string;\n  url: string;\n}\n\ninterface BreadcrumbsProps {\n  items: BreadcrumbItem[];\n}\n\nexport default function Breadcrumbs({ items }: BreadcrumbsProps) {\n  const allItems = [\n    { name: \"Home\", url: \"/\" },\n    ...items\n  ];\n\n  useEffect(() => {\n    // Add breadcrumb structured data\n    const script = document.createElement('script');\n    script.type = 'application/ld+json';\n    script.textContent = JSON.stringify(generateBreadcrumbSchema(allItems));\n    script.id = 'breadcrumb-schema';\n    \n    // Remove existing breadcrumb schema if exists\n    const existing = document.getElementById('breadcrumb-schema');\n    if (existing) {\n      existing.remove();\n    }\n    \n    document.head.appendChild(script);\n\n    return () => {\n      const element = document.getElementById('breadcrumb-schema');\n      if (element) {\n        element.remove();\n      }\n    };\n  }, [items]);\n\n  return (\n    <nav \n      aria-label=\"Breadcrumb\" \n      className=\"mb-6\"\n      data-testid=\"nav-breadcrumb\"\n    >\n      <ol \n        className=\"flex items-center space-x-2 text-sm\"\n        itemScope \n        itemType=\"https://schema.org/BreadcrumbList\"\n      >\n        {allItems.map((item, index) => (\n          <li \n            key={item.url}\n            className=\"flex items-center\"\n            itemProp=\"itemListElement\" \n            itemScope \n            itemType=\"https://schema.org/ListItem\"\n          >\n            {index > 0 && (\n              <ChevronRight className=\"w-4 h-4 mx-2 text-muted-foreground\" />\n            )}\n            {index === allItems.length - 1 ? (\n              <span \n                className=\"text-muted-foreground font-medium\"\n                itemProp=\"name\"\n                data-testid={`breadcrumb-current-${item.name.toLowerCase().replace(/\\s+/g, '-')}`}\n              >\n                {item.name}\n              </span>\n            ) : (\n              <Link \n                href={item.url}\n                className=\"text-primary hover:text-primary/80 transition-colors flex items-center gap-1\"\n                itemProp=\"item\"\n                data-testid={`breadcrumb-link-${item.name.toLowerCase().replace(/\\s+/g, '-')}`}\n              >\n                {index === 0 && <Home className=\"w-4 h-4\" />}\n                <span itemProp=\"name\">{item.name}</span>\n              </Link>\n            )}\n            <meta itemProp=\"position\" content={String(index + 1)} />\n          </li>\n        ))}\n      </ol>\n    </nav>\n  );\n}","size_bytes":2651},"client/src/components/seo/tool-seo.tsx":{"content":"import { useEffect } from \"react\";\nimport { generateWebApplicationSchema, generateFAQSchema } from \"@/hooks/use-seo\";\n\ninterface ToolSEOProps {\n  toolName: string;\n  description: string;\n  category: string;\n  faqs?: { question: string; answer: string }[];\n  rating?: { value: number; count: number };\n}\n\nexport default function ToolSEO({ \n  toolName, \n  description, \n  category,\n  faqs,\n  rating\n}: ToolSEOProps) {\n  useEffect(() => {\n    const schemas = [];\n    \n    // Add WebApplication schema\n    schemas.push(generateWebApplicationSchema({\n      name: toolName,\n      description: description,\n      applicationCategory: category,\n      aggregateRating: rating ? {\n        ratingValue: rating.value,\n        ratingCount: rating.count\n      } : undefined\n    }));\n    \n    // Add FAQ schema if FAQs are provided\n    if (faqs && faqs.length > 0) {\n      schemas.push(generateFAQSchema(faqs));\n    }\n    \n    // Create script element for structured data\n    const script = document.createElement('script');\n    script.type = 'application/ld+json';\n    script.textContent = JSON.stringify(schemas);\n    script.id = 'tool-schema';\n    \n    // Remove existing schema if exists\n    const existing = document.getElementById('tool-schema');\n    if (existing) {\n      existing.remove();\n    }\n    \n    document.head.appendChild(script);\n    \n    return () => {\n      const element = document.getElementById('tool-schema');\n      if (element) {\n        element.remove();\n      }\n    };\n  }, [toolName, description, category, faqs, rating]);\n  \n  return null;\n}\n\n// Predefined FAQs for each tool\nexport const toolFAQs = {\n  \"compress-pdf\": [\n    {\n      question: \"How does the PDF compression work?\",\n      answer: \"Our PDF compressor uses advanced algorithms to reduce file size while maintaining quality. It optimizes images, removes redundant data, and applies smart compression techniques. All processing happens in your browser for complete privacy.\"\n    },\n    {\n      question: \"Can I compress PDF to a specific size?\",\n      answer: \"Yes! You can choose target sizes from 10KB to 5MB. Our intelligent algorithm adjusts compression parameters to achieve your desired file size while preserving maximum quality.\"\n    },\n    {\n      question: \"Is my PDF file secure during compression?\",\n      answer: \"Absolutely! All compression happens directly in your browser. Your files never leave your device or get uploaded to any server, ensuring 100% privacy and security.\"\n    },\n    {\n      question: \"What's the maximum file size I can compress?\",\n      answer: \"You can compress PDF files up to 100MB in size. Larger files may take longer to process depending on your device's performance.\"\n    }\n  ],\n  \"unlock-pdf\": [\n    {\n      question: \"How do I unlock a password-protected PDF?\",\n      answer: \"Simply upload your password-protected PDF file and enter the password. Our tool will remove the password protection and create an unlocked version you can download.\"\n    },\n    {\n      question: \"Is it safe to unlock PDFs with this tool?\",\n      answer: \"Yes, it's completely safe. All processing happens in your browser locally. Neither your file nor your password is sent to any server, ensuring complete privacy.\"\n    },\n    {\n      question: \"Will unlocking affect the PDF quality?\",\n      answer: \"No, unlocking a PDF maintains the original quality. The tool simply removes the password protection without altering the content or quality of your document.\"\n    },\n    {\n      question: \"What types of PDF passwords can be removed?\",\n      answer: \"Our tool can remove user passwords (open passwords) that prevent opening the PDF. You need to know the password to unlock the file.\"\n    }\n  ],\n  \"jpg-to-pdf\": [\n    {\n      question: \"How many images can I convert to PDF at once?\",\n      answer: \"You can convert multiple JPG, PNG, and other image formats to a single PDF. The only limit is your browser's memory capacity.\"\n    },\n    {\n      question: \"Can I adjust the page layout and orientation?\",\n      answer: \"Yes! You can choose from various page sizes (A4, Letter, Legal), orientations (Portrait, Landscape), and layout options (one per page, multiple per page).\"\n    },\n    {\n      question: \"Will my images be compressed during conversion?\",\n      answer: \"You control the quality! Choose from low, medium, high, or maximum quality settings to balance file size and image quality according to your needs.\"\n    },\n    {\n      question: \"Is the conversion process secure?\",\n      answer: \"100% secure! All conversion happens in your browser. Your images are never uploaded to any server, ensuring complete privacy.\"\n    }\n  ],\n  \"qr-generator\": [\n    {\n      question: \"What can I encode in a QR code?\",\n      answer: \"You can encode any text, URLs, email addresses, phone numbers, WiFi credentials, or plain text messages up to 2,953 characters.\"\n    },\n    {\n      question: \"Can I customize the QR code appearance?\",\n      answer: \"Yes! You can customize the foreground and background colors, and choose from three different sizes (small, medium, large) for your QR codes.\"\n    },\n    {\n      question: \"Are the generated QR codes permanent?\",\n      answer: \"Yes, once generated and downloaded, your QR codes are permanent and will work forever. They don't expire or require any online service to function.\"\n    },\n    {\n      question: \"What format are the QR codes saved in?\",\n      answer: \"QR codes are generated as high-quality PNG images that can be used for both digital and print purposes.\"\n    }\n  ],\n  \"password-generator\": [\n    {\n      question: \"How secure are the generated passwords?\",\n      answer: \"Our passwords use cryptographically secure random generation. They're created using your browser's secure random number generator, ensuring maximum unpredictability.\"\n    },\n    {\n      question: \"What makes a strong password?\",\n      answer: \"A strong password is at least 12 characters long and includes a mix of uppercase letters, lowercase letters, numbers, and symbols. Our generator helps you create passwords meeting these criteria.\"\n    },\n    {\n      question: \"Are generated passwords stored anywhere?\",\n      answer: \"No, passwords are generated locally in your browser and are never stored or transmitted. The history feature only stores passwords temporarily in your browser session.\"\n    },\n    {\n      question: \"Can I customize password requirements?\",\n      answer: \"Yes! You can adjust length (4-128 characters) and choose which character types to include: uppercase, lowercase, numbers, and symbols.\"\n    }\n  ],\n  \"word-counter\": [\n    {\n      question: \"What does the word counter tool count?\",\n      answer: \"Our tool counts words, characters (with and without spaces), sentences, paragraphs, and provides estimated reading and speaking times.\"\n    },\n    {\n      question: \"How accurate is the reading time estimate?\",\n      answer: \"Reading time is calculated at 200 words per minute (average adult reading speed). Speaking time uses 150 words per minute (average presentation speed).\"\n    },\n    {\n      question: \"Can I count words in different languages?\",\n      answer: \"Yes! The word counter works with any language that uses space-separated words, including English, Spanish, French, German, and many others.\"\n    },\n    {\n      question: \"Is there a limit to how much text I can analyze?\",\n      answer: \"There's no hard limit, but very large texts (over 100,000 words) may slow down your browser. The tool handles typical documents and articles with ease.\"\n    }\n  ]\n};","size_bytes":7532},"client/src/components/privacy-notice.tsx":{"content":"import { Shield } from \"lucide-react\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { cn } from \"@/lib/utils\";\n\ninterface PrivacyNoticeProps {\n  message: string;\n  className?: string;\n}\n\nexport default function PrivacyNotice({ message, className }: PrivacyNoticeProps) {\n  return (\n    <Alert \n      className={cn(\n        \"mb-8 border-teal-200 dark:border-teal-800 bg-teal-50/50 dark:bg-teal-950/30\",\n        className\n      )}\n      data-testid=\"privacy-notice\"\n    >\n      <Shield className=\"h-5 w-5 text-teal-600 dark:text-teal-400\" />\n      <AlertDescription className=\"text-teal-900 dark:text-teal-100 font-medium ml-2\">\n        {message}\n      </AlertDescription>\n    </Alert>\n  );\n}","size_bytes":717},"client/src/components/scroll-to-top.tsx":{"content":"import { useEffect, useRef } from \"react\";\nimport { useLocation } from \"wouter\";\n\nexport default function ScrollToTop() {\n  const [location] = useLocation();\n  const previousLocation = useRef(location);\n\n  useEffect(() => {\n    // Only scroll to top if it's an actual route change (different path)\n    // Don't scroll if it's just a hash change or same page state update\n    const currentPath = location.split('#')[0].split('?')[0];\n    const previousPath = previousLocation.current.split('#')[0].split('?')[0];\n    \n    if (currentPath !== previousPath) {\n      // Small delay to ensure page has rendered\n      requestAnimationFrame(() => {\n        window.scrollTo({ top: 0, behavior: 'instant' });\n      });\n    }\n    \n    previousLocation.current = location;\n  }, [location]);\n\n  return null;\n}","size_bytes":797},"client/src/components/seo/tool-faq.tsx":{"content":"import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from \"@/components/ui/accordion\";\nimport { Card } from \"@/components/ui/card\";\nimport { HelpCircle, MessageSquare } from \"lucide-react\";\nimport { generateFAQSchema } from \"@/hooks/use-seo\";\nimport { useEffect } from \"react\";\n\nexport interface FAQ {\n  question: string;\n  answer: string;\n  category?: string;\n}\n\ninterface ToolFAQProps {\n  faqs: FAQ[];\n  toolName: string;\n  toolPath: string;\n}\n\nexport function ToolFAQ({ faqs, toolName, toolPath }: ToolFAQProps) {\n  // Add FAQ structured data\n  useEffect(() => {\n    const faqSchema = generateFAQSchema(faqs);\n    \n    // Remove existing FAQ schema for this page\n    const existingScript = document.querySelector(`script[data-faq-path=\"${toolPath}\"]`);\n    if (existingScript) {\n      existingScript.remove();\n    }\n    \n    // Add new FAQ schema\n    const script = document.createElement('script');\n    script.type = 'application/ld+json';\n    script.setAttribute('data-faq-path', toolPath);\n    script.textContent = JSON.stringify(faqSchema);\n    document.head.appendChild(script);\n    \n    return () => {\n      const scriptToRemove = document.querySelector(`script[data-faq-path=\"${toolPath}\"]`);\n      if (scriptToRemove) {\n        scriptToRemove.remove();\n      }\n    };\n  }, [faqs, toolPath]);\n\n  // Group FAQs by category if categories exist\n  const groupedFAQs = faqs.reduce((acc, faq) => {\n    const category = faq.category || \"General\";\n    if (!acc[category]) {\n      acc[category] = [];\n    }\n    acc[category].push(faq);\n    return acc;\n  }, {} as Record<string, FAQ[]>);\n\n  const categories = Object.keys(groupedFAQs);\n  const hasCategories = categories.some(cat => cat !== \"General\");\n\n  return (\n    <section className=\"py-12 border-t\" data-testid=\"section-faq\">\n      <article className=\"container mx-auto px-4 max-w-4xl\">\n        <header className=\"text-center mb-8\">\n          <div className=\"inline-flex items-center gap-2 mb-4\">\n            <HelpCircle className=\"w-6 h-6 text-primary\" />\n            <h2 className=\"text-3xl font-bold\" data-testid=\"heading-faq\">\n              Frequently Asked Questions\n            </h2>\n          </div>\n          <p className=\"text-lg text-muted-foreground\">\n            Everything you need to know about our {toolName}\n          </p>\n        </header>\n\n        {hasCategories ? (\n          <div className=\"space-y-8\">\n            {categories.map((category) => (\n              <div key={category}>\n                <h3 className=\"text-xl font-semibold mb-4 flex items-center gap-2\">\n                  <MessageSquare className=\"w-5 h-5 text-primary\" />\n                  {category}\n                </h3>\n                <Accordion type=\"single\" collapsible className=\"space-y-4\">\n                  {groupedFAQs[category].map((faq, index) => (\n                    <AccordionItem\n                      key={index}\n                      value={`${category}-${index}`}\n                      className=\"border rounded-lg px-4\"\n                      data-testid={`faq-item-${category}-${index}`}\n                    >\n                      <AccordionTrigger className=\"text-left hover:no-underline\">\n                        <span className=\"font-medium\">{faq.question}</span>\n                      </AccordionTrigger>\n                      <AccordionContent className=\"text-muted-foreground\">\n                        {faq.answer}\n                      </AccordionContent>\n                    </AccordionItem>\n                  ))}\n                </Accordion>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <Accordion type=\"single\" collapsible className=\"space-y-4\">\n            {faqs.map((faq, index) => (\n              <AccordionItem\n                key={index}\n                value={`faq-${index}`}\n                className=\"border rounded-lg px-4\"\n                data-testid={`faq-item-${index}`}\n              >\n                <AccordionTrigger className=\"text-left hover:no-underline\">\n                  <span className=\"font-medium\">{faq.question}</span>\n                </AccordionTrigger>\n                <AccordionContent className=\"text-muted-foreground\">\n                  {faq.answer}\n                </AccordionContent>\n              </AccordionItem>\n            ))}\n          </Accordion>\n        )}\n\n        <Card className=\"mt-8 p-6 bg-primary/5 border-primary/20\">\n          <div className=\"text-center\">\n            <h3 className=\"font-semibold mb-2\">Still have questions?</h3>\n            <p className=\"text-muted-foreground\">\n              Feel free to explore our tool or check our{\" \"}\n              <a href=\"/privacy-policy\" className=\"text-primary hover:underline\">\n                Privacy Policy\n              </a>{\" \"}\n              to learn more about how we protect your data.\n            </p>\n          </div>\n        </Card>\n      </article>\n    </section>\n  );\n}\n\n// Common FAQs that can be reused across different tools\nexport const commonFAQs = {\n  privacy: {\n    question: \"Is my data safe when using this tool?\",\n    answer: \"Absolutely! All processing happens directly in your browser using JavaScript. Your files never leave your device and are never uploaded to any server. This means complete privacy and security for your sensitive documents.\",\n    category: \"Privacy & Security\"\n  },\n  free: {\n    question: \"Is this tool really free? Are there any hidden costs?\",\n    answer: \"Yes, our tool is 100% free with no hidden costs, subscriptions, or premium tiers. We believe in providing accessible tools for everyone. There are no watermarks, no file limits, and no registration required.\",\n    category: \"Pricing\"\n  },\n  offline: {\n    question: \"Can I use this tool offline?\",\n    answer: \"Once the page is loaded in your browser, the tool works entirely offline. You don't need an active internet connection to process your files, as all the processing happens locally on your device.\",\n    category: \"Technical\"\n  },\n  fileSize: {\n    question: \"What's the maximum file size I can process?\",\n    answer: \"The file size limit depends on your device's available memory since processing happens in your browser. Most modern devices can easily handle files up to 100MB. For larger files, the processing might take a bit longer but will still work.\",\n    category: \"Technical\"\n  },\n  browsers: {\n    question: \"Which browsers are supported?\",\n    answer: \"Our tool works on all modern browsers including Chrome, Firefox, Safari, Edge, and Opera. For the best experience, we recommend using the latest version of your preferred browser.\",\n    category: \"Technical\"\n  },\n  mobileSupport: {\n    question: \"Does this work on mobile devices?\",\n    answer: \"Yes! Our tool is fully responsive and works on smartphones and tablets. However, for processing large files or batch operations, we recommend using a desktop computer for better performance.\",\n    category: \"Technical\"\n  },\n  dataStorage: {\n    question: \"Do you store my files or data?\",\n    answer: \"No, we never store your files or data. Everything is processed in your browser's memory and is automatically cleared when you close the tab or navigate away from the page. Your privacy is our top priority.\",\n    category: \"Privacy & Security\"\n  },\n  quality: {\n    question: \"Will the quality of my files be affected?\",\n    answer: \"We use advanced algorithms to maintain the highest possible quality while processing your files. For tools that involve compression or conversion, you often have control over quality settings to balance between file size and quality.\",\n    category: \"Quality\"\n  },\n  batch: {\n    question: \"Can I process multiple files at once?\",\n    answer: \"Yes, many of our tools support batch processing, allowing you to process multiple files simultaneously. This saves time and makes it easy to handle large projects efficiently.\",\n    category: \"Features\"\n  },\n  speed: {\n    question: \"How fast is the processing?\",\n    answer: \"Processing speed depends on your device's performance and file size. Since everything happens locally in your browser, there's no upload/download time. Most files are processed within seconds.\",\n    category: \"Performance\"\n  }\n};\n\n// Tool-specific FAQ generators\nexport function generatePDFCompressFAQs(): FAQ[] {\n  return [\n    {\n      question: \"How does PDF compression work without losing quality?\",\n      answer: \"Our PDF compressor uses intelligent algorithms to reduce file size by optimizing images, removing redundant data, and streamlining the PDF structure. We carefully balance compression to maintain readability while achieving your target file size.\",\n      category: \"How It Works\"\n    },\n    {\n      question: \"Can I compress PDF to exactly 100KB, 50KB, or any specific size?\",\n      answer: \"Yes! Our unique feature allows you to set specific target sizes from 10KB to 5MB. The algorithm automatically adjusts compression parameters to achieve your exact target size, perfect for meeting upload requirements.\",\n      category: \"Features\"\n    },\n    {\n      question: \"How much can PDF file size be reduced?\",\n      answer: \"Typical reduction ranges from 50% to 95% depending on the original PDF content. PDFs with high-resolution images see the most reduction, while text-only PDFs have less compression potential.\",\n      category: \"Performance\"\n    },\n    {\n      question: \"Can I compress a password-protected PDF?\",\n      answer: \"Currently, you'll need to unlock password-protected PDFs first using our PDF Unlock tool, then compress them. This ensures the security of your documents while giving you full control over the process.\",\n      category: \"Features\"\n    },\n    {\n      question: \"What compression levels are available?\",\n      answer: \"You can choose from multiple target sizes: 10KB, 20KB, 50KB, 100KB, 150KB, 200KB, 300KB, 500KB, 1MB, 2MB, 5MB, or maximum compression. Each level uses different optimization strategies.\",\n      category: \"Features\"\n    },\n    {\n      question: \"Will compressing my PDF affect text searchability?\",\n      answer: \"No, text remains searchable after compression. We preserve the text layer of your PDF, ensuring that you can still search, select, and copy text from the compressed document.\",\n      category: \"Quality\"\n    },\n    {\n      question: \"Can I compress scanned PDFs?\",\n      answer: \"Yes, scanned PDFs can be compressed effectively. Since scanned documents are essentially images, our tool optimizes image quality and resolution to achieve significant size reduction while maintaining legibility.\",\n      category: \"Features\"\n    },\n    {\n      question: \"What's the difference between this and other PDF compressors?\",\n      answer: \"Unlike others, we offer: 1) Specific target size selection, 2) 100% client-side processing for privacy, 3) No file uploads to servers, 4) No watermarks or limits, 5) Works offline once loaded.\",\n      category: \"Comparison\"\n    },\n    {\n      question: \"Can I compress multiple PDFs at once?\",\n      answer: \"Currently, you can process one PDF at a time for optimal compression quality. However, you can quickly process multiple files sequentially without any daily limits or restrictions.\",\n      category: \"Features\"\n    },\n    {\n      question: \"Why choose browser-based compression over desktop software?\",\n      answer: \"Browser-based compression offers instant access without installation, works on any device, updates automatically, and most importantly, keeps your files completely private by processing them locally.\",\n      category: \"Comparison\"\n    },\n    {\n      question: \"How do you compress PDFs for email attachments?\",\n      answer: \"Most email services limit attachments to 25MB. Select a target size like 5MB or 2MB to ensure your PDF fits within email limits while maintaining good quality for viewing.\",\n      category: \"Use Cases\"\n    },\n    {\n      question: \"What happens to image quality during compression?\",\n      answer: \"Images are intelligently compressed using advanced algorithms. Higher compression levels reduce image resolution more aggressively, but we optimize to maintain text clarity and essential visual details.\",\n      category: \"Quality\"\n    },\n    {\n      question: \"Can I compress PDFs with forms and interactive elements?\",\n      answer: \"Yes, form fields and interactive elements are preserved during compression. The functionality remains intact while the file size is reduced through optimization of other elements.\",\n      category: \"Features\"\n    },\n    {\n      question: \"Is there an API available for bulk compression?\",\n      answer: \"Since our tool runs entirely in the browser for privacy, there's no server API. However, the compression logic is client-side JavaScript, making it possible to integrate into your own applications.\",\n      category: \"Technical\"\n    },\n    {\n      question: \"How long does compression take?\",\n      answer: \"Most PDFs compress in 5-30 seconds depending on size and your device's performance. Since there's no upload/download time, it's often faster than server-based alternatives.\",\n      category: \"Performance\"\n    },\n    commonFAQs.privacy,\n    commonFAQs.free,\n    commonFAQs.fileSize,\n    commonFAQs.browsers,\n    commonFAQs.speed,\n    commonFAQs.offline,\n    commonFAQs.dataStorage,\n    commonFAQs.mobileSupport\n  ];\n}\n\nexport function generatePDFUnlockFAQs(): FAQ[] {\n  return [\n    {\n      question: \"Is it legal to unlock a PDF?\",\n      answer: \"It's legal to unlock PDFs that you own or have permission to modify. This tool is intended for legitimate use cases like recovering access to your own documents or removing passwords from files you have authorization to edit.\",\n      category: \"Legal\"\n    },\n    {\n      question: \"What types of PDF passwords can be removed?\",\n      answer: \"Our tool can remove user passwords (open passwords) that prevent you from opening the PDF, provided you know the password. We do not support cracking or bypassing passwords - you must know the correct password to unlock the file.\",\n      category: \"Features\"\n    },\n    {\n      question: \"Can this tool crack or hack PDF passwords?\",\n      answer: \"No, this is not a password cracking tool. You must know the correct password to unlock the PDF. We provide a legitimate service for removing known passwords from your own documents.\",\n      category: \"Security\"\n    },\n    {\n      question: \"Will unlocking affect the PDF content or quality?\",\n      answer: \"No, unlocking only removes the password protection. The content, formatting, and quality of your PDF remain exactly the same. All text, images, and formatting are preserved.\",\n      category: \"Quality\"\n    },\n    {\n      question: \"Can I re-protect the PDF after unlocking?\",\n      answer: \"Yes, after unlocking, you can use any PDF editor to add new password protection if needed. This gives you the flexibility to change passwords or adjust security settings.\",\n      category: \"Features\"\n    },\n    {\n      question: \"What if I forgot my PDF password?\",\n      answer: \"This tool requires you to know the password to unlock the PDF. If you've forgotten the password, you'll need to contact the document owner or use password recovery methods appropriate for your situation.\",\n      category: \"Features\"\n    },\n    {\n      question: \"Can I unlock PDFs with printing or copying restrictions?\",\n      answer: \"Yes, when you unlock a PDF with the correct password, all restrictions including printing, copying, and editing limitations are removed along with the password protection.\",\n      category: \"Features\"\n    },\n    {\n      question: \"How secure is the unlocking process?\",\n      answer: \"Extremely secure. Your password and PDF never leave your browser. All processing happens locally on your device, ensuring your sensitive documents and passwords remain completely private.\",\n      category: \"Security\"\n    },\n    {\n      question: \"What encryption types are supported?\",\n      answer: \"We support standard PDF encryption methods used by Adobe Acrobat and other PDF creators, including 128-bit and 256-bit AES encryption.\",\n      category: \"Technical\"\n    },\n    {\n      question: \"Can I unlock bank statements or financial documents?\",\n      answer: \"Yes, many banks password-protect statements for security. As long as you know the password (often your account number or date of birth), you can safely unlock them using our tool.\",\n      category: \"Use Cases\"\n    },\n    {\n      question: \"Why would I need to unlock my own PDF?\",\n      answer: \"Common reasons include: changing forgotten passwords, removing outdated protection from old documents, enabling editing or printing, or simplifying document sharing within your organization.\",\n      category: \"Use Cases\"\n    },\n    {\n      question: \"Does this work with digitally signed PDFs?\",\n      answer: \"You can unlock digitally signed PDFs, but note that removing password protection may invalidate certain types of digital signatures that depend on document security settings.\",\n      category: \"Features\"\n    },\n    {\n      question: \"Can I unlock PDFs on my phone or tablet?\",\n      answer: \"Yes, our tool works on all devices with a modern web browser. However, for large PDFs, desktop computers typically provide better performance.\",\n      category: \"Compatibility\"\n    },\n    {\n      question: \"What's the maximum PDF size I can unlock?\",\n      answer: \"The size limit depends on your device's available memory. Most devices can handle PDFs up to 100MB easily. Larger files may take longer but will still work.\",\n      category: \"Technical\"\n    },\n    {\n      question: \"How is this different from PDF password removers?\",\n      answer: \"Our tool is unique because: 1) It's 100% browser-based, 2) No file uploads to servers, 3) Requires knowing the password (ethical approach), 4) Instant processing, 5) Completely free with no limits.\",\n      category: \"Comparison\"\n    },\n    commonFAQs.privacy,\n    commonFAQs.dataStorage,\n    commonFAQs.free,\n    commonFAQs.browsers,\n    commonFAQs.offline,\n    commonFAQs.speed,\n    commonFAQs.mobileSupport\n  ];\n}\n\nexport function generateJPGtoPDFFAQs(): FAQ[] {\n  return [\n    {\n      question: \"What image formats are supported besides JPG?\",\n      answer: \"Our converter supports all major image formats including JPG, PNG, WebP, GIF, BMP, and TIFF. You can even mix different formats in a single PDF conversion.\",\n      category: \"Features\"\n    },\n    {\n      question: \"Can I arrange the order of images in the PDF?\",\n      answer: \"Yes, you can arrange images in any order before conversion. Simply drag and drop to reorder, or remove images you don't want to include in the final PDF.\",\n      category: \"Features\"\n    },\n    {\n      question: \"What page sizes and orientations are available?\",\n      answer: \"We offer standard page sizes (A4, Letter, Legal, A3, A5) in both portrait and landscape orientations. You can also choose different layout options like multiple images per page.\",\n      category: \"Features\"\n    },\n    {\n      question: \"How is image quality preserved during conversion?\",\n      answer: \"We offer quality settings from low to maximum. Higher quality settings preserve original image detail but result in larger file sizes. You can balance quality and file size based on your needs.\",\n      category: \"Quality\"\n    },\n    {\n      question: \"Can I add multiple images to a single page?\",\n      answer: \"Yes, you can choose layouts with 1, 2, 4, or 6 images per page. This is perfect for creating photo albums, contact sheets, or saving paper when printing.\",\n      category: \"Features\"\n    },\n    {\n      question: \"How do I convert photos from my phone to PDF?\",\n      answer: \"Simply open our tool on your phone's browser, tap to select photos from your gallery, arrange them as needed, and convert. The PDF downloads directly to your phone.\",\n      category: \"Mobile\"\n    },\n    {\n      question: \"What's the maximum number of images I can convert at once?\",\n      answer: \"There's no hard limit on the number of images. You can convert hundreds of images at once, though processing time increases with more images. Your device's memory is the only constraint.\",\n      category: \"Technical\"\n    },\n    {\n      question: \"Can I create a photo album or portfolio PDF?\",\n      answer: \"Absolutely! Our tool is perfect for creating photo albums and portfolios. Choose high quality settings, arrange photos in order, and select an appropriate layout for professional-looking results.\",\n      category: \"Use Cases\"\n    },\n    {\n      question: \"Will EXIF data and metadata be preserved?\",\n      answer: \"Image metadata is not transferred to the PDF for privacy reasons. The PDF will contain the visual content only, without camera information, location data, or other metadata.\",\n      category: \"Privacy\"\n    },\n    {\n      question: \"Can I add margins or borders to images?\",\n      answer: \"Images are automatically centered on pages with appropriate margins. While you can't customize margins directly, different page sizes and layouts provide various spacing options.\",\n      category: \"Features\"\n    },\n    {\n      question: \"How do I convert scanned documents to PDF?\",\n      answer: \"If you have scanned document images (JPG/PNG), simply upload them in the correct order. Choose 'one per page' layout and high quality for best readability of text in scanned documents.\",\n      category: \"Use Cases\"\n    },\n    {\n      question: \"What's the best setting for printing photos?\",\n      answer: \"For printing, use maximum quality settings and choose the page size that matches your printer paper (usually A4 or Letter). This ensures photos print at the highest possible resolution.\",\n      category: \"Printing\"\n    },\n    {\n      question: \"Can I convert screenshots to PDF?\",\n      answer: \"Yes, screenshots in PNG or JPG format convert perfectly to PDF. This is useful for creating documentation, tutorials, or compiling multiple screenshots into a single document.\",\n      category: \"Use Cases\"\n    },\n    {\n      question: \"How does this compare to phone scanning apps?\",\n      answer: \"Unlike scanning apps, we don't require app installation, don't access your phone's data, process everything locally for privacy, and work on any device with a browser. Plus, it's completely free.\",\n      category: \"Comparison\"\n    },\n    {\n      question: \"Can I compress the PDF after conversion?\",\n      answer: \"Yes! After creating your PDF, you can use our PDF Compressor tool to reduce file size if needed. This two-step process gives you maximum control over quality and size.\",\n      category: \"Features\"\n    },\n    commonFAQs.privacy,\n    commonFAQs.batch,\n    commonFAQs.free,\n    commonFAQs.mobileSupport,\n    commonFAQs.speed,\n    commonFAQs.offline,\n    commonFAQs.browsers,\n    commonFAQs.dataStorage\n  ];\n}\n\nexport function generateQRGeneratorFAQs(): FAQ[] {\n  return [\n    {\n      question: \"What types of data can I encode in a QR code?\",\n      answer: \"You can encode any text data including URLs, plain text, email addresses, phone numbers, WiFi credentials, vCards, SMS messages, and more. The QR code will work with any QR scanner app.\",\n      category: \"Features\"\n    },\n    {\n      question: \"Can I customize the QR code colors?\",\n      answer: \"Yes, you can customize both the foreground (pattern) and background colors. However, ensure good contrast for reliable scanning - dark patterns on light backgrounds work best.\",\n      category: \"Customization\"\n    },\n    {\n      question: \"What sizes are available for QR codes?\",\n      answer: \"We offer three sizes: Small (200x200px), Medium (300x300px), and Large (400x400px). All sizes maintain the same data capacity and scanning reliability.\",\n      category: \"Features\"\n    },\n    {\n      question: \"How much data can a QR code hold?\",\n      answer: \"QR codes can hold up to 4,296 alphanumeric characters or 2,953 bytes of binary data. For URLs, we recommend keeping them under 1,000 characters for best scanning performance.\",\n      category: \"Technical\"\n    },\n    {\n      question: \"Do QR codes expire?\",\n      answer: \"The QR codes themselves never expire. However, if you encode a URL that later becomes invalid, the QR code will still scan but lead to a broken link.\",\n      category: \"Technical\"\n    },\n    {\n      question: \"How do I create a WiFi QR code?\",\n      answer: \"Enter your WiFi credentials in this format: WIFI:T:WPA;S:NetworkName;P:Password;; Replace NetworkName and Password with your actual credentials. Guests can then scan to connect automatically.\",\n      category: \"How To\"\n    },\n    {\n      question: \"Can I track QR code scans?\",\n      answer: \"Our tool doesn't track scans directly. For tracking, encode a URL that goes through a URL shortener or analytics service that provides scan statistics.\",\n      category: \"Analytics\"\n    },\n    {\n      question: \"What's the best format for business cards?\",\n      answer: \"For business cards, use Medium size (300x300px) with high contrast colors. Encode a vCard or link to your digital business card for maximum information in minimal space.\",\n      category: \"Use Cases\"\n    },\n    {\n      question: \"Can QR codes work when printed small?\",\n      answer: \"Yes, but maintain a minimum size of 2x2 cm (0.8x0.8 inches) for reliable scanning. The more data encoded, the larger the QR code should be for easy scanning.\",\n      category: \"Printing\"\n    },\n    {\n      question: \"What's error correction in QR codes?\",\n      answer: \"Error correction allows QR codes to be scanned even when partially damaged or obscured. Our generator uses Medium error correction (15% damage tolerance) for optimal balance.\",\n      category: \"Technical\"\n    },\n    {\n      question: \"Can I create dynamic QR codes?\",\n      answer: \"We generate static QR codes where the data is fixed. For dynamic QR codes (where you can change the destination), encode a redirect URL that you control.\",\n      category: \"Features\"\n    },\n    {\n      question: \"How do I test if my QR code works?\",\n      answer: \"Test with multiple devices and QR scanner apps. Most phone cameras now have built-in QR scanning. Ensure good lighting and hold the camera steady for best results.\",\n      category: \"Testing\"\n    },\n    {\n      question: \"Can I add a logo to my QR code?\",\n      answer: \"Currently, we focus on clean, reliable QR codes without logos. Adding logos can reduce scan reliability. For branding, consider placing your logo near the QR code instead.\",\n      category: \"Customization\"\n    },\n    {\n      question: \"What's the difference between QR codes and barcodes?\",\n      answer: \"QR codes store data in 2D (both horizontally and vertically), holding much more information than 1D barcodes. QR codes can store URLs, text, and other data types, while barcodes typically store product numbers.\",\n      category: \"Comparison\"\n    },\n    {\n      question: \"Can I use generated QR codes commercially?\",\n      answer: \"Yes, all QR codes generated with our tool are free to use for any purpose, including commercial use, marketing campaigns, and products. There are no licensing restrictions or watermarks.\",\n      category: \"Legal\"\n    },\n    commonFAQs.privacy,\n    commonFAQs.free,\n    commonFAQs.offline,\n    commonFAQs.browsers,\n    commonFAQs.speed,\n    commonFAQs.dataStorage,\n    commonFAQs.mobileSupport\n  ];\n}\n\nexport function generatePasswordGeneratorFAQs(): FAQ[] {\n  return [\n    {\n      question: \"How random are the generated passwords?\",\n      answer: \"We use cryptographically secure random number generation (crypto.getRandomValues) to ensure truly random, unpredictable passwords that meet the highest security standards.\",\n      category: \"Security\"\n    },\n    {\n      question: \"What makes a password strong?\",\n      answer: \"Strong passwords are long (12+ characters), use a mix of uppercase, lowercase, numbers, and symbols, avoid common patterns, and are unique for each account. Our strength meter evaluates these factors.\",\n      category: \"Security\"\n    },\n    {\n      question: \"What's the ideal password length?\",\n      answer: \"Security experts recommend at least 12-16 characters for important accounts. Longer passwords (20+ characters) provide even better security. Length is more important than complexity for password strength.\",\n      category: \"Security\"\n    },\n    {\n      question: \"Can I customize password requirements?\",\n      answer: \"Yes, you can adjust length (4-50 characters) and choose which character types to include: uppercase, lowercase, numbers, and symbols. This helps meet specific website or application requirements.\",\n      category: \"Features\"\n    },\n    {\n      question: \"Is it safe to generate passwords online?\",\n      answer: \"Yes, our generator is completely safe because it runs entirely in your browser. No passwords are sent to any server, stored, or logged. Each password is generated locally on your device.\",\n      category: \"Security\"\n    },\n    {\n      question: \"Should I use the same password for multiple accounts?\",\n      answer: \"Never use the same password for multiple accounts. If one account is compromised, all accounts with the same password become vulnerable. Generate unique passwords for each account.\",\n      category: \"Security\"\n    },\n    {\n      question: \"How do I create memorable but secure passwords?\",\n      answer: \"Use passphrases: combine 4-6 random words with numbers and symbols. For example: 'Coffee#Laptop7$Mountain!Beach'. These are easier to remember than random characters but equally secure.\",\n      category: \"Tips\"\n    },\n    {\n      question: \"What's two-factor authentication and why use it?\",\n      answer: \"Two-factor authentication (2FA) adds an extra security layer beyond passwords. Even if your password is compromised, attackers can't access your account without the second factor (usually a phone app or SMS code).\",\n      category: \"Security\"\n    },\n    {\n      question: \"Can password generators be hacked?\",\n      answer: \"Our generator cannot be hacked to reveal generated passwords because nothing is stored or transmitted. Each password exists only in your browser's memory and disappears when you navigate away.\",\n      category: \"Security\"\n    },\n    {\n      question: \"Why avoid dictionary words in passwords?\",\n      answer: \"Hackers use dictionary attacks that try common words and phrases. Random character combinations are exponentially harder to crack than dictionary words, even with substitutions like @ for 'a'.\",\n      category: \"Security\"\n    },\n    {\n      question: \"How should I store my generated passwords?\",\n      answer: \"We recommend using a reputable password manager like Bitwarden, 1Password, or LastPass. Never write passwords in plain text files or sticky notes. Password managers encrypt your data for security.\",\n      category: \"Security\"\n    },\n    {\n      question: \"How often should I change my passwords?\",\n      answer: \"Change passwords immediately if there's a security breach. Otherwise, security experts now recommend using strong, unique passwords rather than frequent changes, unless required by your organization.\",\n      category: \"Security\"\n    },\n    {\n      question: \"What are the most common password mistakes?\",\n      answer: \"Common mistakes include: using personal information (birthdays, names), simple patterns (123456, qwerty), reusing passwords, short passwords (<8 characters), and writing passwords in unsecure places.\",\n      category: \"Tips\"\n    },\n    {\n      question: \"Can I generate passwords for specific requirements?\",\n      answer: \"Yes! Adjust the settings to meet specific requirements. For example, some sites don't allow symbols - just uncheck that option. Need exactly 8 characters? Set the slider to 8.\",\n      category: \"Features\"\n    },\n    {\n      question: \"How does the password strength meter work?\",\n      answer: \"Our strength meter analyzes length, character variety, and patterns. It checks for uppercase, lowercase, numbers, symbols, and common patterns to give you real-time feedback on password security.\",\n      category: \"Features\"\n    },\n    commonFAQs.privacy,\n    commonFAQs.free,\n    commonFAQs.offline,\n    commonFAQs.browsers,\n    commonFAQs.mobileSupport,\n    commonFAQs.speed\n  ];\n}\n\nexport function generateWordCounterFAQs(): FAQ[] {\n  return [\n    {\n      question: \"What text statistics are calculated?\",\n      answer: \"We calculate words, characters (with and without spaces), sentences, paragraphs, and estimated reading time. These metrics help you understand and optimize your content for different purposes.\",\n      category: \"Features\"\n    },\n    {\n      question: \"How is reading time calculated?\",\n      answer: \"Reading time is estimated based on an average reading speed of 200 words per minute. This is a standard rate for general comprehension, though actual speed varies by reader and content complexity.\",\n      category: \"Technical\"\n    },\n    {\n      question: \"Can I count words in different languages?\",\n      answer: \"Yes, our word counter works with any language that uses space-separated words. For languages like Chinese or Japanese, character count may be more relevant than word count.\",\n      category: \"Features\"\n    },\n    {\n      question: \"Does it count words in real-time?\",\n      answer: \"Yes, all statistics update instantly as you type or paste text. This gives you immediate feedback without needing to click any buttons or wait for processing.\",\n      category: \"Features\"\n    },\n    {\n      question: \"What's the maximum text length supported?\",\n      answer: \"There's no hard limit on text length. The tool can handle documents with hundreds of thousands of words, though very large texts might cause slight delays in real-time counting.\",\n      category: \"Technical\"\n    },\n    {\n      question: \"How accurate is the word count?\",\n      answer: \"Our word counter is highly accurate, using advanced algorithms to properly identify word boundaries, handle hyphenated words, and distinguish between actual words and formatting.\",\n      category: \"Accuracy\"\n    },\n    {\n      question: \"Can I check character limits for social media?\",\n      answer: \"Yes! We have preset limits for Twitter (280), LinkedIn (2200), SMS (160), and meta descriptions (500). You can also set custom character limits for any platform.\",\n      category: \"Features\"\n    },\n    {\n      question: \"What's the difference between characters with and without spaces?\",\n      answer: \"'Characters with spaces' includes all characters including spaces and line breaks. 'Without spaces' counts only letters, numbers, and punctuation - useful for platforms that don't count spaces.\",\n      category: \"Technical\"\n    },\n    {\n      question: \"How does sentence counting work?\",\n      answer: \"Sentences are identified by ending punctuation (periods, exclamation marks, question marks). The algorithm handles abbreviations and decimal numbers intelligently to avoid false sentence breaks.\",\n      category: \"Technical\"\n    },\n    {\n      question: \"Can I use this for academic papers?\",\n      answer: \"Absolutely! It's perfect for essays, research papers, and assignments with specific word count requirements. The tool helps you meet minimum or maximum word limits accurately.\",\n      category: \"Use Cases\"\n    },\n    {\n      question: \"Is this tool good for SEO content?\",\n      answer: \"Yes! SEO experts recommend 1,500+ words for comprehensive articles. Our tool helps you reach optimal content length while tracking readability through sentence and paragraph counts.\",\n      category: \"SEO\"\n    },\n    {\n      question: \"Can I count words in copied text from PDFs or websites?\",\n      answer: \"Yes, simply copy text from any source and paste it into our tool. Formatting is automatically cleaned up, giving you accurate counts regardless of the source.\",\n      category: \"Features\"\n    },\n    {\n      question: \"How do I write to a specific word count?\",\n      answer: \"Type or paste your content and watch the real-time counter. The tool shows your progress, making it easy to add or trim content to reach your target word count.\",\n      category: \"Tips\"\n    },\n    {\n      question: \"What's the ideal blog post length?\",\n      answer: \"For SEO, aim for 1,500-2,500 words for comprehensive coverage. However, quality matters more than quantity. Use our tool to ensure you're providing enough detail without unnecessary padding.\",\n      category: \"SEO\"\n    },\n    {\n      question: \"Can I export word count statistics?\",\n      answer: \"You can export your text with statistics to a text file. This includes all counts and the original text, useful for documentation or record-keeping.\",\n      category: \"Features\"\n    },\n    commonFAQs.privacy,\n    commonFAQs.free,\n    commonFAQs.offline,\n    commonFAQs.mobileSupport,\n    commonFAQs.browsers,\n    commonFAQs.speed,\n    commonFAQs.dataStorage\n  ];\n}","size_bytes":36783},"client/src/components/seo/tool-features.tsx":{"content":"import { Card } from \"@/components/ui/card\";\nimport { Check, Zap, Shield, Globe, RefreshCw, Clock, Sparkles, Server } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\n\ninterface Feature {\n  icon: React.ElementType;\n  title: string;\n  description: string;\n  highlight?: boolean;\n}\n\ninterface WhyUseSectionProps {\n  toolName: string;\n  benefits: string[];\n  features: Feature[];\n}\n\nexport function WhyUseSection({ toolName, benefits, features }: WhyUseSectionProps) {\n  return (\n    <section className=\"py-12 border-t\" data-testid=\"section-why-use\">\n      <article className=\"container mx-auto px-4 max-w-6xl\">\n        <header>\n          <h2 className=\"text-3xl font-bold mb-4\" data-testid=\"heading-why-use\">\n            Why Choose Our {toolName}?\n          </h2>\n          <p className=\"text-lg text-muted-foreground mb-8\">\n            Experience the perfect combination of security, speed, and simplicity\n          </p>\n        </header>\n        \n        <div className=\"grid md:grid-cols-2 gap-8 mb-8\">\n          <div>\n            <h3 className=\"text-xl font-semibold mb-4\">Key Benefits</h3>\n            <ul className=\"space-y-3\">\n              {benefits.map((benefit, index) => (\n                <li key={index} className=\"flex items-start gap-3\" data-testid={`benefit-${index}`}>\n                  <Check className=\"w-5 h-5 text-green-500 mt-0.5 flex-shrink-0\" />\n                  <span className=\"text-muted-foreground\">{benefit}</span>\n                </li>\n              ))}\n            </ul>\n          </div>\n          \n          <div>\n            <h3 className=\"text-xl font-semibold mb-4\">Core Features</h3>\n            <div className=\"grid gap-4\">\n              {features.map((feature, index) => {\n                const Icon = feature.icon;\n                return (\n                  <Card \n                    key={index} \n                    className={cn(\n                      \"p-4 transition-all hover:shadow-md\",\n                      feature.highlight && \"border-primary\"\n                    )}\n                    data-testid={`feature-card-${index}`}\n                  >\n                    <div className=\"flex gap-3\">\n                      <div className=\"w-10 h-10 rounded-lg bg-gradient-to-br from-primary/20 to-primary/10 flex items-center justify-center\">\n                        <Icon className=\"w-5 h-5 text-primary\" />\n                      </div>\n                      <div>\n                        <h4 className=\"font-semibold mb-1\">{feature.title}</h4>\n                        <p className=\"text-sm text-muted-foreground\">{feature.description}</p>\n                      </div>\n                    </div>\n                  </Card>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </article>\n    </section>\n  );\n}\n\ninterface UseCase {\n  title: string;\n  description: string;\n  icon: React.ElementType;\n  example?: string;\n}\n\ninterface UseCasesSectionProps {\n  useCases: UseCase[];\n}\n\nexport function UseCasesSection({ useCases }: UseCasesSectionProps) {\n  return (\n    <section className=\"py-12 bg-muted/30\" data-testid=\"section-use-cases\">\n      <article className=\"container mx-auto px-4 max-w-6xl\">\n        <header>\n          <h2 className=\"text-3xl font-bold mb-4\" data-testid=\"heading-use-cases\">\n            Real-World Use Cases\n          </h2>\n          <p className=\"text-lg text-muted-foreground mb-8\">\n            Discover how professionals use our tools to streamline their workflow\n          </p>\n        </header>\n        \n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {useCases.map((useCase, index) => {\n            const Icon = useCase.icon;\n            return (\n              <Card key={index} className=\"p-6\" data-testid={`use-case-${index}`}>\n                <div className=\"w-12 h-12 rounded-lg bg-gradient-to-br from-primary/20 to-primary/10 flex items-center justify-center mb-4\">\n                  <Icon className=\"w-6 h-6 text-primary\" />\n                </div>\n                <h3 className=\"text-lg font-semibold mb-2\">{useCase.title}</h3>\n                <p className=\"text-muted-foreground mb-3\">{useCase.description}</p>\n                {useCase.example && (\n                  <p className=\"text-sm text-primary italic\">Example: {useCase.example}</p>\n                )}\n              </Card>\n            );\n          })}\n        </div>\n      </article>\n    </section>\n  );\n}\n\ninterface ComparisonItem {\n  feature: string;\n  ourTool: boolean | string;\n  others: boolean | string;\n  highlight?: boolean;\n}\n\ninterface ComparisonSectionProps {\n  toolName: string;\n  comparisons: ComparisonItem[];\n}\n\nexport function ComparisonSection({ toolName, comparisons }: ComparisonSectionProps) {\n  return (\n    <section className=\"py-12\" data-testid=\"section-comparison\">\n      <article className=\"container mx-auto px-4 max-w-6xl\">\n        <header>\n          <h2 className=\"text-3xl font-bold mb-4\" data-testid=\"heading-comparison\">\n            {toolName} vs. Traditional Tools\n          </h2>\n          <p className=\"text-lg text-muted-foreground mb-8\">\n            See why privacy-first, browser-based processing is the future\n          </p>\n        </header>\n        \n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full border-collapse\">\n            <thead>\n              <tr>\n                <th className=\"text-left p-4 border-b font-semibold\">Feature</th>\n                <th className=\"text-center p-4 border-b font-semibold text-primary\">\n                  Our {toolName}\n                </th>\n                <th className=\"text-center p-4 border-b font-semibold text-muted-foreground\">\n                  Traditional Tools\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {comparisons.map((item, index) => (\n                <tr \n                  key={index} \n                  className={cn(\n                    \"hover:bg-muted/50 transition-colors\",\n                    item.highlight && \"bg-primary/5\"\n                  )}\n                  data-testid={`comparison-row-${index}`}\n                >\n                  <td className=\"p-4 border-b\">{item.feature}</td>\n                  <td className=\"text-center p-4 border-b\">\n                    {typeof item.ourTool === 'boolean' ? (\n                      item.ourTool ? (\n                        <Check className=\"w-5 h-5 text-green-500 mx-auto\" />\n                      ) : (\n                        <span className=\"text-muted-foreground\">—</span>\n                      )\n                    ) : (\n                      <span className=\"text-primary font-medium\">{item.ourTool}</span>\n                    )}\n                  </td>\n                  <td className=\"text-center p-4 border-b\">\n                    {typeof item.others === 'boolean' ? (\n                      item.others ? (\n                        <Check className=\"w-5 h-5 text-green-500 mx-auto\" />\n                      ) : (\n                        <span className=\"text-red-500\">✕</span>\n                      )\n                    ) : (\n                      <span className=\"text-muted-foreground\">{item.others}</span>\n                    )}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        \n        <div className=\"mt-8 p-6 bg-primary/5 rounded-lg border border-primary/20\">\n          <div className=\"flex items-start gap-3\">\n            <Shield className=\"w-5 h-5 text-primary mt-0.5\" />\n            <div>\n              <h3 className=\"font-semibold mb-2\">Privacy First, Always</h3>\n              <p className=\"text-muted-foreground\">\n                Unlike traditional online tools that upload your files to their servers, \n                our {toolName} processes everything locally in your browser. Your sensitive \n                data never leaves your device, ensuring complete privacy and security.\n              </p>\n            </div>\n          </div>\n        </div>\n      </article>\n    </section>\n  );\n}\n\ninterface HowItWorksStep {\n  number: number;\n  title: string;\n  description: string;\n  icon?: React.ElementType;\n}\n\ninterface HowItWorksSectionProps {\n  steps: HowItWorksStep[];\n  toolName: string;\n}\n\nexport function HowItWorksSection({ steps, toolName }: HowItWorksSectionProps) {\n  return (\n    <section className=\"py-12 bg-muted/30\" data-testid=\"section-how-it-works\">\n      <article className=\"container mx-auto px-4 max-w-6xl\">\n        <header>\n          <h2 className=\"text-3xl font-bold mb-4\" data-testid=\"heading-how-it-works\">\n            How Our {toolName} Works\n          </h2>\n          <p className=\"text-lg text-muted-foreground mb-8\">\n            Simple, secure, and straightforward - get results in seconds\n          </p>\n        </header>\n        \n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {steps.map((step, index) => {\n            const Icon = step.icon;\n            return (\n              <div \n                key={index} \n                className=\"relative\"\n                data-testid={`step-${step.number}`}\n              >\n                {index < steps.length - 1 && (\n                  <div className=\"hidden lg:block absolute top-8 left-full w-full h-0.5 bg-gradient-to-r from-primary/20 to-transparent z-0\" />\n                )}\n                \n                <Card className=\"p-6 relative z-10 hover:shadow-md transition-shadow\">\n                  <div className=\"flex items-start gap-4\">\n                    <div className=\"w-10 h-10 rounded-full bg-primary text-primary-foreground flex items-center justify-center font-bold flex-shrink-0\">\n                      {step.number}\n                    </div>\n                    <div>\n                      <h3 className=\"font-semibold mb-2\">{step.title}</h3>\n                      <p className=\"text-sm text-muted-foreground\">{step.description}</p>\n                      {Icon && (\n                        <div className=\"mt-3\">\n                          <Icon className=\"w-5 h-5 text-primary\" />\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </Card>\n              </div>\n            );\n          })}\n        </div>\n        \n        <div className=\"mt-8 text-center\">\n          <div className=\"inline-flex items-center gap-2 px-4 py-2 bg-green-500/10 text-green-600 dark:text-green-400 rounded-full\">\n            <Zap className=\"w-4 h-4\" />\n            <span className=\"text-sm font-medium\">Processing time: Less than 5 seconds</span>\n          </div>\n        </div>\n      </article>\n    </section>\n  );\n}\n\n// Pre-defined common features for reuse across tools\nexport const commonFeatures = {\n  privacy: {\n    icon: Shield,\n    title: \"100% Privacy Guaranteed\",\n    description: \"All processing happens in your browser. Files never uploaded to servers.\",\n    highlight: true\n  },\n  speed: {\n    icon: Zap,\n    title: \"Lightning Fast\",\n    description: \"Instant processing with no upload delays or server wait times.\"\n  },\n  free: {\n    icon: Sparkles,\n    title: \"Completely Free\",\n    description: \"No limits, no watermarks, no subscriptions. Free forever.\"\n  },\n  noInstall: {\n    icon: Globe,\n    title: \"No Installation\",\n    description: \"Works directly in your browser. No software to download or install.\"\n  },\n  offline: {\n    icon: Server,\n    title: \"Works Offline\",\n    description: \"Once loaded, works without internet connection.\"\n  },\n  instant: {\n    icon: Clock,\n    title: \"Instant Results\",\n    description: \"Get your processed files immediately, no waiting.\"\n  },\n  batch: {\n    icon: RefreshCw,\n    title: \"Batch Processing\",\n    description: \"Process multiple files at once for efficiency.\"\n  }\n};","size_bytes":11746},"client/src/lib/password-enhancements.ts":{"content":"// Smart password generation enhancements\n// Memorable passwords, passphrases, and use-case suggestions\n\n// Common word lists for passphrase generation (client-side)\nconst ADJECTIVES = [\n  'ancient', 'brave', 'clever', 'daring', 'elegant', 'fierce', 'golden', 'happy',\n  'infinite', 'jolly', 'keen', 'lively', 'mighty', 'noble', 'orange', 'peaceful',\n  'quiet', 'rapid', 'silver', 'timeless', 'unique', 'valiant', 'wise', 'yellow',\n  'zealous', 'bright', 'cosmic', 'dynamic', 'eternal', 'frozen', 'gentle', 'hidden',\n  'crystal', 'electric', 'mystic', 'ocean', 'thunder', 'shadow', 'lunar', 'solar'\n];\n\nconst NOUNS = [\n  'anchor', 'bridge', 'castle', 'dragon', 'eagle', 'forest', 'galaxy', 'harbor',\n  'island', 'jungle', 'knight', 'lighthouse', 'mountain', 'nebula', 'ocean', 'phoenix',\n  'quest', 'river', 'sunset', 'tower', 'universe', 'valley', 'warrior', 'zenith',\n  'arrow', 'beacon', 'compass', 'diamond', 'ember', 'falcon', 'glacier', 'horizon',\n  'comet', 'storm', 'star', 'moon', 'thunder', 'crystal', 'phoenix', 'titan'\n];\n\nconst VERBS = [\n  'dance', 'explore', 'fly', 'guard', 'hunt', 'inspire', 'jump', 'kindle',\n  'launch', 'master', 'navigate', 'overcome', 'protect', 'quest', 'rescue', 'soar',\n  'travel', 'unite', 'venture', 'wander', 'excel', 'yield', 'zoom', 'achieve',\n  'believe', 'create', 'discover', 'embrace', 'flourish', 'gather', 'harness'\n];\n\n// Use case specific configurations\nexport interface PasswordUseCase {\n  id: string;\n  name: string;\n  description: string;\n  icon: string;\n  recommendations: {\n    minLength: number;\n    includeUppercase: boolean;\n    includeLowercase: boolean;\n    includeNumbers: boolean;\n    includeSymbols: boolean;\n    memorableOption?: boolean;\n  };\n  tips: string[];\n}\n\nexport const USE_CASES: PasswordUseCase[] = [\n  {\n    id: 'email',\n    name: 'Email Account',\n    description: 'For personal or work email accounts',\n    icon: 'Mail',\n    recommendations: {\n      minLength: 12,\n      includeUppercase: true,\n      includeLowercase: true,\n      includeNumbers: true,\n      includeSymbols: false,\n      memorableOption: true\n    },\n    tips: [\n      'Use a unique password for each email account',\n      'Consider using a passphrase for easier memorization',\n      'Enable two-factor authentication when available'\n    ]\n  },\n  {\n    id: 'banking',\n    name: 'Banking & Finance',\n    description: 'For online banking and financial services',\n    icon: 'CreditCard',\n    recommendations: {\n      minLength: 16,\n      includeUppercase: true,\n      includeLowercase: true,\n      includeNumbers: true,\n      includeSymbols: true,\n      memorableOption: false\n    },\n    tips: [\n      'Use maximum security for financial accounts',\n      'Never reuse banking passwords elsewhere',\n      'Store securely in a password manager',\n      'Change regularly (every 3-6 months)'\n    ]\n  },\n  {\n    id: 'social',\n    name: 'Social Media',\n    description: 'For social networking accounts',\n    icon: 'Users',\n    recommendations: {\n      minLength: 10,\n      includeUppercase: true,\n      includeLowercase: true,\n      includeNumbers: true,\n      includeSymbols: false,\n      memorableOption: true\n    },\n    tips: [\n      'Different password for each platform',\n      'Be aware of account recovery options',\n      'Review privacy settings regularly'\n    ]\n  },\n  {\n    id: 'work',\n    name: 'Work/Corporate',\n    description: 'For professional and corporate accounts',\n    icon: 'Briefcase',\n    recommendations: {\n      minLength: 14,\n      includeUppercase: true,\n      includeLowercase: true,\n      includeNumbers: true,\n      includeSymbols: true,\n      memorableOption: false\n    },\n    tips: [\n      'Follow company password policies',\n      'Never share work passwords',\n      'Use VPN when accessing remotely'\n    ]\n  },\n  {\n    id: 'shopping',\n    name: 'Online Shopping',\n    description: 'For e-commerce and shopping sites',\n    icon: 'ShoppingCart',\n    recommendations: {\n      minLength: 12,\n      includeUppercase: true,\n      includeLowercase: true,\n      includeNumbers: true,\n      includeSymbols: false,\n      memorableOption: true\n    },\n    tips: [\n      'Use unique passwords for sites with payment info',\n      'Consider using virtual credit cards',\n      'Check for secure connection (HTTPS)'\n    ]\n  },\n  {\n    id: 'gaming',\n    name: 'Gaming',\n    description: 'For gaming accounts and platforms',\n    icon: 'Gamepad2',\n    recommendations: {\n      minLength: 12,\n      includeUppercase: true,\n      includeLowercase: true,\n      includeNumbers: true,\n      includeSymbols: false,\n      memorableOption: true\n    },\n    tips: [\n      'Protect accounts with valuable items/progress',\n      'Enable Steam Guard or similar features',\n      'Be cautious of phishing attempts'\n    ]\n  },\n  {\n    id: 'sensitive',\n    name: 'Highly Sensitive',\n    description: 'For cryptocurrency, medical, or government services',\n    icon: 'ShieldCheck',\n    recommendations: {\n      minLength: 20,\n      includeUppercase: true,\n      includeLowercase: true,\n      includeNumbers: true,\n      includeSymbols: true,\n      memorableOption: false\n    },\n    tips: [\n      'Use maximum possible security',\n      'Consider hardware security keys',\n      'Enable all available security features',\n      'Use a reputable password manager'\n    ]\n  }\n];\n\n// Generate a memorable passphrase\nexport function generatePassphrase(wordCount: number = 4, includeNumbers: boolean = true): string {\n  const words: string[] = [];\n  \n  // Pattern: Adjective + Noun + Verb + Noun\n  if (wordCount >= 4) {\n    words.push(ADJECTIVES[Math.floor(Math.random() * ADJECTIVES.length)]);\n    words.push(NOUNS[Math.floor(Math.random() * NOUNS.length)]);\n    words.push(VERBS[Math.floor(Math.random() * VERBS.length)]);\n    words.push(NOUNS[Math.floor(Math.random() * NOUNS.length)]);\n  } else if (wordCount === 3) {\n    words.push(ADJECTIVES[Math.floor(Math.random() * ADJECTIVES.length)]);\n    words.push(NOUNS[Math.floor(Math.random() * NOUNS.length)]);\n    words.push(VERBS[Math.floor(Math.random() * VERBS.length)]);\n  } else {\n    for (let i = 0; i < wordCount; i++) {\n      const lists = [ADJECTIVES, NOUNS, VERBS];\n      const list = lists[Math.floor(Math.random() * lists.length)];\n      words.push(list[Math.floor(Math.random() * list.length)]);\n    }\n  }\n  \n  // Capitalize first letter of each word\n  const capitalizedWords = words.map(word => \n    word.charAt(0).toUpperCase() + word.slice(1)\n  );\n  \n  // Add numbers if requested\n  if (includeNumbers) {\n    const randomNum = Math.floor(Math.random() * 100);\n    capitalizedWords.push(randomNum.toString());\n  }\n  \n  // Join with hyphens for readability\n  return capitalizedWords.join('-');\n}\n\n// Generate a pronounceable password\nexport function generatePronounceable(length: number = 12): string {\n  const consonants = 'bcdfghjklmnpqrstvwxyz';\n  const vowels = 'aeiou';\n  const numbers = '0123456789';\n  let password = '';\n  \n  // Start with a capital letter\n  password += consonants.charAt(Math.floor(Math.random() * consonants.length)).toUpperCase();\n  \n  // Alternate between consonants and vowels for pronounceability\n  for (let i = 1; i < length - 2; i++) {\n    if (i % 2 === 0) {\n      password += consonants.charAt(Math.floor(Math.random() * consonants.length));\n    } else {\n      password += vowels.charAt(Math.floor(Math.random() * vowels.length));\n    }\n  }\n  \n  // Add two numbers at the end\n  password += numbers.charAt(Math.floor(Math.random() * numbers.length));\n  password += numbers.charAt(Math.floor(Math.random() * numbers.length));\n  \n  return password;\n}\n\n// Generate password patterns for memorization\nexport function generatePattern(baseWord: string): string[] {\n  const patterns: string[] = [];\n  \n  // Pattern 1: Leetspeak\n  const leetspeak = baseWord\n    .replace(/a/gi, '4')\n    .replace(/e/gi, '3')\n    .replace(/i/gi, '1')\n    .replace(/o/gi, '0')\n    .replace(/s/gi, '5');\n  patterns.push(leetspeak + '!');\n  \n  // Pattern 2: First letter caps + year\n  const currentYear = new Date().getFullYear();\n  patterns.push(baseWord.charAt(0).toUpperCase() + baseWord.slice(1) + currentYear);\n  \n  // Pattern 3: Reverse + special char\n  const reversed = baseWord.split('').reverse().join('');\n  patterns.push(reversed + '@123');\n  \n  // Pattern 4: Alternating caps\n  const alternating = baseWord.split('').map((char, i) => \n    i % 2 === 0 ? char.toUpperCase() : char.toLowerCase()\n  ).join('');\n  patterns.push(alternating + '#99');\n  \n  return patterns;\n}\n\n// Password strength explanation\nexport function explainStrength(password: string): {\n  score: number;\n  level: 'weak' | 'medium' | 'strong' | 'very-strong';\n  feedback: string[];\n  positives: string[];\n  suggestions: string[];\n} {\n  let score = 0;\n  const feedback: string[] = [];\n  const positives: string[] = [];\n  const suggestions: string[] = [];\n  \n  // Length scoring\n  if (password.length >= 20) {\n    score += 3;\n    positives.push('Excellent length (20+ characters)');\n  } else if (password.length >= 16) {\n    score += 2;\n    positives.push('Great length (16+ characters)');\n  } else if (password.length >= 12) {\n    score += 1;\n    positives.push('Good length (12+ characters)');\n  } else if (password.length >= 8) {\n    feedback.push('Minimum acceptable length');\n  } else {\n    feedback.push('Too short (less than 8 characters)');\n    suggestions.push('Increase length to at least 12 characters');\n  }\n  \n  // Character variety\n  const hasUpper = /[A-Z]/.test(password);\n  const hasLower = /[a-z]/.test(password);\n  const hasNumber = /[0-9]/.test(password);\n  const hasSymbol = /[!@#$%^&*()_+\\-=\\[\\]{}|;:,.<>?]/.test(password);\n  \n  if (hasUpper) {\n    score += 1;\n    positives.push('Contains uppercase letters');\n  } else {\n    suggestions.push('Add uppercase letters');\n  }\n  \n  if (hasLower) {\n    score += 1;\n    positives.push('Contains lowercase letters');\n  } else {\n    suggestions.push('Add lowercase letters');\n  }\n  \n  if (hasNumber) {\n    score += 1;\n    positives.push('Contains numbers');\n  } else {\n    suggestions.push('Add numbers');\n  }\n  \n  if (hasSymbol) {\n    score += 2;\n    positives.push('Contains special characters');\n  } else {\n    suggestions.push('Add special characters for extra security');\n  }\n  \n  // Pattern detection\n  if (/(.)\\1{2,}/.test(password)) {\n    feedback.push('Contains repeated characters');\n    suggestions.push('Avoid repeating characters');\n    score -= 1;\n  }\n  \n  if (/^[A-Z][a-z]+[0-9]+$/.test(password)) {\n    feedback.push('Follows a common pattern');\n    suggestions.push('Avoid predictable patterns');\n    score -= 1;\n  }\n  \n  if (/123|abc|qwerty|password/i.test(password)) {\n    feedback.push('Contains common sequences');\n    suggestions.push('Avoid common words or sequences');\n    score -= 2;\n  }\n  \n  // Determine level\n  let level: 'weak' | 'medium' | 'strong' | 'very-strong';\n  if (score >= 8) level = 'very-strong';\n  else if (score >= 6) level = 'strong';\n  else if (score >= 4) level = 'medium';\n  else level = 'weak';\n  \n  return {\n    score,\n    level,\n    feedback,\n    positives,\n    suggestions\n  };\n}\n\n// Memory techniques for passwords\nexport function getMemoryTips(password: string): string[] {\n  const tips: string[] = [];\n  \n  // Check if it's a passphrase\n  if (password.includes('-') || password.includes(' ')) {\n    tips.push('Create a mental image or story with the words');\n    tips.push('Use the first letter of each word as a memory aid');\n    tips.push('Associate each word with a personal memory');\n  } else {\n    tips.push('Break the password into chunks of 3-4 characters');\n    tips.push('Create a pattern or rhythm when typing');\n    tips.push('Associate numbers with dates or ages');\n    \n    if (/[!@#$%^&*]/.test(password)) {\n      tips.push('Remember special characters by their keyboard position');\n    }\n  }\n  \n  tips.push('Practice typing it several times to build muscle memory');\n  tips.push('Write it down temporarily and store securely until memorized');\n  \n  return tips;\n}\n\n// Generate alternative passwords based on a theme\nexport function generateThemePasswords(theme: string): string[] {\n  const alternatives: string[] = [];\n  const cleanTheme = theme.toLowerCase().replace(/[^a-z]/g, '');\n  \n  if (cleanTheme.length < 3) return alternatives;\n  \n  // Generate variations\n  alternatives.push(...generatePattern(cleanTheme));\n  \n  // Add passphrase version\n  const passphrase = generatePassphrase(3, true);\n  alternatives.push(passphrase);\n  \n  // Add pronounceable version\n  const pronounceable = generatePronounceable(14);\n  alternatives.push(pronounceable);\n  \n  return alternatives.slice(0, 5);\n}","size_bytes":12591},"client/src/lib/pdf-compress.ts":{"content":"import { PDFDocument } from 'pdf-lib';\nimport * as pdfjsLib from 'pdfjs-dist';\n\n// Configure PDF.js worker - use local worker for privacy and offline capability\npdfjsLib.GlobalWorkerOptions.workerSrc = '/pdf.worker.min.mjs';\n\n// Cache for rendered pages at different scales to avoid re-rendering\nconst scaleCache = new Map<string, RenderedPage[]>();\n\n// Generate a unique identifier for a PDF\nfunction generatePDFIdentifier(pdfBytes: ArrayBuffer): string {\n  // Create a simple hash based on size and first few bytes\n  const view = new Uint8Array(pdfBytes);\n  const sampleSize = Math.min(1000, view.length);\n  let hash = pdfBytes.byteLength;\n  for (let i = 0; i < sampleSize; i += 100) {\n    hash = ((hash << 5) - hash) + view[i];\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return `${pdfBytes.byteLength}_${Math.abs(hash)}`;\n}\n\ninterface CompressionParams {\n  jpegQuality: number;\n  scale: number;\n  onProgress?: (progress: number, message: string) => void;\n  mode?: 'highest' | 'balanced' | 'fast' | 'custom' | 'hd'; // 'hd' for compatibility\n  preserveText?: boolean;\n}\n\ninterface PageImage {\n  dataUrl: string;\n  width: number;\n  height: number;\n}\n\ninterface RenderedPage {\n  canvas: HTMLCanvasElement;\n  width: number;\n  height: number;\n}\n\n// Utility function to convert data URL to Uint8Array\nfunction dataURLtoUint8Array(dataURL: string): Uint8Array {\n  const base64String = dataURL.split(',')[1];\n  const binaryString = atob(base64String);\n  const bytes = new Uint8Array(binaryString.length);\n  for (let i = 0; i < binaryString.length; i++) {\n    bytes[i] = binaryString.charCodeAt(i);\n  }\n  return bytes;\n}\n\n// Convert canvas to image with HD quality settings\nfunction canvasToImage(canvas: HTMLCanvasElement, quality: number, format: 'jpeg' | 'png' = 'jpeg'): Promise<string> {\n  return new Promise((resolve, reject) => {\n    // For HD quality, use PNG for text-heavy content to preserve clarity\n    const imageFormat = format === 'png' ? 'image/png' : 'image/jpeg';\n    const imageQuality = format === 'png' ? undefined : quality;\n    \n    canvas.toBlob(\n      (blob) => {\n        if (!blob) {\n          // Fallback to toDataURL if blob fails\n          if (format === 'png') {\n            resolve(canvas.toDataURL('image/png'));\n          } else {\n            resolve(canvas.toDataURL('image/jpeg', quality));\n          }\n          return;\n        }\n        const reader = new FileReader();\n        reader.onloadend = () => resolve(reader.result as string);\n        reader.onerror = reject;\n        reader.readAsDataURL(blob);\n      },\n      imageFormat,\n      imageQuality\n    );\n  });\n}\n\n// Get or render PDF pages at specified scale (with caching)\nasync function getOrRenderPages(\n  pdfBytes: ArrayBuffer,\n  scale: number,\n  onProgress?: (progress: number, message: string) => void\n): Promise<RenderedPage[]> {\n  // Create unique cache key including PDF identifier and scale\n  const pdfId = generatePDFIdentifier(pdfBytes);\n  const cacheKey = `${pdfId}_${scale.toFixed(3)}`;\n  \n  // Check cache first\n  if (scaleCache.has(cacheKey)) {\n    if (onProgress) {\n      onProgress(20, `Using cached render at scale ${scale.toFixed(2)}`);\n    }\n    return scaleCache.get(cacheKey)!;\n  }\n  \n  // Clean up old cache entries if cache gets too large (keep last 10 entries)\n  if (scaleCache.size > 10) {\n    const firstKey = scaleCache.keys().next().value;\n    if (firstKey) scaleCache.delete(firstKey);\n  }\n  \n  // Render pages if not cached\n  const renderedPages = await renderPDFPages(pdfBytes, scale, onProgress);\n  \n  // Store in cache with unique key\n  scaleCache.set(cacheKey, renderedPages);\n  \n  return renderedPages;\n}\n\n// Render PDF pages to canvases at specified scale\nasync function renderPDFPages(\n  pdfBytes: ArrayBuffer,\n  scale: number,\n  onProgress?: (progress: number, message: string) => void\n): Promise<RenderedPage[]> {\n  // Create a copy of the ArrayBuffer to avoid detachment issues\n  const pdfBytesCopy = pdfBytes.slice(0);\n  const loadingTask = pdfjsLib.getDocument({ data: pdfBytesCopy });\n  const pdf = await loadingTask.promise;\n  const numPages = pdf.numPages;\n  const renderedPages: RenderedPage[] = [];\n\n  for (let pageNum = 1; pageNum <= numPages; pageNum++) {\n    if (onProgress) {\n      const progress = Math.round((pageNum / numPages) * 20);\n      onProgress(progress, `Rendering page ${pageNum} of ${numPages}`);\n    }\n\n    const page = await pdf.getPage(pageNum);\n    const viewport = page.getViewport({ scale });\n\n    // Create canvas\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    if (!context) throw new Error('Failed to get canvas context');\n\n    canvas.width = viewport.width;\n    canvas.height = viewport.height;\n\n    // Configure HD quality rendering with maximum quality settings\n    context.imageSmoothingEnabled = true;\n    context.imageSmoothingQuality = 'high';\n    \n    // Set high-quality rendering hints for better text clarity\n    context.textRendering = 'optimizeLegibility';\n    context.filter = 'none'; // No filtering for crisp text\n\n    // Render page to canvas\n    const renderContext = {\n      canvasContext: context,\n      viewport: viewport,\n      canvas: canvas,\n    };\n    await page.render(renderContext).promise;\n\n    renderedPages.push({\n      canvas,\n      width: viewport.width,\n      height: viewport.height\n    });\n  }\n\n  return renderedPages;\n}\n\n// Convert rendered pages to images with HD quality preservation\nasync function convertPagesToImages(\n  pages: RenderedPage[],\n  quality: number,\n  onProgress?: (progress: number, message: string) => void,\n  mode: 'highest' | 'balanced' | 'fast' | 'custom' | 'hd' = 'balanced'\n): Promise<PageImage[]> {\n  const pageImages: PageImage[] = [];\n  \n  for (let i = 0; i < pages.length; i++) {\n    if (onProgress) {\n      const progress = 20 + Math.round((i / pages.length) * 30);\n      onProgress(progress, `Compressing page ${i + 1} of ${pages.length} (${mode.toUpperCase()} mode)`);\n    }\n    \n    // Always use JPEG for consistent compression behavior\n    // Highest quality mode uses maximum quality for text clarity\n    let adjustedQuality = quality;\n    if (mode === 'highest' || mode === 'hd') {\n      // Highest Quality: Maximum quality for best text preservation\n      adjustedQuality = Math.min(0.99, quality + 0.08); // Significant boost for text clarity\n    }\n    \n    const dataUrl = await canvasToImage(pages[i].canvas, adjustedQuality, 'jpeg');\n    \n    pageImages.push({\n      dataUrl,\n      width: pages[i].width,\n      height: pages[i].height,\n    });\n  }\n  \n  return pageImages;\n}\n\n// Create PDF from images\nasync function createPDFFromImages(\n  images: PageImage[],\n  onProgress?: (progress: number, message: string) => void\n): Promise<Uint8Array> {\n  const pdfDoc = await PDFDocument.create();\n  \n  for (let i = 0; i < images.length; i++) {\n    if (onProgress) {\n      const progress = 50 + Math.round((i / images.length) * 40);\n      onProgress(progress, `Building PDF page ${i + 1} of ${images.length}`);\n    }\n\n    const imageData = images[i].dataUrl;\n    const imageBytes = dataURLtoUint8Array(imageData);\n    \n    // Embed image\n    let embeddedImage;\n    if (imageData.startsWith('data:image/jpeg')) {\n      embeddedImage = await pdfDoc.embedJpg(imageBytes);\n    } else if (imageData.startsWith('data:image/png')) {\n      embeddedImage = await pdfDoc.embedPng(imageBytes);\n    } else {\n      throw new Error('Unsupported image format');\n    }\n\n    // Create page with image dimensions\n    const page = pdfDoc.addPage([images[i].width, images[i].height]);\n    \n    // Draw image on page\n    page.drawImage(embeddedImage, {\n      x: 0,\n      y: 0,\n      width: images[i].width,\n      height: images[i].height,\n    });\n  }\n\n  // Save with optimization\n  const pdfBytes = await pdfDoc.save({\n    useObjectStreams: true,\n    addDefaultPage: false,\n    objectsPerTick: 50,\n    updateFieldAppearances: false,\n  });\n\n  if (onProgress) {\n    onProgress(95, 'Finalizing compression...');\n  }\n\n  return pdfBytes;\n}\n\n// HD Quality compression with advanced parameters\nexport async function compressPDFSimple(\n  pdfBytes: ArrayBuffer,\n  params: CompressionParams\n): Promise<{ blob: Blob }> {\n  const mode = params.mode || 'balanced';\n  \n  // Clear cache for each compression to avoid mixing PDFs\n  clearRenderCache();\n  \n  // Highest quality mode adjustments for maximum text clarity\n  let adjustedParams = { ...params };\n  if (mode === 'highest' || mode === 'hd') {\n    // Highest Quality: Maximum quality for text readability\n    adjustedParams.jpegQuality = Math.max(params.jpegQuality, 0.92); // Very high floor for text\n    adjustedParams.scale = Math.max(params.scale, 0.96); // Preserve text resolution\n    console.log('Highest Quality Mode: Maximum quality settings for text clarity');\n  } else if (mode === 'fast') {\n    // Fast mode: Prioritize speed with reasonable quality\n    adjustedParams.jpegQuality = Math.min(params.jpegQuality, 0.75);\n    adjustedParams.scale = Math.min(params.scale, 0.85);\n  }\n  \n  console.log(`Starting PDF compression in ${mode.toUpperCase()} mode:`, adjustedParams);\n  \n  try {\n    // Get or render pages at specified scale (uses cache if available)\n    const renderedPages = await getOrRenderPages(\n      pdfBytes,\n      adjustedParams.scale,\n      adjustedParams.onProgress\n    );\n    \n    // Convert to images with mode-specific quality settings\n    const images = await convertPagesToImages(\n      renderedPages,\n      adjustedParams.jpegQuality,\n      adjustedParams.onProgress,\n      mode\n    );\n    \n    // Create new PDF from images\n    const compressedBytes = await createPDFFromImages(images, adjustedParams.onProgress);\n    \n    console.log(`Compression complete (${mode} mode). Original: ${pdfBytes.byteLength}, Compressed: ${compressedBytes.length}`);\n    \n    return { \n      blob: new Blob([compressedBytes], { type: 'application/pdf' })\n    };\n  } catch (error) {\n    console.error('Error in PDF compression:', error);\n    \n    // Fallback to basic pdf-lib compression\n    try {\n      // Create a copy to avoid detachment issues\n      const pdfBytesCopy = pdfBytes.slice(0);\n      const pdfDoc = await PDFDocument.load(pdfBytesCopy);\n      \n      // Remove metadata\n      pdfDoc.setTitle('');\n      pdfDoc.setAuthor('');\n      pdfDoc.setSubject('');\n      pdfDoc.setKeywords([]);\n      pdfDoc.setProducer('Compressed');\n      pdfDoc.setCreator('PDF Compressor');\n      \n      // Get pages for potential scaling\n      const pages = pdfDoc.getPages();\n      if (params.scale !== 1) {\n        pages.forEach(page => {\n          const { width, height } = page.getSize();\n          page.setSize(width * params.scale, height * params.scale);\n          page.scale(params.scale, params.scale);\n        });\n      }\n      \n      const fallbackBytes = await pdfDoc.save({\n        useObjectStreams: false,\n        addDefaultPage: false,\n        objectsPerTick: 10,\n        updateFieldAppearances: false,\n      });\n      \n      return { blob: new Blob([fallbackBytes], { type: 'application/pdf' }) };\n    } catch (fallbackError) {\n      console.error('Fallback also failed:', fallbackError);\n      throw error;\n    }\n  }\n}\n\n// Advanced Highest Quality compression using optimal parameters\nexport async function compressPDFAdvanced(\n  pdfBytes: ArrayBuffer,\n  params: CompressionParams\n): Promise<Blob> {\n  // Default to Highest mode for advanced compression\n  const highestParams = { ...params, mode: params.mode || 'highest' as const };\n  const result = await compressPDFSimple(pdfBytes, highestParams);\n  return result.blob;\n}\n\n// Quality presets for easy use\nexport const COMPRESSION_PRESETS = {\n  highest: {\n    jpegQuality: 0.95, // Maximum quality for best text clarity\n    scale: 0.98,       // Near-original resolution for sharp text\n    mode: 'highest' as const,\n    description: 'Highest Quality - Maximum text clarity and sharpness'\n  },\n  hd: {\n    jpegQuality: 0.95, // Alias for highest quality for compatibility\n    scale: 0.98,\n    mode: 'highest' as const,\n    description: 'Highest Quality - Maximum text clarity and sharpness'\n  },\n  balanced: {\n    jpegQuality: 0.80,\n    scale: 0.90,\n    mode: 'balanced' as const,\n    description: 'Balanced - Good quality with compression'\n  },\n  fast: {\n    jpegQuality: 0.70,\n    scale: 0.85,\n    mode: 'fast' as const,\n    description: 'Fast - Quick compression with acceptable quality'\n  },\n  extreme: {\n    jpegQuality: 0.50,\n    scale: 0.70,\n    mode: 'fast' as const,\n    description: 'Extreme - Maximum compression'\n  }\n};\n\n// Clear cache before starting new compression\nfunction clearRenderCache() {\n  scaleCache.clear();\n}\n\n// HD Quality compression to achieve target size with optimal quality\nexport async function compressToTargetSize(\n  pdfBytes: ArrayBuffer,\n  targetSize: number,\n  onProgress?: (progress: number, message: string) => void,\n  mode: 'highest' | 'balanced' | 'fast' | 'hd' = 'balanced'\n): Promise<{ blob: Blob; quality: number; scale: number; attempts: number; mode: string }> {\n  // Create a copy to avoid ArrayBuffer detachment issues\n  const pdfBytesCopy = pdfBytes.slice(0);\n  // Clear previous render cache\n  clearRenderCache();\n  \n  const originalSize = pdfBytes.byteLength;\n  const compressionRatio = targetSize / originalSize;\n  \n  console.log(`Starting ${mode.toUpperCase()} compression: Original ${originalSize} bytes, Target ${targetSize} bytes, Ratio ${(compressionRatio * 100).toFixed(1)}%`);\n  \n  // HD Quality ranges with mode-specific adjustments\n  let minQuality: number;\n  let maxQuality: number;\n  let minScale: number;\n  let maxScale: number;\n  \n  if (mode === 'highest' || mode === 'hd') {\n    // Highest Quality Mode: Maximum quality for text readability\n    if (compressionRatio >= 0.7) {\n      minQuality = 0.94; // Very high quality floor\n      maxQuality = 0.99;\n      minScale = 0.97;   // Near-original resolution\n      maxScale = 1.0;\n    } else if (compressionRatio >= 0.4) {\n      minQuality = 0.90; // High quality even for medium compression\n      maxQuality = 0.98;\n      minScale = 0.94;   // Preserve text details\n      maxScale = 1.0;\n    } else if (compressionRatio >= 0.2) {\n      minQuality = 0.85; // Still high quality for stronger compression\n      maxQuality = 0.97;\n      minScale = 0.90;   // Good text preservation\n      maxScale = 1.0;\n    } else if (compressionRatio >= 0.1) {\n      minQuality = 0.78; // Decent quality for tight targets\n      maxQuality = 0.95;\n      minScale = 0.85;   // Acceptable text clarity\n      maxScale = 0.97;\n    } else {\n      minQuality = 0.70; // Minimum acceptable for text\n      maxQuality = 0.93;\n      minScale = 0.78;   // Still readable text\n      maxScale = 0.92;\n    }\n  } else if (mode === 'fast') {\n    // Fast Mode: Prioritize speed with reasonable quality\n    if (compressionRatio >= 0.5) {\n      minQuality = 0.70;\n      maxQuality = 0.85;\n      minScale = 0.85;\n      maxScale = 0.95;\n    } else {\n      minQuality = 0.50;\n      maxQuality = 0.75;\n      minScale = 0.70;\n      maxScale = 0.90;\n    }\n  } else {\n    // Balanced Mode: Original settings\n    if (compressionRatio >= 0.7) {\n      minQuality = 0.85;\n      maxQuality = 0.99;\n      minScale = 0.95;\n      maxScale = 1.0;\n    } else if (compressionRatio >= 0.4) {\n      minQuality = 0.75;\n      maxQuality = 0.98;\n      minScale = 0.90;\n      maxScale = 1.0;\n    } else if (compressionRatio >= 0.2) {\n      minQuality = 0.65;\n      maxQuality = 0.95;\n      minScale = 0.85;\n      maxScale = 1.0;\n    } else if (compressionRatio >= 0.1) {\n      minQuality = 0.55;\n      maxQuality = 0.90;\n      minScale = 0.75;\n      maxScale = 0.95;\n    } else {\n      minQuality = 0.40;\n      maxQuality = 0.80;\n      minScale = 0.60;\n      maxScale = 0.90;\n    }\n  }\n  \n  let attempts = 0;\n  const maxAttempts = 25; // Reduced since we're using cached renders\n  const tolerance = 0.02; // 2% tolerance\n  \n  let bestUnderTarget: { blob: Blob; quality: number; scale: number; size: number } | null = null;\n  let bestOverTarget: { blob: Blob; quality: number; scale: number; size: number } | null = null;\n  \n  // Test different scale values to find optimal combination\n  const scalesToTest = [maxScale, (minScale + maxScale) / 2, minScale];\n  let bestScale = maxScale;\n  \n  for (const testScale of scalesToTest) {\n    if (attempts >= maxAttempts) break;\n    \n    // Binary search for optimal quality at this scale\n    let searchMinQ = minQuality;\n    let searchMaxQ = maxQuality;\n    let lastSize = 0;\n    let stableCount = 0;\n    \n    while (attempts < maxAttempts && searchMaxQ - searchMinQ > 0.005) {\n      attempts++;\n      const testQuality = (searchMinQ + searchMaxQ) / 2;\n      \n      if (onProgress) {\n        const progress = Math.round((attempts / maxAttempts) * 80);\n        onProgress(progress, `Optimizing compression... Attempt ${attempts}/${maxAttempts}`);\n      }\n      \n      const params: CompressionParams = {\n        jpegQuality: testQuality,\n        scale: testScale,\n        mode: mode,\n        onProgress: (progress, message) => {\n          if (onProgress && progress < 80) {\n            const attemptProgress = Math.round((attempts - 1) / maxAttempts * 80);\n            onProgress(attemptProgress, message);\n          }\n        }\n      };\n      \n      const result = await compressPDFSimple(pdfBytesCopy, params);\n      const currentSize = result.blob.size;\n      \n      console.log(`Attempt ${attempts}: Scale ${testScale.toFixed(2)}, Quality ${testQuality.toFixed(3)}, Size ${currentSize} (target ${targetSize})`);\n      \n      // Check if size hasn't changed (reached limit)\n      if (currentSize === lastSize) {\n        stableCount++;\n        if (stableCount >= 2) {\n          console.log('Size stabilized, trying different parameters');\n          break;\n        }\n      } else {\n        stableCount = 0;\n      }\n      lastSize = currentSize;\n      \n      // Update best results\n      if (currentSize <= targetSize) {\n        if (!bestUnderTarget || currentSize > bestUnderTarget.size) {\n          bestUnderTarget = { \n            blob: result.blob, \n            quality: testQuality, \n            scale: testScale, \n            size: currentSize \n          };\n          bestScale = testScale;\n        }\n        searchMinQ = testQuality; // Can increase quality\n      } else {\n        if (!bestOverTarget || currentSize < bestOverTarget.size) {\n          bestOverTarget = { \n            blob: result.blob, \n            quality: testQuality, \n            scale: testScale, \n            size: currentSize \n          };\n        }\n        searchMaxQ = testQuality; // Must decrease quality\n      }\n      \n      // Check if we've hit the target within tolerance\n      const difference = Math.abs(currentSize - targetSize);\n      if (difference <= targetSize * tolerance) {\n        console.log(`Target achieved! Target: ${targetSize}, Achieved: ${currentSize}, Difference: ${difference} bytes (${(difference/targetSize*100).toFixed(1)}%)`);\n        return { \n          blob: result.blob, \n          quality: testQuality, \n          scale: testScale, \n          attempts,\n          mode \n        };\n      }\n    }\n  }\n  \n  // Test adjacent scales for better targeting\n  if (bestUnderTarget && bestUnderTarget.size < targetSize * 0.90 && attempts < maxAttempts - 5) {\n    console.log('Testing adjacent scales for better targeting...');\n    \n    const adjacentScales = [\n      bestScale + 0.02,\n      bestScale + 0.05,\n      bestScale - 0.02,\n      bestScale - 0.05\n    ].filter(s => s >= minScale && s <= maxScale && !scalesToTest.includes(s));\n    \n    for (const adjacentScale of adjacentScales) {\n      if (attempts >= maxAttempts - 3) break;\n      \n      attempts++;\n      const testQuality: number = bestUnderTarget.quality;\n      \n      const params: CompressionParams = {\n        jpegQuality: testQuality,\n        scale: adjacentScale,\n        onProgress: (progress, message) => {\n          if (onProgress) {\n            const attemptProgress = Math.round((attempts / maxAttempts) * 80);\n            onProgress(attemptProgress, message);\n          }\n        }\n      };\n      \n      const result = await compressPDFSimple(pdfBytesCopy, params);\n      const currentSize = result.blob.size;\n      \n      console.log(`Adjacent scale test: Scale ${adjacentScale.toFixed(2)}, Size ${currentSize}`);\n      \n      if (currentSize <= targetSize && currentSize > bestUnderTarget.size) {\n        bestUnderTarget = {\n          blob: result.blob,\n          quality: testQuality,\n          scale: adjacentScale,\n          size: currentSize\n        };\n        bestScale = adjacentScale;\n        \n        // Check if we're close enough\n        if (currentSize >= targetSize * 0.98) {\n          console.log(`Optimal result achieved with adjacent scale: ${currentSize} bytes`);\n          return { \n            blob: result.blob, \n            quality: testQuality, \n            scale: adjacentScale, \n            attempts,\n            mode \n          };\n        }\n      }\n    }\n  }\n  \n  // If we have a result under target that's close enough, use it\n  if (bestUnderTarget) {\n    const fillRatio = bestUnderTarget.size / targetSize;\n    console.log(`Best under target: ${bestUnderTarget.size} bytes (${(fillRatio * 100).toFixed(1)}% of target)`);\n    \n    // Try to get closer to target by fine-tuning quality upward\n    if (fillRatio < 0.98 && attempts < maxAttempts) {\n      console.log('Fine-tuning quality to get closer to target...');\n      \n      let fineQuality = bestUnderTarget.quality;\n      const maxFineQuality = Math.min(bestUnderTarget.quality + 0.25, 0.99);  // Allow up to 0.99 quality\n      \n      // Binary search for optimal quality at best scale\n      let minQ = fineQuality;\n      let maxQ = maxFineQuality;\n      \n      while (maxQ - minQ > 0.005 && attempts < maxAttempts) {\n        attempts++;\n        fineQuality = (minQ + maxQ) / 2;\n        \n        const params: CompressionParams = {\n          jpegQuality: fineQuality,\n          scale: bestUnderTarget.scale,\n          onProgress: (progress, message) => {\n            if (onProgress) {\n              const attemptProgress = Math.round(80 + (attempts / maxAttempts) * 20);\n              onProgress(attemptProgress, message);\n            }\n          }\n        };\n        \n        const result = await compressPDFSimple(pdfBytesCopy, params);\n        const currentSize = result.blob.size;\n        \n        console.log(`Fine-tune ${attempts}: Quality ${fineQuality.toFixed(3)}, Size ${currentSize}`);\n        \n        if (currentSize <= targetSize) {\n          if (currentSize > bestUnderTarget.size) {\n            bestUnderTarget = {\n              blob: result.blob,\n              quality: fineQuality,\n              scale: bestUnderTarget.scale,\n              size: currentSize\n            };\n          }\n          minQ = fineQuality; // Can increase quality\n          \n          // Check if we're close enough\n          if (currentSize >= targetSize * 0.98) {\n            console.log(`Optimal result achieved: ${currentSize} bytes (${(currentSize/targetSize*100).toFixed(1)}% of target)`);\n            return {\n              blob: result.blob,\n              quality: fineQuality,\n              scale: bestUnderTarget.scale,\n              attempts,\n              mode\n            };\n          }\n        } else {\n          maxQ = fineQuality; // Must decrease quality\n        }\n      }\n      \n      // Final micro-adjustments with very small steps\n      if (bestUnderTarget.size < targetSize * 0.98 && attempts < maxAttempts) {\n        console.log('Attempting micro-adjustments...');\n        \n        const microStep = 0.002;\n        let microQuality = bestUnderTarget.quality;\n        \n        for (let i = 0; i < 10 && attempts < maxAttempts; i++) {\n          attempts++;\n          microQuality = Math.min(microQuality + microStep, 0.99);  // Allow up to 0.99\n          \n          const params: CompressionParams = {\n            jpegQuality: microQuality,\n            scale: bestUnderTarget.scale,\n            onProgress: (progress, message) => {\n              if (onProgress) {\n                const attemptProgress = Math.round(90 + (attempts / maxAttempts) * 10);\n                onProgress(attemptProgress, message);\n              }\n            }\n          };\n          \n          const result = await compressPDFSimple(pdfBytesCopy, params);\n          const currentSize = result.blob.size;\n          \n          console.log(`Micro-adjust ${i + 1}: Quality ${microQuality.toFixed(4)}, Size ${currentSize}`);\n          \n          if (currentSize <= targetSize) {\n            bestUnderTarget = {\n              blob: result.blob,\n              quality: microQuality,\n              scale: bestUnderTarget.scale,\n              size: currentSize\n            };\n            \n            if (currentSize >= targetSize * 0.98) {\n              console.log(`Target achieved with micro-adjustment: ${currentSize} bytes`);\n              return {\n                blob: result.blob,\n                quality: microQuality,\n                scale: bestUnderTarget.scale,\n                attempts,\n                mode\n              };\n            }\n          } else {\n            break; // Stop if we exceed target\n          }\n        }\n      }\n    }\n    \n    // If best result is still way below target, try higher qualities\n    if (bestUnderTarget.size < targetSize * 0.5 && attempts < maxAttempts + 10) {\n      console.log('Result too small, trying higher qualities to get closer to target...');\n      \n      // Try qualities up to 0.99\n      for (let q = Math.max(bestUnderTarget.quality, 0.9); q <= 0.99; q += 0.01) {\n        attempts++;\n        const params: CompressionParams = {\n          jpegQuality: q,\n          scale: bestUnderTarget.scale,\n          onProgress: (progress, message) => {\n            if (onProgress) {\n              onProgress(95, `Fine-tuning to reach target...`);\n            }\n          }\n        };\n        \n        const result = await compressPDFSimple(pdfBytesCopy, params);\n        const currentSize = result.blob.size;\n        \n        console.log(`High quality attempt: Quality ${q.toFixed(2)}, Size ${currentSize}`);\n        \n        if (currentSize <= targetSize) {\n          bestUnderTarget = {\n            blob: result.blob,\n            quality: q,\n            scale: bestUnderTarget.scale,\n            size: currentSize\n          };\n          \n          // If we're getting close, stop\n          if (currentSize >= targetSize * 0.95) {\n            console.log(`Reached close to target with high quality: ${currentSize} bytes`);\n            break;\n          }\n        } else {\n          break; // Exceeded target\n        }\n      }\n    }\n    \n    // Always return the best result we have, even if not perfect\n    console.log(`Final result: ${bestUnderTarget.size} bytes (${(bestUnderTarget.size/targetSize*100).toFixed(1)}% of target), Quality: ${bestUnderTarget.quality.toFixed(3)}, Scale: ${bestUnderTarget.scale.toFixed(2)}`);\n    \n    // Log a warning if we couldn't get close, but still return the result\n    if (bestUnderTarget.size < targetSize * 0.98) {\n      console.warn(`Note: Could not achieve exact target. Best achieved: ${bestUnderTarget.size} bytes (${(bestUnderTarget.size/targetSize*100).toFixed(1)}% of target)`);\n    }\n    \n    return { \n      blob: bestUnderTarget.blob, \n      quality: bestUnderTarget.quality, \n      scale: bestUnderTarget.scale, \n      attempts,\n      mode \n    };\n  }\n  \n  // If no under-target result, return the best over-target result\n  if (bestOverTarget) {\n    console.warn(`Target size too ambitious. Returning smallest possible: ${bestOverTarget.size} bytes (${(bestOverTarget.size/targetSize*100).toFixed(1)}% of target)`);\n    return { \n      blob: bestOverTarget.blob, \n      quality: bestOverTarget.quality, \n      scale: bestOverTarget.scale, \n      attempts,\n      mode \n    };\n  }\n  \n  // Fallback: use middle-range settings\n  console.log('No optimal result found, using fallback compression');\n  const fallbackParams: CompressionParams = {\n    jpegQuality: (minQuality + maxQuality) / 2,\n    scale: (minScale + maxScale) / 2,\n    onProgress\n  };\n  \n  const fallbackResult = await compressPDFSimple(pdfBytes, fallbackParams);\n  return { \n    blob: fallbackResult.blob, \n    quality: fallbackParams.jpegQuality, \n    scale: fallbackParams.scale, \n    attempts: attempts + 1,\n    mode \n  };\n}","size_bytes":28319},"client/src/lib/smart-file-namer.ts":{"content":"// Smart File Namer - AI-powered file naming suggestions\n// Generates descriptive file names based on content, operation, and date\n\ninterface FileNameOptions {\n  originalName: string;\n  operation?: 'compress' | 'convert' | 'merge' | 'split' | 'unlock' | 'watermark';\n  fileType?: string;\n  size?: number;\n  pageCount?: number;\n  quality?: string;\n  date?: Date;\n  customPrefix?: string;\n}\n\ninterface SmartFileName {\n  suggested: string;\n  variations: string[];\n  description: string;\n}\n\n// Common descriptive words for different operations\nconst OPERATION_DESCRIPTORS = {\n  compress: ['compressed', 'reduced', 'optimized', 'small', 'compact', 'mini'],\n  convert: ['converted', 'transformed', 'changed', 'formatted'],\n  merge: ['merged', 'combined', 'joined', 'unified'],\n  split: ['split', 'divided', 'separated', 'extracted'],\n  unlock: ['unlocked', 'decrypted', 'opened', 'accessible'],\n  watermark: ['watermarked', 'branded', 'marked', 'stamped']\n};\n\nconst SIZE_DESCRIPTORS = {\n  tiny: ['tiny', 'mini', 'micro'],\n  small: ['small', 'compact', 'light'],\n  medium: ['medium', 'standard', 'regular'],\n  large: ['large', 'full', 'complete'],\n  huge: ['huge', 'maximum', 'ultra']\n};\n\nconst QUALITY_DESCRIPTORS = {\n  low: ['basic', 'draft', 'eco'],\n  medium: ['standard', 'normal', 'balanced'],\n  high: ['high', 'premium', 'quality'],\n  maximum: ['maximum', 'best', 'ultra', 'pro']\n};\n\nexport function generateSmartFileName(options: FileNameOptions): SmartFileName {\n  const {\n    originalName,\n    operation,\n    fileType,\n    size,\n    pageCount,\n    quality,\n    date = new Date(),\n    customPrefix\n  } = options;\n\n  // Extract base name without extension\n  const baseName = originalName.replace(/\\.[^/.]+$/, '');\n  const extension = originalName.split('.').pop() || 'pdf';\n  \n  // Clean the base name (remove special characters, limit length)\n  const cleanBaseName = cleanFileName(baseName);\n  \n  // Generate date strings\n  const dateStr = formatDate(date);\n  const timeStr = formatTime(date);\n  \n  // Generate size descriptor\n  const sizeDescriptor = getSizeDescriptor(size);\n  \n  // Generate operation descriptor\n  const operationDescriptor = operation ? OPERATION_DESCRIPTORS[operation][0] : '';\n  \n  // Generate quality descriptor\n  const qualityDescriptor = quality ? getQualityDescriptor(quality) : '';\n  \n  // Build suggested name variations\n  const variations: string[] = [];\n  \n  // Pattern 1: [operation]_[basename]_[date].[ext]\n  if (operation) {\n    variations.push(`${operationDescriptor}_${cleanBaseName}_${dateStr}.${extension}`);\n  }\n  \n  // Pattern 2: [basename]_[size]_[date].[ext]\n  if (sizeDescriptor) {\n    variations.push(`${cleanBaseName}_${sizeDescriptor}_${dateStr}.${extension}`);\n  }\n  \n  // Pattern 3: [date]_[basename]_[operation].[ext]\n  if (operation) {\n    variations.push(`${dateStr}_${cleanBaseName}_${operationDescriptor}.${extension}`);\n  }\n  \n  // Pattern 4: [basename]_[quality]_v[time].[ext]\n  if (qualityDescriptor) {\n    variations.push(`${cleanBaseName}_${qualityDescriptor}_v${timeStr}.${extension}`);\n  }\n  \n  // Pattern 5: [custom]_[basename]_[date].[ext]\n  if (customPrefix) {\n    variations.push(`${customPrefix}_${cleanBaseName}_${dateStr}.${extension}`);\n  }\n  \n  // Pattern 6: Simple with operation\n  if (operation) {\n    variations.push(`${cleanBaseName}_${operationDescriptor}.${extension}`);\n  }\n  \n  // Pattern 7: With page count\n  if (pageCount !== undefined) {\n    variations.push(`${cleanBaseName}_${pageCount}pages_${dateStr}.${extension}`);\n  }\n  \n  // Pattern 8: Descriptive with all info\n  if (operation && sizeDescriptor) {\n    variations.push(`${operationDescriptor}_${sizeDescriptor}_${cleanBaseName}.${extension}`);\n  }\n  \n  // Remove duplicates and limit to 5 variations\n  const uniqueVariations = [...new Set(variations)].slice(0, 5);\n  \n  // Select the best suggestion based on available info\n  let suggested = uniqueVariations[0] || `${cleanBaseName}_${dateStr}.${extension}`;\n  \n  // Generate description\n  const description = generateDescription(options, suggested);\n  \n  return {\n    suggested,\n    variations: uniqueVariations,\n    description\n  };\n}\n\nfunction cleanFileName(name: string): string {\n  // Remove special characters except underscore and hyphen\n  let clean = name.replace(/[^a-zA-Z0-9_-]/g, '_');\n  \n  // Remove multiple underscores\n  clean = clean.replace(/_+/g, '_');\n  \n  // Remove leading/trailing underscores\n  clean = clean.replace(/^_+|_+$/g, '');\n  \n  // Limit length to 30 characters\n  if (clean.length > 30) {\n    clean = clean.substring(0, 30);\n  }\n  \n  // If empty, use default\n  if (!clean) {\n    clean = 'document';\n  }\n  \n  return clean.toLowerCase();\n}\n\nfunction formatDate(date: Date): string {\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const day = String(date.getDate()).padStart(2, '0');\n  return `${year}${month}${day}`;\n}\n\nfunction formatTime(date: Date): string {\n  const hours = String(date.getHours()).padStart(2, '0');\n  const minutes = String(date.getMinutes()).padStart(2, '0');\n  return `${hours}${minutes}`;\n}\n\nfunction getSizeDescriptor(size?: number): string {\n  if (!size) return '';\n  \n  const sizeInMB = size / (1024 * 1024);\n  \n  if (sizeInMB < 0.5) return SIZE_DESCRIPTORS.tiny[0];\n  if (sizeInMB < 2) return SIZE_DESCRIPTORS.small[0];\n  if (sizeInMB < 10) return SIZE_DESCRIPTORS.medium[0];\n  if (sizeInMB < 50) return SIZE_DESCRIPTORS.large[0];\n  return SIZE_DESCRIPTORS.huge[0];\n}\n\nfunction getQualityDescriptor(quality: string): string {\n  const lowerQuality = quality.toLowerCase();\n  \n  if (lowerQuality.includes('low') || lowerQuality.includes('basic')) {\n    return QUALITY_DESCRIPTORS.low[0];\n  }\n  if (lowerQuality.includes('high') || lowerQuality.includes('premium')) {\n    return QUALITY_DESCRIPTORS.high[0];\n  }\n  if (lowerQuality.includes('max') || lowerQuality.includes('best')) {\n    return QUALITY_DESCRIPTORS.maximum[0];\n  }\n  \n  return QUALITY_DESCRIPTORS.medium[0];\n}\n\nfunction generateDescription(options: FileNameOptions, fileName: string): string {\n  const parts: string[] = [];\n  \n  if (options.operation) {\n    parts.push(`${options.operation} file`);\n  }\n  \n  if (options.size) {\n    const sizeInMB = (options.size / (1024 * 1024)).toFixed(2);\n    parts.push(`${sizeInMB}MB`);\n  }\n  \n  if (options.pageCount) {\n    parts.push(`${options.pageCount} pages`);\n  }\n  \n  if (options.quality) {\n    parts.push(`${options.quality} quality`);\n  }\n  \n  const date = options.date || new Date();\n  parts.push(`created ${date.toLocaleDateString()}`);\n  \n  return `${fileName} - ${parts.join(', ')}`;\n}\n\n// Function to suggest file names based on content analysis\nexport function suggestFileNameFromContent(\n  content: string,\n  fileType: string = 'pdf'\n): string[] {\n  const suggestions: string[] = [];\n  const words = content.toLowerCase().split(/\\s+/);\n  const date = new Date();\n  const dateStr = formatDate(date);\n  \n  // Find common document types\n  const documentTypes = {\n    invoice: ['invoice', 'bill', 'payment', 'amount', 'total'],\n    report: ['report', 'analysis', 'summary', 'findings', 'conclusion'],\n    contract: ['agreement', 'contract', 'terms', 'conditions', 'party'],\n    letter: ['dear', 'sincerely', 'regards', 'letter', 'yours'],\n    resume: ['resume', 'cv', 'experience', 'education', 'skills'],\n    presentation: ['slide', 'presentation', 'agenda', 'overview', 'objectives'],\n    manual: ['manual', 'guide', 'instructions', 'steps', 'procedure'],\n    receipt: ['receipt', 'purchase', 'transaction', 'paid', 'order']\n  };\n  \n  // Detect document type\n  let detectedType = 'document';\n  let maxMatches = 0;\n  \n  for (const [type, keywords] of Object.entries(documentTypes)) {\n    const matches = keywords.filter(keyword => words.includes(keyword)).length;\n    if (matches > maxMatches) {\n      maxMatches = matches;\n      detectedType = type;\n    }\n  }\n  \n  // Generate suggestions based on detected type\n  suggestions.push(`${detectedType}_${dateStr}.${fileType}`);\n  \n  // Find potential title (first line or heading)\n  const lines = content.split('\\n').filter(line => line.trim());\n  if (lines.length > 0) {\n    const potentialTitle = cleanFileName(lines[0].substring(0, 50));\n    if (potentialTitle && potentialTitle !== 'document') {\n      suggestions.push(`${potentialTitle}_${dateStr}.${fileType}`);\n    }\n  }\n  \n  // Find dates in content\n  const datePattern = /\\b(\\d{1,2})[\\/\\-](\\d{1,2})[\\/\\-](\\d{2,4})\\b/g;\n  const foundDates = content.match(datePattern);\n  if (foundDates && foundDates.length > 0) {\n    const contentDate = foundDates[0].replace(/[\\/\\-]/g, '');\n    suggestions.push(`${detectedType}_${contentDate}.${fileType}`);\n  }\n  \n  // Find potential ID or reference numbers\n  const refPattern = /\\b([A-Z]{2,}[\\d]{3,})\\b/g;\n  const refs = content.match(refPattern);\n  if (refs && refs.length > 0) {\n    suggestions.push(`${detectedType}_${refs[0].toLowerCase()}.${fileType}`);\n  }\n  \n  // Add generic suggestion\n  suggestions.push(`${detectedType}_edited_${dateStr}.${fileType}`);\n  \n  // Return unique suggestions\n  return [...new Set(suggestions)].slice(0, 5);\n}\n\n// Function to batch rename multiple files\nexport function batchRenameFiles(\n  files: { name: string; size?: number }[],\n  operation?: string\n): { original: string; suggested: string }[] {\n  const date = new Date();\n  const results: { original: string; suggested: string }[] = [];\n  \n  files.forEach((file, index) => {\n    const smartName = generateSmartFileName({\n      originalName: file.name,\n      operation: operation as any,\n      size: file.size,\n      date\n    });\n    \n    // Add index if multiple files\n    let suggested = smartName.suggested;\n    if (files.length > 1) {\n      const ext = suggested.split('.').pop();\n      const base = suggested.replace(/\\.[^/.]+$/, '');\n      suggested = `${base}_${index + 1}.${ext}`;\n    }\n    \n    results.push({\n      original: file.name,\n      suggested\n    });\n  });\n  \n  return results;\n}\n\n// Export function to add smart naming to existing file download\nexport function enhanceDownloadName(\n  originalName: string,\n  blob: Blob,\n  operation?: string\n): string {\n  const smartName = generateSmartFileName({\n    originalName,\n    operation: operation as any,\n    size: blob.size,\n    date: new Date()\n  });\n  \n  return smartName.suggested;\n}","size_bytes":10295},"client/src/pages/extract-text.tsx":{"content":"import { useState, useCallback } from \"react\";\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Label } from \"@/components/ui/label\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useSEO, generateHowToSchema, generateSoftwareApplicationSchema } from \"@/hooks/use-seo\";\nimport { \n  FileText, Copy, Download, ArrowLeft, Upload, Sparkles, \n  Eye, Languages, AlertCircle, Check, Loader2, ScanLine,\n  Image as ImageIcon, Globe, Type, FileOutput\n} from \"lucide-react\";\nimport FileUpload from \"@/components/ui/file-upload\";\nimport { cn } from \"@/lib/utils\";\nimport Breadcrumbs from \"@/components/seo/breadcrumbs\";\nimport ToolSEO from \"@/components/seo/tool-seo\";\nimport PrivacyNotice from \"@/components/privacy-notice\";\nimport Tesseract from 'tesseract.js';\nimport { ContactSupportSection } from \"@/components/contact-support\";\n\ninterface ExtractedText {\n  text: string;\n  confidence: number;\n  language: string;\n  wordCount: number;\n}\n\nconst SUPPORTED_LANGUAGES = [\n  { value: 'eng', label: 'English', native: 'English' },\n  { value: 'spa', label: 'Spanish', native: 'Español' },\n  { value: 'fra', label: 'French', native: 'Français' },\n  { value: 'deu', label: 'German', native: 'Deutsch' },\n  { value: 'ita', label: 'Italian', native: 'Italiano' },\n  { value: 'por', label: 'Portuguese', native: 'Português' },\n  { value: 'rus', label: 'Russian', native: 'Русский' },\n  { value: 'jpn', label: 'Japanese', native: '日本語' },\n  { value: 'chi_sim', label: 'Chinese (Simplified)', native: '简体中文' },\n  { value: 'chi_tra', label: 'Chinese (Traditional)', native: '繁體中文' },\n  { value: 'kor', label: 'Korean', native: '한국어' },\n  { value: 'ara', label: 'Arabic', native: 'العربية' },\n  { value: 'hin', label: 'Hindi', native: 'हिन्दी' },\n  { value: 'nld', label: 'Dutch', native: 'Nederlands' },\n  { value: 'pol', label: 'Polish', native: 'Polski' }\n];\n\nexport default function ExtractText() {\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [imagePreview, setImagePreview] = useState<string>(\"\");\n  const [language, setLanguage] = useState(\"eng\");\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [progressStatus, setProgressStatus] = useState(\"\");\n  const [extractedResult, setExtractedResult] = useState<ExtractedText | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const { toast } = useToast();\n\n  // SEO structured data\n  const howToSchema = generateHowToSchema({\n    name: \"How to Extract Text from Images\",\n    description: \"Extract text from images using OCR technology directly in your browser\",\n    totalTime: \"PT30S\",\n    steps: [\n      { name: \"Upload Image\", text: \"Select an image containing text (JPG, PNG, etc.)\" },\n      { name: \"Choose Language\", text: \"Select the language of the text in the image\" },\n      { name: \"Extract Text\", text: \"Click 'Extract Text' and wait for processing\" },\n      { name: \"Copy or Download\", text: \"Copy the extracted text or download as a file\" }\n    ]\n  });\n\n  const softwareSchema = generateSoftwareApplicationSchema({\n    name: \"Image Text Extractor - AltafToolsHub\",\n    description: \"Free OCR tool to extract text from images. Supports 15+ languages. 100% browser-based processing for complete privacy.\",\n    applicationCategory: \"UtilitiesApplication\",\n    url: \"https://www.altaftoolshub.com/extract-text\",\n    aggregateRating: { ratingValue: 4.8, ratingCount: 892, bestRating: 5 },\n    featureList: [\n      \"Extract text from JPG, PNG, WebP, BMP images\",\n      \"Support for 15+ languages\",\n      \"100% client-side OCR processing\",\n      \"Export as TXT file or copy to clipboard\",\n      \"Confidence score for accuracy\",\n      \"No server uploads required\"\n    ]\n  });\n\n  useSEO({\n    title: \"Extract Text from Images - Free OCR Tool | AltafToolsHub\",\n    description: \"Free online OCR tool to extract text from images. Supports multiple languages. All processing happens in your browser for complete privacy. No uploads required.\",\n    path: \"/extract-text\",\n    keywords: \"ocr, extract text from image, image to text, optical character recognition, text extraction, ocr online, free ocr tool, tesseract ocr, image text reader\",\n    structuredData: [howToSchema, softwareSchema],\n    ogImage: \"https://www.altaftoolshub.com/og-extract-text.png\"\n  });\n\n  const handleFileSelect = useCallback((file: File) => {\n    if (!file.type.startsWith('image/')) {\n      setError('Please select a valid image file (JPG, PNG, WebP, etc.)');\n      return;\n    }\n\n    if (file.size > 10 * 1024 * 1024) { // 10MB limit\n      setError('File size must be less than 10MB');\n      return;\n    }\n\n    setSelectedFile(file);\n    setError(null);\n    setExtractedResult(null);\n\n    // Create image preview\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      setImagePreview(e.target?.result as string);\n    };\n    reader.readAsDataURL(file);\n  }, []);\n\n  const extractText = async () => {\n    if (!selectedFile || !imagePreview) return;\n\n    setIsProcessing(true);\n    setProgress(0);\n    setProgressStatus(\"Initializing OCR engine...\");\n    setError(null);\n\n    try {\n      // Modern Tesseract.js API with enhanced accuracy settings\n      setProgressStatus(`Initializing OCR for ${language}...`);\n      setProgress(20);\n      \n      const worker = await Tesseract.createWorker(language, 1, {\n        logger: (m) => {\n          if (m.status === 'recognizing text' && typeof m.progress === 'number') {\n            setProgress(20 + Math.floor(m.progress * 70));\n          }\n        }\n      });\n      \n      // Configure for better accuracy and text extraction\n      await worker.setParameters({\n        tessedit_pageseg_mode: Tesseract.PSM.AUTO_OSD, // Automatic page segmentation with OSD\n        preserve_interword_spaces: '1', // Preserve spaces between words\n        tessedit_create_hocr: '0', // Don't create HOCR output (faster)\n        tessedit_create_tsv: '0', // Don't create TSV output (faster)\n        tessedit_char_whitelist: '', // Allow all characters\n        user_defined_dpi: '300', // Higher DPI for better recognition\n      });\n      \n      setProgressStatus('Extracting text from image...');\n      setProgress(50);\n      \n      // Process image with enhanced settings\n      const { data } = await worker.recognize(imagePreview, {\n        rotateAuto: true,\n        rotateRadians: 0,\n      });\n      \n      setProgress(90);\n      setProgressStatus('Finalizing...');\n      \n      await worker.terminate();\n\n      // Process results\n      const extractedText = data.text.trim();\n      const confidence = Math.round(data.confidence);\n      const wordCount = extractedText.split(/\\s+/).filter(word => word.length > 0).length;\n\n      if (extractedText.length === 0) {\n        setError('No text could be extracted from this image. Please ensure the image contains readable text.');\n        setIsProcessing(false);\n        return;\n      }\n\n      setExtractedResult({\n        text: extractedText,\n        confidence,\n        language,\n        wordCount\n      });\n\n      toast({\n        title: \"Text Extracted Successfully\",\n        description: `Extracted ${wordCount} words with ${confidence}% confidence`,\n      });\n\n    } catch (err) {\n      console.error('OCR Error:', err);\n      setError('Failed to extract text from image. Please try again with a clearer image.');\n      toast({\n        title: \"Extraction Failed\",\n        description: \"Could not extract text from the image. Please try again.\",\n        variant: \"destructive\"\n      });\n    } finally {\n      setIsProcessing(false);\n      setProgress(0);\n      setProgressStatus(\"\");\n    }\n  };\n\n  const copyToClipboard = async () => {\n    if (!extractedResult) return;\n\n    try {\n      await navigator.clipboard.writeText(extractedResult.text);\n      toast({\n        title: \"Copied!\",\n        description: \"Text copied to clipboard.\",\n      });\n    } catch {\n      toast({\n        title: \"Copy Failed\",\n        description: \"Failed to copy text. Please try selecting and copying manually.\",\n        variant: \"destructive\"\n      });\n    }\n  };\n\n  const downloadText = () => {\n    if (!extractedResult) return;\n\n    const blob = new Blob([extractedResult.text], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `extracted-text-${new Date().toISOString().split('T')[0]}.txt`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n\n    toast({\n      title: \"Downloaded!\",\n      description: \"Text file downloaded successfully.\",\n    });\n  };\n\n  const reset = () => {\n    setSelectedFile(null);\n    setImagePreview(\"\");\n    setExtractedResult(null);\n    setError(null);\n    setProgress(0);\n    setProgressStatus(\"\");\n  };\n\n  const getConfidenceColor = (confidence: number) => {\n    if (confidence >= 90) return \"text-green-500\";\n    if (confidence >= 70) return \"text-yellow-500\";\n    return \"text-orange-500\";\n  };\n\n  return (\n    <div className=\"min-h-screen pattern-bg\">\n      <ToolSEO \n        toolName=\"Image Text Extractor\"\n        description=\"Extract text from images using OCR technology\"\n        category=\"UtilitiesApplication\"\n      />\n      \n      <div className=\"container mx-auto px-4 py-8 max-w-6xl\">\n        <Breadcrumbs items={[{ name: \"Extract Text\", url: \"/extract-text\" }]} />\n        \n        {/* Header */}\n        <div className=\"text-center mb-8\">\n          <Button \n            variant=\"ghost\" \n            className=\"mb-4\"\n            onClick={() => {\n              const toolsSection = document.getElementById('tools-section');\n              if (toolsSection) {\n                window.history.pushState({}, '', '/');\n                setTimeout(() => {\n                  toolsSection.scrollIntoView({ behavior: 'smooth' });\n                }, 100);\n              }\n            }}\n            data-testid=\"button-back\"\n          >\n            <ArrowLeft className=\"w-4 h-4 mr-2\" />\n            Back to Tools\n          </Button>\n          \n          <div className=\"flex items-center justify-center gap-3 mb-4\">\n            <div className=\"p-3 rounded-2xl bg-gradient-to-br from-cyan-500 to-blue-500\">\n              <ScanLine className=\"w-8 h-8 text-white\" />\n            </div>\n            <h1 className=\"text-4xl font-bold\">Image Text Extractor</h1>\n          </div>\n          \n          <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n            Extract text from images using advanced OCR technology. \n            All processing happens in your browser for complete privacy.\n          </p>\n        </div>\n\n        <PrivacyNotice \n          message=\"All image processing happens locally in your browser. Your images never leave your device.\"\n        />\n\n        {/* Main Content with equal heights */}\n        <div className=\"grid lg:grid-cols-2 gap-6 mb-8 items-start\">\n          {/* Input Section */}\n          <div className=\"space-y-6\">\n            {/* File Upload Card */}\n            {!selectedFile ? (\n              <FileUpload\n                onFileSelect={handleFileSelect}\n                accept=\"image/*\"\n                title=\"Upload your image\"\n                description=\"Drag & drop or click to select an image with text\"\n                className=\"min-h-[400px] lg:h-[450px]\"\n              />\n            ) : (\n              <Card className=\"p-6 h-full\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <Label className=\"text-lg font-semibold\">Selected Image</Label>\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={reset}\n                    data-testid=\"button-change-image\"\n                  >\n                    Change Image\n                  </Button>\n                </div>\n                \n                {imagePreview && (\n                  <div className=\"relative rounded-lg overflow-hidden bg-muted\">\n                    <img \n                      src={imagePreview} \n                      alt=\"Selected image\"\n                      className=\"w-full h-[350px] lg:h-[400px] object-contain\"\n                    />\n                    <div className=\"absolute top-2 right-2 bg-black/70 text-white px-2 py-1 rounded text-xs\">\n                      {(selectedFile.size / 1024).toFixed(1)} KB\n                    </div>\n                  </div>\n                )}\n                \n                <div className=\"mt-4 text-sm text-muted-foreground\">\n                  <p data-testid=\"text-filename\">{selectedFile.name}</p>\n                </div>\n              </Card>\n            )}\n\n            {/* Settings */}\n            {selectedFile && (\n              <Card className=\"p-6\">\n                <Label className=\"text-lg font-semibold mb-4 block\">OCR Settings</Label>\n                \n                <div className=\"space-y-4\">\n                  <div>\n                    <Label htmlFor=\"language\" className=\"mb-2 block\">\n                      Text Language\n                    </Label>\n                    <Select\n                      value={language}\n                      onValueChange={setLanguage}\n                      disabled={isProcessing}\n                    >\n                      <SelectTrigger id=\"language\" data-testid=\"select-language\">\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent className=\"max-h-[300px]\">\n                        {SUPPORTED_LANGUAGES.map(lang => (\n                          <SelectItem key={lang.value} value={lang.value}>\n                            <span className=\"flex items-center gap-2 overflow-hidden\">\n                              <Globe className=\"w-4 h-4 flex-shrink-0\" />\n                              <span>{lang.label} • {lang.native}</span>\n                            </span>\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                    <p className=\"text-xs text-muted-foreground mt-2\">\n                      Select the primary language of the text in your image\n                    </p>\n                  </div>\n\n                  {error && (\n                    <Alert className=\"border-destructive/20 bg-destructive/10\">\n                      <AlertCircle className=\"h-4 w-4\" />\n                      <AlertDescription data-testid=\"text-error\">\n                        {error}\n                      </AlertDescription>\n                    </Alert>\n                  )}\n\n                  <Button\n                    onClick={extractText}\n                    disabled={!selectedFile || isProcessing}\n                    className=\"w-full btn-gradient text-white\"\n                    size=\"lg\"\n                    data-testid=\"button-extract\"\n                  >\n                    {isProcessing ? (\n                      <>\n                        <Loader2 className=\"w-5 h-5 mr-2 animate-spin\" />\n                        Extracting Text...\n                      </>\n                    ) : (\n                      <>\n                        <Eye className=\"w-5 h-5 mr-2\" />\n                        Extract Text\n                      </>\n                    )}\n                  </Button>\n\n                  {isProcessing && (\n                    <div className=\"space-y-2\">\n                      <Progress value={progress} className=\"h-2\" />\n                      <p className=\"text-sm text-center text-muted-foreground\">\n                        {progressStatus}\n                      </p>\n                    </div>\n                  )}\n                </div>\n              </Card>\n            )}\n          </div>\n\n          {/* Output Section */}\n          <div className=\"lg:sticky lg:top-4\">\n            {extractedResult ? (\n              <Card className=\"p-6\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <Label className=\"text-lg font-semibold\">Extracted Text</Label>\n                  <div className=\"flex gap-2\">\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={copyToClipboard}\n                      data-testid=\"button-copy\"\n                    >\n                      <Copy className=\"w-4 h-4 mr-1\" />\n                      Copy\n                    </Button>\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={downloadText}\n                      data-testid=\"button-download\"\n                    >\n                      <Download className=\"w-4 h-4 mr-1\" />\n                      Download\n                    </Button>\n                  </div>\n                </div>\n\n                {/* Statistics */}\n                <div className=\"grid grid-cols-3 gap-3 mb-4\">\n                  <div className=\"text-center p-3 rounded-lg bg-muted\">\n                    <div className=\"text-xl sm:text-2xl font-bold truncate\" data-testid=\"stat-words\">\n                      {extractedResult.wordCount.toLocaleString()}\n                    </div>\n                    <div className=\"text-xs text-muted-foreground\">Words</div>\n                  </div>\n                  \n                  <div className=\"text-center p-3 rounded-lg bg-muted\">\n                    <div className={cn(\"text-xl sm:text-2xl font-bold\", getConfidenceColor(extractedResult.confidence))}\n                         data-testid=\"stat-confidence\">\n                      {extractedResult.confidence}%\n                    </div>\n                    <div className=\"text-xs text-muted-foreground\">Confidence</div>\n                  </div>\n                  \n                  <div className=\"text-center p-3 rounded-lg bg-muted\">\n                    <div className=\"text-xl sm:text-2xl font-bold truncate\" data-testid=\"stat-chars\">\n                      {extractedResult.text.length.toLocaleString()}\n                    </div>\n                    <div className=\"text-xs text-muted-foreground\">Characters</div>\n                  </div>\n                </div>\n\n                {/* Extracted Text */}\n                <div className=\"relative\">\n                  <Textarea\n                    value={extractedResult.text}\n                    readOnly\n                    className=\"min-h-[400px] max-h-[500px] resize-y font-mono text-sm overflow-auto\"\n                    data-testid=\"textarea-extracted\"\n                  />\n                  <div className=\"absolute bottom-2 right-2 bg-background/90 backdrop-blur px-2 py-1 rounded text-xs text-muted-foreground\">\n                    {extractedResult.text.split('\\n').length} lines\n                  </div>\n                </div>\n\n                <div className=\"mt-4 flex items-center gap-2 text-sm text-muted-foreground\">\n                  <Check className=\"w-4 h-4 text-green-500\" />\n                  <span>Text extracted successfully from image</span>\n                </div>\n              </Card>\n            ) : selectedFile ? (\n              <Card className=\"p-6 h-full min-h-[400px] lg:min-h-[500px] flex items-center justify-center border-dashed\">\n                <div className=\"text-center text-muted-foreground\">\n                  <div className=\"relative\">\n                    <FileText className=\"w-16 h-16 mx-auto mb-4 opacity-20\" />\n                    <ScanLine className=\"w-8 h-8 absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-primary opacity-60 animate-pulse\" />\n                  </div>\n                  <p className=\"text-lg font-medium mb-2\">Ready to Extract</p>\n                  <p className=\"text-sm mb-4\">\n                    Click the \"Extract Text\" button to process your image\n                  </p>\n                  <div className=\"flex flex-wrap gap-2 justify-center text-xs\">\n                    <Badge variant=\"secondary\">Image loaded</Badge>\n                    <Badge variant=\"secondary\">{language.toUpperCase()}</Badge>\n                  </div>\n                </div>\n              </Card>\n            ) : (\n              <Card className=\"p-6 h-full min-h-[400px] lg:min-h-[450px] flex items-center justify-center border-dashed\">\n                <div className=\"text-center text-muted-foreground\">\n                  <div className=\"relative\">\n                    <FileText className=\"w-16 h-16 mx-auto mb-4 opacity-20\" />\n                    <ScanLine className=\"w-8 h-8 absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-primary opacity-60 animate-pulse\" />\n                  </div>\n                  <p className=\"text-lg font-medium mb-2\">No text extracted yet</p>\n                  <p className=\"text-sm mb-4\">\n                    Upload an image to begin text extraction\n                  </p>\n                  <div className=\"flex flex-wrap gap-2 justify-center text-xs\">\n                    <Badge variant=\"secondary\">JPG</Badge>\n                    <Badge variant=\"secondary\">PNG</Badge>\n                    <Badge variant=\"secondary\">WebP</Badge>\n                    <Badge variant=\"secondary\">BMP</Badge>\n                  </div>\n                </div>\n              </Card>\n            )}\n          </div>\n        </div>\n\n        {/* Features Section */}\n        <div className=\"grid md:grid-cols-3 gap-6 mb-12\">\n          <Card className=\"p-6\">\n            <div className=\"flex items-center gap-3 mb-3\">\n              <Languages className=\"w-5 h-5 text-primary\" />\n              <h3 className=\"font-semibold\">Multi-Language Support</h3>\n            </div>\n            <p className=\"text-sm text-muted-foreground\">\n              Extract text in 15+ languages including English, Spanish, Chinese, Arabic, and more.\n            </p>\n          </Card>\n          \n          <Card className=\"p-6\">\n            <div className=\"flex items-center gap-3 mb-3\">\n              <ScanLine className=\"w-5 h-5 text-primary\" />\n              <h3 className=\"font-semibold\">Advanced OCR</h3>\n            </div>\n            <p className=\"text-sm text-muted-foreground\">\n              Powered by Tesseract.js for accurate text recognition from images of any quality.\n            </p>\n          </Card>\n          \n          <Card className=\"p-6\">\n            <div className=\"flex items-center gap-3 mb-3\">\n              <FileOutput className=\"w-5 h-5 text-primary\" />\n              <h3 className=\"font-semibold\">Export Options</h3>\n            </div>\n            <p className=\"text-sm text-muted-foreground\">\n              Copy extracted text to clipboard or download as a TXT file for easy sharing.\n            </p>\n          </Card>\n        </div>\n\n        {/* Use Cases */}\n        <Card className=\"p-6 mb-8\">\n          <h3 className=\"text-lg font-semibold mb-4\">Common Use Cases</h3>\n          <div className=\"grid md:grid-cols-2 gap-4\">\n            <div className=\"flex items-start gap-3\">\n              <div className=\"p-1 rounded bg-primary/10\">\n                <Check className=\"w-4 h-4 text-primary\" />\n              </div>\n              <div>\n                <p className=\"font-medium text-sm\">Digitize Printed Documents</p>\n                <p className=\"text-sm text-muted-foreground\">Convert scanned documents and photos to editable text</p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-start gap-3\">\n              <div className=\"p-1 rounded bg-primary/10\">\n                <Check className=\"w-4 h-4 text-primary\" />\n              </div>\n              <div>\n                <p className=\"font-medium text-sm\">Extract Text from Screenshots</p>\n                <p className=\"text-sm text-muted-foreground\">Copy text from images, screenshots, and screen captures</p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-start gap-3\">\n              <div className=\"p-1 rounded bg-primary/10\">\n                <Check className=\"w-4 h-4 text-primary\" />\n              </div>\n              <div>\n                <p className=\"font-medium text-sm\">Translate Image Text</p>\n                <p className=\"text-sm text-muted-foreground\">Extract foreign language text for translation</p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-start gap-3\">\n              <div className=\"p-1 rounded bg-primary/10\">\n                <Check className=\"w-4 h-4 text-primary\" />\n              </div>\n              <div>\n                <p className=\"font-medium text-sm\">Archive Old Photos</p>\n                <p className=\"text-sm text-muted-foreground\">Extract and preserve text from historical documents</p>\n              </div>\n            </div>\n          </div>\n        </Card>\n\n        {/* Tips */}\n        <Alert className=\"border-primary/20 bg-primary/5\">\n          <Sparkles className=\"h-4 w-4\" />\n          <AlertDescription>\n            <strong>Pro Tips:</strong> For best results, use high-resolution images with clear text. \n            Ensure good contrast between text and background. Straight, well-lit images work best.\n          </AlertDescription>\n        </Alert>\n      </div>\n\n      <ContactSupportSection />\n    </div>\n\n  );\n}\n","size_bytes":25590},"client/src/components/lazy-image.tsx":{"content":"import { useState, useEffect, useRef } from \"react\";\nimport { cn } from \"@/lib/utils\";\n\ninterface LazyImageProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  src: string;\n  alt: string;\n  placeholderSrc?: string;\n  threshold?: number;\n}\n\nexport function LazyImage({\n  src,\n  alt,\n  placeholderSrc,\n  className,\n  threshold = 0.1,\n  ...props\n}: LazyImageProps) {\n  const [imageSrc, setImageSrc] = useState(placeholderSrc || \"\");\n  const [imageRef, setImageRef] = useState<HTMLImageElement | null>(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    let observer: IntersectionObserver;\n\n    if (imageRef && imageSrc !== src) {\n      if (IntersectionObserver) {\n        observer = new IntersectionObserver(\n          (entries) => {\n            entries.forEach((entry) => {\n              if (entry.isIntersecting) {\n                setImageSrc(src);\n                observer.unobserve(imageRef);\n              }\n            });\n          },\n          {\n            threshold,\n          }\n        );\n        observer.observe(imageRef);\n      } else {\n        // Fallback for browsers that don't support IntersectionObserver\n        setImageSrc(src);\n      }\n    }\n\n    return () => {\n      if (observer && observer.unobserve && imageRef) {\n        observer.unobserve(imageRef);\n      }\n    };\n  }, [imageRef, imageSrc, src, threshold]);\n\n  return (\n    <img\n      ref={setImageRef}\n      src={imageSrc}\n      alt={alt}\n      className={cn(\n        \"transition-opacity duration-300\",\n        isLoaded ? \"opacity-100\" : \"opacity-0\",\n        className\n      )}\n      onLoad={() => setIsLoaded(true)}\n      loading=\"lazy\"\n      decoding=\"async\"\n      {...props}\n    />\n  );\n}","size_bytes":1706},"client/src/components/seo/comparison-table.tsx":{"content":"import { Check, X, Minus } from \"lucide-react\";\nimport { Card } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\n\ninterface ComparisonFeature {\n  feature: string;\n  altafToolsHub: boolean | string;\n  competitor1: boolean | string;\n  competitor2: boolean | string;\n  competitor3: boolean | string;\n}\n\ninterface ComparisonTableProps {\n  title: string;\n  description?: string;\n  features: ComparisonFeature[];\n  competitor1Name?: string;\n  competitor2Name?: string;\n  competitor3Name?: string;\n}\n\nexport function ComparisonTable({\n  title,\n  description,\n  features,\n  competitor1Name = \"Adobe Acrobat\",\n  competitor2Name = \"ILovePDF\",\n  competitor3Name = \"SmallPDF\"\n}: ComparisonTableProps) {\n  const renderCell = (value: boolean | string) => {\n    if (typeof value === \"boolean\") {\n      return value ? (\n        <Check className=\"w-5 h-5 text-green-500 mx-auto\" aria-label=\"Yes\" />\n      ) : (\n        <X className=\"w-5 h-5 text-red-500 mx-auto\" aria-label=\"No\" />\n      );\n    }\n    if (value === \"-\") {\n      return <Minus className=\"w-5 h-5 text-gray-400 mx-auto\" aria-label=\"Not applicable\" />;\n    }\n    return <span className=\"text-sm text-center block\">{value}</span>;\n  };\n\n  return (\n    <section className=\"my-12\" itemScope itemType=\"https://schema.org/Table\">\n      <header className=\"mb-6 text-center\">\n        <h2 className=\"text-2xl font-bold mb-2\" itemProp=\"name\" data-testid=\"heading-comparison\">\n          {title}\n        </h2>\n        {description && (\n          <p className=\"text-muted-foreground\" itemProp=\"description\">\n            {description}\n          </p>\n        )}\n      </header>\n\n      <Card className=\"overflow-hidden\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full\" itemProp=\"mainEntity\">\n            <thead className=\"bg-muted/50\">\n              <tr>\n                <th className=\"text-left p-4 font-semibold\" scope=\"col\">\n                  Features\n                </th>\n                <th className=\"text-center p-4 font-semibold\" scope=\"col\">\n                  <div className=\"flex flex-col items-center gap-1\">\n                    <span>AltafToolsHub</span>\n                    <Badge className=\"bg-primary text-xs\">Our Tool</Badge>\n                  </div>\n                </th>\n                <th className=\"text-center p-4 font-semibold\" scope=\"col\">\n                  {competitor1Name}\n                </th>\n                <th className=\"text-center p-4 font-semibold\" scope=\"col\">\n                  {competitor2Name}\n                </th>\n                <th className=\"text-center p-4 font-semibold\" scope=\"col\">\n                  {competitor3Name}\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {features.map((row, index) => (\n                <tr\n                  key={index}\n                  className={index % 2 === 0 ? \"bg-background\" : \"bg-muted/20\"}\n                  itemScope\n                  itemType=\"https://schema.org/PropertyValue\"\n                >\n                  <td className=\"p-4 font-medium\" itemProp=\"name\">\n                    {row.feature}\n                  </td>\n                  <td className=\"p-4 text-center\" itemProp=\"value\">\n                    <div className=\"font-semibold text-primary\">\n                      {renderCell(row.altafToolsHub)}\n                    </div>\n                  </td>\n                  <td className=\"p-4 text-center\">\n                    {renderCell(row.competitor1)}\n                  </td>\n                  <td className=\"p-4 text-center\">\n                    {renderCell(row.competitor2)}\n                  </td>\n                  <td className=\"p-4 text-center\">\n                    {renderCell(row.competitor3)}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </Card>\n\n      <div className=\"mt-6 p-4 bg-primary/5 rounded-lg border border-primary/20\">\n        <p className=\"text-sm text-center\">\n          <strong className=\"text-primary\">Why AltafToolsHub?</strong> We're the only service that \n          processes everything in your browser for true privacy, requires no registration, \n          and is completely free forever.\n        </p>\n      </div>\n    </section>\n  );\n}\n\n// Pre-defined comparison data for PDF tools\nexport const pdfToolsComparison: ComparisonFeature[] = [\n  {\n    feature: \"100% Browser Processing\",\n    altafToolsHub: true,\n    competitor1: false,\n    competitor2: false,\n    competitor3: false\n  },\n  {\n    feature: \"No File Upload Required\",\n    altafToolsHub: true,\n    competitor1: false,\n    competitor2: false,\n    competitor3: false\n  },\n  {\n    feature: \"No Registration Needed\",\n    altafToolsHub: true,\n    competitor1: false,\n    competitor2: \"Limited\",\n    competitor3: \"Limited\"\n  },\n  {\n    feature: \"Completely Free\",\n    altafToolsHub: true,\n    competitor1: \"Trial\",\n    competitor2: \"Limited\",\n    competitor3: \"Limited\"\n  },\n  {\n    feature: \"No Watermarks\",\n    altafToolsHub: true,\n    competitor1: true,\n    competitor2: \"Paid only\",\n    competitor3: \"Paid only\"\n  },\n  {\n    feature: \"Unlimited Usage\",\n    altafToolsHub: true,\n    competitor1: false,\n    competitor2: false,\n    competitor3: false\n  },\n  {\n    feature: \"Works Offline\",\n    altafToolsHub: true,\n    competitor1: false,\n    competitor2: false,\n    competitor3: false\n  },\n  {\n    feature: \"Specific Size Targets\",\n    altafToolsHub: true,\n    competitor1: false,\n    competitor2: false,\n    competitor3: false\n  },\n  {\n    feature: \"Data Privacy\",\n    altafToolsHub: \"100%\",\n    competitor1: \"Cloud\",\n    competitor2: \"Cloud\",\n    competitor3: \"Cloud\"\n  },\n  {\n    feature: \"Processing Speed\",\n    altafToolsHub: \"Instant\",\n    competitor1: \"Fast\",\n    competitor2: \"Fast\",\n    competitor3: \"Fast\"\n  }\n];\n\n// Pre-defined comparison for general tools\nexport const generalToolsComparison: ComparisonFeature[] = [\n  {\n    feature: \"Password Generator\",\n    altafToolsHub: true,\n    competitor1: true,\n    competitor2: true,\n    competitor3: true\n  },\n  {\n    feature: \"QR Code Generator\",\n    altafToolsHub: true,\n    competitor1: false,\n    competitor2: true,\n    competitor3: false\n  },\n  {\n    feature: \"Word Counter\",\n    altafToolsHub: true,\n    competitor1: false,\n    competitor2: false,\n    competitor3: false\n  },\n  {\n    feature: \"Text OCR\",\n    altafToolsHub: true,\n    competitor1: true,\n    competitor2: true,\n    competitor3: true\n  },\n  {\n    feature: \"Client-Side Only\",\n    altafToolsHub: true,\n    competitor1: false,\n    competitor2: false,\n    competitor3: false\n  },\n  {\n    feature: \"Mobile Support\",\n    altafToolsHub: true,\n    competitor1: true,\n    competitor2: true,\n    competitor3: true\n  },\n  {\n    feature: \"API Access\",\n    altafToolsHub: false,\n    competitor1: true,\n    competitor2: true,\n    competitor3: true\n  },\n  {\n    feature: \"Batch Processing\",\n    altafToolsHub: \"Coming\",\n    competitor1: true,\n    competitor2: true,\n    competitor3: true\n  },\n  {\n    feature: \"Price\",\n    altafToolsHub: \"Free\",\n    competitor1: \"$15/mo\",\n    competitor2: \"$9/mo\",\n    competitor3: \"$12/mo\"\n  },\n  {\n    feature: \"Daily Limits\",\n    altafToolsHub: \"None\",\n    competitor1: \"Varies\",\n    competitor2: \"2-3 files\",\n    competitor3: \"2 files\"\n  }\n];","size_bytes":7290},"client/src/components/multi-dropdown-nav.tsx":{"content":"import { useState, useEffect, useRef } from \"react\";\nimport { Link } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { cn } from \"@/lib/utils\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { \n  FileText, Image, FileCode, Zap, ArrowRight, Sparkles\n} from \"lucide-react\";\nimport { toolCategories, Tool } from \"@/lib/tools-data\";\n\n// Helper component for navigation items\nconst ToolNavItem = ({ tool }: { tool: Tool }) => {\n  const Icon = tool.icon;\n  \n  const content = (\n    <div className=\"group relative flex flex-col items-center text-center select-none rounded-xl p-3 leading-none no-underline outline-none transition-all duration-200\">\n      <div className={cn(\n        \"w-12 h-12 rounded-xl flex items-center justify-center mb-3 transition-all duration-300\",\n        \"bg-gradient-to-br\", tool.color,\n        \"group-hover:scale-110 group-hover:shadow-xl\",\n        \"shadow-md\"\n      )}>\n        <Icon className=\"w-6 h-6 text-white\" />\n      </div>\n      <div className=\"flex-1 min-h-0\">\n        <div className=\"font-medium mb-1 flex items-center justify-center gap-1 flex-wrap\">\n          <span className=\"text-sm\">{tool.title}</span>\n          {tool.new && (\n            <span className=\"inline-flex items-center text-xs px-1.5 py-0.5 rounded-full bg-gradient-to-r from-green-500/20 to-green-400/10 text-green-600 dark:text-green-400 font-semibold\">\n              <Sparkles className=\"w-2.5 h-2.5 mr-0.5\" />\n              New\n            </span>\n          )}\n          {!tool.available && (\n            <span className=\"text-xs px-1.5 py-0.5 rounded-full bg-muted-foreground/10 text-muted-foreground\">\n              Soon\n            </span>\n          )}\n        </div>\n        <p className=\"text-xs text-muted-foreground line-clamp-2 leading-relaxed\">\n          {tool.description}\n        </p>\n      </div>\n    </div>\n  );\n\n  if (!tool.available) {\n    return (\n      <button\n        className={cn(\n          \"w-full cursor-not-allowed opacity-60\",\n          \"focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2 focus-visible:outline-none rounded-xl\"\n        )}\n        disabled\n        aria-disabled=\"true\"\n        data-testid={`nav-${tool.id}-disabled`}\n        onClick={(e) => e.preventDefault()}\n      >\n        {content}\n      </button>\n    );\n  }\n\n  return (\n    <Link\n      href={tool.href}\n      className={cn(\n        \"block w-full rounded-xl transition-all duration-200\",\n        \"hover:bg-gradient-to-b hover:from-primary/8 hover:to-primary/3\",\n        \"hover:shadow-lg hover:translate-y-[-2px] hover:scale-[1.03]\",\n        \"focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2 focus-visible:outline-none\",\n        \"border border-transparent hover:border-primary/20\"\n      )}\n      data-testid={`nav-${tool.id}`}\n    >\n      {content}\n    </Link>\n  );\n};\n\nconst menuItems = [\n  {\n    id: \"pdf-management\",\n    label: \"PDF Tools\",\n    icon: FileText,\n    categoryId: \"pdf-management\",\n    href: \"/#pdf-tools\"\n  },\n  {\n    id: \"image-conversion\",\n    label: \"Image Tools\", \n    icon: Image,\n    categoryId: \"image-conversion\",\n    href: \"/#image-tools\"\n  },\n  {\n    id: \"document-conversion\",\n    label: \"Convert\",\n    icon: FileCode,\n    categoryId: \"document-conversion\",\n    href: \"/#convert-tools\"\n  },\n  {\n    id: \"utilities\",\n    label: \"Utilities\",\n    icon: Zap,\n    categoryId: \"utilities\",\n    href: \"/#utilities\"\n  }\n];\n\nexport function MultiDropdownNav() {\n  const [openMenu, setOpenMenu] = useState<string | null>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const buttonRefs = useRef<{ [key: string]: HTMLButtonElement | null }>({});\n\n  // Handle click outside to close dropdown\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (containerRef.current && !containerRef.current.contains(event.target as Node)) {\n        setOpenMenu(null);\n      }\n    };\n\n    if (openMenu) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [openMenu]);\n\n  // Handle escape key\n  useEffect(() => {\n    const handleEscape = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        setOpenMenu(null);\n      }\n    };\n\n    if (openMenu) {\n      document.addEventListener('keydown', handleEscape);\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleEscape);\n    };\n  }, [openMenu]);\n\n  const handleToggle = (menuId: string) => {\n    setOpenMenu(openMenu === menuId ? null : menuId);\n  };\n\n  const getDropdownPosition = (menuId: string) => {\n    const button = buttonRefs.current[menuId];\n    if (!button || !containerRef.current) return { left: 0, width: 400 };\n    \n    const buttonRect = button.getBoundingClientRect();\n    const containerRect = containerRef.current.getBoundingClientRect();\n    const viewportWidth = window.innerWidth;\n    \n    // Calculate ideal dropdown width for horizontal layout - mobile friendly\n    const idealWidth = Math.min(600, viewportWidth - 40);\n    const minWidth = Math.min(320, viewportWidth - 20); // Mobile-friendly minimum\n    const maxWidth = Math.min(800, viewportWidth - 40);\n    \n    // Calculate left position relative to container\n    let left = buttonRect.left - containerRect.left;\n    \n    // Adjust width based on available space\n    let width = idealWidth;\n    \n    // Mobile-first approach: if viewport is small, use full width\n    if (viewportWidth < 640) {\n      width = Math.min(viewportWidth - 20, maxWidth);\n      left = Math.max(10 - containerRect.left, 0); // Align to left with small margin\n    } else {\n      // Desktop: Check if dropdown would overflow viewport\n      if (buttonRect.left + idealWidth > viewportWidth - 20) {\n        // Adjust position to prevent overflow\n        const availableSpace = viewportWidth - buttonRect.left - 20;\n        width = Math.max(minWidth, Math.min(availableSpace, maxWidth));\n        \n        // If still not enough space, align to right edge\n        if (width < minWidth) {\n          width = minWidth;\n          left = Math.max(0, viewportWidth - minWidth - 20 - containerRect.left);\n        }\n      }\n    }\n    \n    return { left, width };\n  };\n\n  return (\n    <div \n      ref={containerRef}\n      className=\"relative multi-dropdown-container\"\n    >\n      {/* Menu Triggers */}\n      <div className=\"flex items-center space-x-1\">\n        {menuItems.map((item) => {\n          const Icon = item.icon;\n          return (\n            <Button\n              key={item.id}\n              ref={(el) => { buttonRefs.current[item.id] = el }}\n              variant=\"ghost\"\n              className={cn(\n                \"font-medium transition-all duration-200\",\n                \"hover:bg-accent hover:text-accent-foreground\",\n                openMenu === item.id && \"bg-accent text-accent-foreground\"\n              )}\n              onClick={() => handleToggle(item.id)}\n              data-testid={`nav-button-${item.id}`}\n            >\n              <Icon className=\"w-4 h-4 mr-2\" />\n              {item.label}\n            </Button>\n          );\n        })}\n      </div>\n\n      {/* Category-Specific Dropdown */}\n      <AnimatePresence>\n        {openMenu && (\n          <>\n            {/* Clean Backdrop without blur */}\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              transition={{ duration: 0.15 }}\n              className=\"fixed inset-0 bg-black/5\"\n              style={{ zIndex: 2147483646 }}\n              onClick={() => setOpenMenu(null)}\n            />\n            \n            {/* Enhanced Dropdown Container */}\n            <motion.div\n              initial={{ opacity: 0, y: -5, scale: 0.98 }}\n              animate={{ opacity: 1, y: 0, scale: 1 }}\n              exit={{ opacity: 0, y: -5, scale: 0.98 }}\n              transition={{ \n                duration: 0.2,\n                type: \"spring\",\n                stiffness: 400,\n                damping: 25\n              }}\n              className=\"dropdown-menu-container absolute top-full mt-2\"\n              style={{ \n                zIndex: 2147483647,\n                position: 'absolute',\n                left: `${getDropdownPosition(openMenu).left}px`,\n                width: `${getDropdownPosition(openMenu).width}px`\n              }}\n            >\n            {menuItems.filter(item => item.id === openMenu).map((menuItem) => {\n              const category = toolCategories.find(cat => cat.id === menuItem.categoryId);\n              const tools = category?.tools; // Get ALL tools, no slicing\n              const Icon = menuItem.icon;\n              \n              // Calculate grid columns for horizontal layout\n              const gridCols = tools && tools.length > 8 ? \"grid-cols-4\" : tools && tools.length > 4 ? \"grid-cols-3\" : \"grid-cols-2\";\n              \n              return (\n                <div key={menuItem.id} className=\"dropdown-menu-content bg-background/95 backdrop-blur-xl border border-primary/10 rounded-2xl shadow-2xl overflow-hidden\">\n                  {/* Enhanced Header with Shimmer */}\n                  <div className=\"relative bg-gradient-to-r from-primary/15 via-primary/10 to-secondary/5 p-5 border-b border-primary/10 overflow-hidden\">\n                    {/* Shimmer Effect */}\n                    <div className=\"absolute inset-0 bg-gradient-to-r from-transparent via-white/10 to-transparent animate-shimmer-slow\" />\n                    \n                    <div className=\"relative flex items-center justify-between\">\n                      <h3 className=\"font-bold text-xl flex items-center\">\n                        <motion.div\n                          className=\"w-10 h-10 rounded-xl bg-gradient-to-br from-primary/20 to-primary/10 flex items-center justify-center mr-3 shadow-lg\"\n                          whileHover={{ rotate: 360 }}\n                          transition={{ duration: 0.5 }}\n                        >\n                          <Icon className=\"w-5 h-5 text-primary\" />\n                        </motion.div>\n                        {menuItem.label}\n                      </h3>\n                      <motion.span\n                        className=\"text-sm font-semibold text-primary bg-primary/10 backdrop-blur px-3 py-1.5 rounded-full shadow-sm\"\n                        whileHover={{ scale: 1.05 }}\n                      >\n                        {tools?.length || 0} tools available\n                      </motion.span>\n                    </div>\n                  </div>\n                  \n                  {/* Tools Grid with Enhanced Horizontal Layout */}\n                  <div className=\"p-5 bg-gradient-to-b from-transparent to-muted/5\">\n                    {tools && tools.length > 0 ? (\n                      <div className={cn(\n                        \"grid gap-3 max-h-[400px] overflow-y-auto pr-3 custom-scrollbar\",\n                        \"scrollbar-thin scrollbar-thumb-primary/30 scrollbar-track-transparent\",\n                        gridCols\n                      )}>\n                        {tools.map((tool, index) => (\n                          <motion.div\n                            key={tool.id}\n                            initial={{ opacity: 0, y: 10, scale: 0.95 }}\n                            animate={{ opacity: 1, y: 0, scale: 1 }}\n                            transition={{ \n                              delay: index * 0.02,\n                              duration: 0.25,\n                              type: \"spring\",\n                              stiffness: 350,\n                              damping: 20\n                            }}\n                            whileHover={{ y: -2 }}\n                            className=\"h-full\"\n                          >\n                            <ToolNavItem tool={tool} />\n                          </motion.div>\n                        ))}\n                      </div>\n                    ) : (\n                      <div className=\"text-center py-8 text-muted-foreground\">\n                        No tools available in this category\n                      </div>\n                    )}\n                  </div>\n                </div>\n              );\n            })}\n            </motion.div>\n          </>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n}","size_bytes":12360},"client/src/lib/tools-data.ts":{"content":"import { \n  FileText, Lock, Image, Shield, QrCode, Type, \n  FileImage, FilePlus, Scissors, Palette, FileArchive,\n  Layers, FileDown, FileUp, Crop, RotateCw, FileX,\n  Droplets, Hash, BookOpen, FileSpreadsheet, FileCode,\n  Presentation, Book, FileSearch, PenTool, ScanLine,\n  Calculator, Zap, Globe, Mail, Download, Upload,\n  ChevronRight, LucideIcon\n} from \"lucide-react\";\n\nexport interface Tool {\n  id: string;\n  title: string;\n  description: string;\n  icon: LucideIcon;\n  href: string;\n  color: string;\n  available: boolean;\n  category: string;\n  popular?: boolean;\n  new?: boolean;\n  features?: string[];\n  extendedDescription?: string;\n}\n\nexport interface ToolCategory {\n  id: string;\n  name: string;\n  description: string;\n  icon: LucideIcon;\n  tools: Tool[];\n}\n\n// All tools organized by category\nexport const allTools: Tool[] = [\n  // PDF Management Tools\n  {\n    id: \"compress-pdf\",\n    title: \"Compress PDF\",\n    description: \"Reduce PDF file size while maintaining quality\",\n    icon: FileDown,\n    href: \"/compress-pdf\",\n    color: \"from-purple-500 to-blue-500\",\n    available: true,\n    category: \"pdf-management\",\n    popular: true,\n    features: [\"Smart compression\", \"Target size options\", \"Quality control\", \"Batch processing\"],\n    extendedDescription: \"Advanced PDF compression with target sizes from 10KB to 5MB. Perfect for email attachments, web uploads, and storage optimization. Maintains text clarity and image quality.\"\n  },\n  {\n    id: \"merge-pdf\",\n    title: \"Merge PDF\",\n    description: \"Combine multiple PDF files into one seamless document\",\n    icon: FilePlus,\n    href: \"/merge-pdf\",\n    color: \"from-green-500 to-emerald-500\",\n    available: true,\n    category: \"pdf-management\",\n    features: [\"Drag & drop reorder\", \"Preview before merge\", \"Unlimited files\", \"Preserve bookmarks\"],\n    extendedDescription: \"Seamlessly merge multiple PDF files into a single document. Perfect for combining reports, contracts, or chapters into one comprehensive file while preserving formatting and quality.\"\n  },\n  {\n    id: \"split-pdf\",\n    title: \"Split PDF\",\n    description: \"Divide PDF files into separate documents by page ranges\",\n    icon: Scissors,\n    href: \"/split-pdf\",\n    color: \"from-emerald-500 to-cyan-500\",\n    available: true,\n    category: \"pdf-management\",\n    features: [\"Custom page ranges\", \"Split by size\", \"Extract single pages\", \"Batch splitting\"],\n    extendedDescription: \"Split large PDF files into smaller, manageable documents. Extract specific pages or divide by custom ranges for easier sharing and organization.\"\n  },\n  {\n    id: \"crop-pdf\",\n    title: \"Crop PDF\",\n    description: \"Remove unwanted margins and whitespace from PDF pages\",\n    icon: Crop,\n    href: \"/crop-pdf\",\n    color: \"from-cyan-500 to-blue-500\",\n    available: true,\n    category: \"pdf-management\",\n    features: [\"Visual crop tool\", \"Auto-detect margins\", \"Batch cropping\", \"Custom dimensions\"],\n    extendedDescription: \"Precisely crop PDF pages to remove unnecessary margins, headers, or footers. Ideal for presentations, scanned documents, and optimizing page layouts.\"\n  },\n  {\n    id: \"organize-pdf\",\n    title: \"Organize PDF\",\n    description: \"Rearrange, rotate, and manage PDF pages with ease\",\n    icon: Layers,\n    href: \"/organize-pdf\",\n    color: \"from-amber-500 to-orange-500\",\n    available: true,\n    category: \"pdf-management\",\n    features: [\"Drag to reorder\", \"Rotate pages\", \"Delete unwanted pages\", \"Thumbnail preview\"],\n    extendedDescription: \"Complete PDF page management tool. Reorder pages by dragging, rotate to correct orientation, and remove unwanted content to create the perfect document.\"\n  },\n  {\n    id: \"rotate-pdf\",\n    title: \"Rotate PDF\",\n    description: \"Fix page orientation issues in your PDF documents\",\n    icon: RotateCw,\n    href: \"/rotate-pdf\",\n    color: \"from-orange-500 to-red-500\",\n    available: true,\n    category: \"pdf-management\",\n    features: [\"90° rotation\", \"Rotate all or selected\", \"Auto-detect orientation\", \"Batch rotation\"],\n    extendedDescription: \"Quickly fix incorrectly oriented pages in your PDFs. Rotate individual pages or entire documents to ensure proper reading direction.\"\n  },\n  {\n    id: \"remove-pages\",\n    title: \"Remove Pages\",\n    description: \"Delete unwanted pages from your PDF documents\",\n    icon: FileX,\n    href: \"/remove-pages\",\n    color: \"from-red-500 to-pink-500\",\n    available: true,\n    category: \"pdf-management\",\n    features: [\"Select multiple pages\", \"Preview before delete\", \"Range selection\", \"Keep original\"],\n    extendedDescription: \"Quickly remove unwanted or blank pages from PDFs. Perfect for cleaning up scanned documents or removing confidential pages before sharing.\"\n  },\n  {\n    id: \"extract-pages\",\n    title: \"Extract Pages\",\n    description: \"Save specific pages as separate PDF files\",\n    icon: FileSearch,\n    href: \"/extract-pages\",\n    color: \"from-pink-500 to-purple-500\",\n    available: true,\n    category: \"pdf-management\",\n    features: [\"Extract single or multiple\", \"Custom page ranges\", \"Create new PDF\", \"Preserve formatting\"],\n    extendedDescription: \"Extract important pages from large PDFs to create focused documents. Ideal for sharing specific sections without sending entire files.\"\n  },\n  {\n    id: \"extract-images\",\n    title: \"Extract Images\",\n    description: \"Save all images from PDFs as separate image files\",\n    icon: FileImage,\n    href: \"/extract-images\",\n    color: \"from-indigo-500 to-blue-500\",\n    available: true,\n    category: \"pdf-management\",\n    features: [\"Extract all images\", \"Original quality\", \"Multiple formats\", \"Batch extraction\"],\n    extendedDescription: \"Extract embedded images from PDFs while maintaining original quality. Perfect for recovering photos, graphics, and illustrations from documents.\"\n  },\n  {\n    id: \"add-page-number\",\n    title: \"Add Page Numbers\",\n    description: \"Insert customizable page numbers to PDF documents\",\n    icon: Hash,\n    href: \"/add-page-number\",\n    color: \"from-blue-500 to-cyan-500\",\n    available: true,\n    category: \"pdf-management\",\n    features: [\"Custom position\", \"Font styles\", \"Start from any number\", \"Skip pages option\"],\n    extendedDescription: \"Add professional page numbers to your PDFs with full customization options. Choose position, style, and format for reports and documents.\"\n  },\n  {\n    id: \"watermark-pdf\",\n    title: \"Watermark PDF\",\n    description: \"Protect documents with custom text or image watermarks\",\n    icon: Droplets,\n    href: \"/watermark-pdf\",\n    color: \"from-teal-500 to-green-500\",\n    available: true,\n    category: \"pdf-management\",\n    features: [\"Text & image watermarks\", \"Transparency control\", \"Position options\", \"Batch watermarking\"],\n    extendedDescription: \"Add professional watermarks to protect your intellectual property. Apply custom text or logos with adjustable opacity and positioning.\"\n  },\n\n  // Image Conversion Tools\n  {\n    id: \"jpg-to-pdf\",\n    title: \"JPG to PDF\",\n    description: \"Convert JPG images to PDF documents\",\n    icon: Image,\n    href: \"/jpg-to-pdf\",\n    color: \"from-cyan-500 to-teal-500\",\n    available: true,\n    category: \"image-conversion\",\n    popular: true,\n    features: [\"Multiple images\", \"Reorder pages\", \"Auto orientation\", \"Quality settings\"],\n    extendedDescription: \"Convert single or multiple JPG images into professional PDF documents. Perfect for creating photo albums, portfolios, or digitizing scanned documents with preserved image quality.\"\n  },\n  {\n    id: \"images-to-pdf\",\n    title: \"Images to PDF\",\n    description: \"Convert PNG, GIF, BMP, TIFF images to PDF documents\",\n    icon: FileImage,\n    href: \"/images-to-pdf\",\n    color: \"from-green-500 to-emerald-500\",\n    available: false,\n    category: \"image-conversion\",\n    features: [\"Multiple formats\", \"Batch conversion\", \"Page arrangement\", \"Size optimization\"],\n    extendedDescription: \"Convert various image formats into PDF documents with smart page arrangement. Support for PNG, GIF, BMP, TIFF, and more. Perfect for creating multi-page documents from mixed image formats.\"\n  },\n  {\n    id: \"pdf-to-images\",\n    title: \"PDF to Images\",\n    description: \"Export PDF pages as PNG, JPG, or other image formats\",\n    icon: FileImage,\n    href: \"/pdf-to-images\",\n    color: \"from-emerald-500 to-cyan-500\",\n    available: false,\n    category: \"image-conversion\",\n    features: [\"Multiple formats\", \"Quality settings\", \"Page selection\", \"Batch export\"],\n    extendedDescription: \"Convert PDF pages into high-quality images. Choose from PNG, JPG, WEBP formats with customizable resolution. Ideal for presentations, thumbnails, or web graphics.\"\n  },\n  {\n    id: \"pdf-to-jpg\",\n    title: \"PDF to JPG\",\n    description: \"Convert PDF pages to high-quality JPG images\",\n    icon: Image,\n    href: \"/pdf-to-jpg\",\n    color: \"from-teal-500 to-green-500\",\n    available: false,\n    category: \"image-conversion\",\n    popular: true,\n    features: [\"High resolution\", \"Compression control\", \"Page range selection\", \"Bulk export\"],\n    extendedDescription: \"Transform PDF pages into JPG images with adjustable quality. Perfect for creating image galleries, social media posts, or web-ready graphics from PDFs.\"\n  },\n  {\n    id: \"heic-to-pdf\",\n    title: \"HEIC/HEIF to PDF\",\n    description: \"Convert iPhone/iPad photos to universally compatible PDFs\",\n    icon: Image,\n    href: \"/heic-to-pdf\",\n    color: \"from-purple-500 to-pink-500\",\n    available: false,\n    category: \"image-conversion\",\n    features: [\"iOS photo support\", \"Quality preservation\", \"Batch conversion\", \"Metadata retention\"],\n    extendedDescription: \"Convert Apple's HEIC/HEIF photo format to PDFs for easy sharing and compatibility. Maintains photo quality and metadata while ensuring universal accessibility.\"\n  },\n  {\n    id: \"tiff-to-pdf\",\n    title: \"TIFF to PDF\",\n    description: \"Convert TIFF images to PDF documents\",\n    icon: FileImage,\n    href: \"/tiff-to-pdf\",\n    color: \"from-indigo-500 to-purple-500\",\n    available: false,\n    category: \"image-conversion\"\n  },\n  {\n    id: \"avif-to-pdf\",\n    title: \"AVIF to PDF\",\n    description: \"Convert AVIF images to PDF format\",\n    icon: FileImage,\n    href: \"/avif-to-pdf\",\n    color: \"from-pink-500 to-red-500\",\n    available: false,\n    category: \"image-conversion\"\n  },\n  {\n    id: \"png-to-pdf\",\n    title: \"PNG to PDF\",\n    description: \"Convert PNG images to PDF documents\",\n    icon: Image,\n    href: \"/png-to-pdf\",\n    color: \"from-blue-500 to-indigo-500\",\n    available: false,\n    category: \"image-conversion\"\n  },\n  {\n    id: \"webp-to-pdf\",\n    title: \"WebP to PDF\",\n    description: \"Convert WebP images to PDF format\",\n    icon: FileImage,\n    href: \"/webp-to-pdf\",\n    color: \"from-cyan-500 to-blue-500\",\n    available: false,\n    category: \"image-conversion\"\n  },\n  {\n    id: \"svg-to-pdf\",\n    title: \"SVG to PDF\",\n    description: \"Convert vector graphics to PDF format\",\n    icon: FileCode,\n    href: \"/svg-to-pdf\",\n    color: \"from-amber-500 to-orange-500\",\n    available: false,\n    category: \"image-conversion\"\n  },\n\n  // Document Conversion Tools\n  {\n    id: \"word-to-pdf\",\n    title: \"Word to PDF\",\n    description: \"Convert Microsoft Word documents to PDF\",\n    icon: FileText,\n    href: \"/word-to-pdf\",\n    color: \"from-blue-600 to-blue-500\",\n    available: false,\n    category: \"document-conversion\",\n    popular: true\n  },\n  {\n    id: \"pdf-to-word\",\n    title: \"PDF to Word\",\n    description: \"Convert PDF files to editable Word documents\",\n    icon: FileText,\n    href: \"/pdf-to-word\",\n    color: \"from-blue-500 to-cyan-500\",\n    available: false,\n    category: \"document-conversion\",\n    popular: true\n  },\n  {\n    id: \"excel-to-pdf\",\n    title: \"Excel to PDF\",\n    description: \"Convert Excel spreadsheets to PDF format\",\n    icon: FileSpreadsheet,\n    href: \"/excel-to-pdf\",\n    color: \"from-green-600 to-green-500\",\n    available: false,\n    category: \"document-conversion\"\n  },\n  {\n    id: \"pdf-to-excel\",\n    title: \"PDF to Excel\",\n    description: \"Extract tables from PDF to Excel format\",\n    icon: FileSpreadsheet,\n    href: \"/pdf-to-excel\",\n    color: \"from-green-500 to-emerald-500\",\n    available: false,\n    category: \"document-conversion\"\n  },\n  {\n    id: \"powerpoint-to-pdf\",\n    title: \"PowerPoint to PDF\",\n    description: \"Convert presentations to PDF format\",\n    icon: Presentation,\n    href: \"/powerpoint-to-pdf\",\n    color: \"from-red-600 to-orange-500\",\n    available: false,\n    category: \"document-conversion\"\n  },\n  {\n    id: \"pdf-to-powerpoint\",\n    title: \"PDF to PowerPoint\",\n    description: \"Convert PDF to editable presentations\",\n    icon: Presentation,\n    href: \"/pdf-to-powerpoint\",\n    color: \"from-orange-500 to-amber-500\",\n    available: false,\n    category: \"document-conversion\"\n  },\n  {\n    id: \"txt-to-pdf\",\n    title: \"TXT to PDF\",\n    description: \"Convert plain text files to PDF format\",\n    icon: FileText,\n    href: \"/txt-to-pdf\",\n    color: \"from-gray-600 to-gray-500\",\n    available: false,\n    category: \"document-conversion\"\n  },\n  {\n    id: \"pdf-to-text\",\n    title: \"PDF to Text\",\n    description: \"Extract text content from PDF files\",\n    icon: FileText,\n    href: \"/pdf-to-text\",\n    color: \"from-gray-500 to-slate-500\",\n    available: false,\n    category: \"document-conversion\"\n  },\n  {\n    id: \"html-to-pdf\",\n    title: \"HTML to PDF\",\n    description: \"Convert web pages to PDF documents\",\n    icon: FileCode,\n    href: \"/html-to-pdf\",\n    color: \"from-orange-500 to-red-500\",\n    available: false,\n    category: \"document-conversion\"\n  },\n  {\n    id: \"pdf-to-html\",\n    title: \"PDF to HTML\",\n    description: \"Convert PDF files to HTML format\",\n    icon: FileCode,\n    href: \"/pdf-to-html\",\n    color: \"from-red-500 to-pink-500\",\n    available: false,\n    category: \"document-conversion\"\n  },\n\n  // eBook Conversion Tools\n  {\n    id: \"epub-to-pdf\",\n    title: \"EPUB to PDF\",\n    description: \"Convert eBook files to PDF format\",\n    icon: Book,\n    href: \"/epub-to-pdf\",\n    color: \"from-purple-600 to-purple-500\",\n    available: false,\n    category: \"ebook-conversion\"\n  },\n  {\n    id: \"pdf-to-epub\",\n    title: \"PDF to EPUB\",\n    description: \"Convert PDF to eBook format\",\n    icon: Book,\n    href: \"/pdf-to-epub\",\n    color: \"from-purple-500 to-pink-500\",\n    available: false,\n    category: \"ebook-conversion\"\n  },\n  {\n    id: \"mobi-to-pdf\",\n    title: \"MOBI to PDF\",\n    description: \"Convert Kindle books to PDF format\",\n    icon: BookOpen,\n    href: \"/mobi-to-pdf\",\n    color: \"from-orange-600 to-orange-500\",\n    available: false,\n    category: \"ebook-conversion\"\n  },\n  {\n    id: \"pdf-to-mobi\",\n    title: \"PDF to MOBI\",\n    description: \"Convert PDF to Kindle format\",\n    icon: BookOpen,\n    href: \"/pdf-to-mobi\",\n    color: \"from-orange-500 to-amber-500\",\n    available: false,\n    category: \"ebook-conversion\"\n  },\n  {\n    id: \"azw-to-pdf\",\n    title: \"AZW/AZW3 to PDF\",\n    description: \"Convert Amazon eBooks to PDF\",\n    icon: Book,\n    href: \"/azw-to-pdf\",\n    color: \"from-blue-600 to-indigo-500\",\n    available: false,\n    category: \"ebook-conversion\"\n  },\n  {\n    id: \"fb2-to-pdf\",\n    title: \"FB2 to PDF\",\n    description: \"Convert FictionBook to PDF format\",\n    icon: BookOpen,\n    href: \"/fb2-to-pdf\",\n    color: \"from-cyan-600 to-cyan-500\",\n    available: false,\n    category: \"ebook-conversion\"\n  },\n  {\n    id: \"djvu-to-pdf\",\n    title: \"DJVU to PDF\",\n    description: \"Convert DJVU documents to PDF\",\n    icon: Book,\n    href: \"/djvu-to-pdf\",\n    color: \"from-green-600 to-green-500\",\n    available: false,\n    category: \"ebook-conversion\"\n  },\n\n  // Security Tools\n  {\n    id: \"unlock-pdf\",\n    title: \"Unlock PDF\",\n    description: \"Remove password protection from PDFs\",\n    icon: Lock,\n    href: \"/unlock-pdf\",\n    color: \"from-blue-500 to-cyan-500\",\n    available: true,\n    category: \"security\",\n    popular: true,\n    features: [\"Password removal\", \"Batch unlock\", \"Secure processing\", \"Instant unlock\"],\n    extendedDescription: \"Safely remove password protection from your own PDF files. All processing happens locally in your browser for maximum security and privacy. Perfect for forgotten passwords.\"\n  },\n  {\n    id: \"protect-pdf\",\n    title: \"Protect PDF\",\n    description: \"Secure PDFs with password encryption and permissions\",\n    icon: Shield,\n    href: \"/protect-pdf\",\n    color: \"from-red-500 to-pink-500\",\n    available: false,\n    category: \"security\",\n    features: [\"256-bit encryption\", \"Permission settings\", \"Owner password\", \"Print restrictions\"],\n    extendedDescription: \"Add military-grade password protection to your sensitive PDFs. Set permissions for printing, copying, and editing. Perfect for confidential documents and secure sharing.\"\n  },\n  {\n    id: \"sign-pdf\",\n    title: \"Sign PDF\",\n    description: \"Add legally binding digital signatures to documents\",\n    icon: PenTool,\n    href: \"/sign-pdf\",\n    color: \"from-indigo-500 to-purple-500\",\n    available: false,\n    category: \"security\",\n    features: [\"Draw signature\", \"Type signature\", \"Upload signature\", \"Date & time stamps\"],\n    extendedDescription: \"Create and apply digital signatures to PDFs for contracts and agreements. Draw, type, or upload your signature with automatic timestamp verification.\"\n  },\n  {\n    id: \"redact-pdf\",\n    title: \"Redact PDF\",\n    description: \"Permanently remove sensitive information\",\n    icon: FileX,\n    href: \"/redact-pdf\",\n    color: \"from-gray-600 to-gray-500\",\n    available: false,\n    category: \"security\"\n  },\n\n  // Utility Tools\n  {\n    id: \"qr-generator\",\n    title: \"QR Generator\",\n    description: \"Generate QR codes from text or URLs\",\n    icon: QrCode,\n    href: \"/qr-generator\",\n    color: \"from-indigo-500 to-purple-600\",\n    available: true,\n    category: \"utilities\",\n    new: true,\n    features: [\"Custom colors\", \"Logo embedding\", \"Bulk generation\", \"Various formats\"],\n    extendedDescription: \"Create professional QR codes instantly for URLs, WiFi, contact info, and more. Customize colors and sizes, download in multiple formats. Perfect for marketing materials and business cards.\"\n  },\n  {\n    id: \"password-generator\",\n    title: \"Password Generator\",\n    description: \"Create strong, secure passwords\",\n    icon: Shield,\n    href: \"/password-generator\",\n    color: \"from-emerald-500 to-teal-600\",\n    available: true,\n    category: \"utilities\",\n    new: true,\n    features: [\"Custom length\", \"Special characters\", \"Pronounceable\", \"Strength meter\"],\n    extendedDescription: \"Generate ultra-secure passwords with customizable complexity. Include symbols, numbers, and mixed case. Features password strength analysis and easy copy-to-clipboard functionality.\"\n  },\n  {\n    id: \"extract-text\",\n    title: \"Extract Text (OCR)\",\n    description: \"Extract text from images using OCR\",\n    icon: ScanLine,\n    href: \"/extract-text\",\n    color: \"from-cyan-500 to-blue-500\",\n    available: true,\n    category: \"utilities\",\n    new: true,\n    features: [\"Multiple languages\", \"Batch processing\", \"Handwriting recognition\", \"Export formats\"],\n    extendedDescription: \"Extract text from images, scanned documents, and photos using advanced OCR technology. Supports 100+ languages and handwritten text. Export to Word, PDF, or plain text formats.\"\n  },\n  {\n    id: \"pdf-to-zip\",\n    title: \"PDF to ZIP\",\n    description: \"Bundle multiple PDFs into a compressed ZIP archive\",\n    icon: FileArchive,\n    href: \"/pdf-to-zip\",\n    color: \"from-indigo-500 to-purple-500\",\n    available: false,\n    category: \"utilities\",\n    features: [\"Batch compression\", \"Folder structure\", \"Size reduction\", \"Password protection\"],\n    extendedDescription: \"Combine multiple PDF files into a single compressed ZIP archive for easy sharing and storage. Reduces overall file size while maintaining organization.\"\n  },\n  {\n    id: \"base64-encoder\",\n    title: \"Base64 Encoder\",\n    description: \"Encode and decode Base64 strings\",\n    icon: FileCode,\n    href: \"/base64-encoder\",\n    color: \"from-amber-500 to-orange-500\",\n    available: false,\n    category: \"utilities\"\n  },\n  {\n    id: \"url-shortener\",\n    title: \"URL Shortener\",\n    description: \"Create short links for long URLs\",\n    icon: Globe,\n    href: \"/url-shortener\",\n    color: \"from-blue-500 to-indigo-500\",\n    available: false,\n    category: \"utilities\"\n  },\n  {\n    id: \"email-validator\",\n    title: \"Email Validator\",\n    description: \"Validate and verify email addresses\",\n    icon: Mail,\n    href: \"/email-validator\",\n    color: \"from-green-500 to-teal-500\",\n    available: false,\n    category: \"utilities\"\n  }\n];\n\n// Tool categories for navigation\nexport const toolCategories: ToolCategory[] = [\n  {\n    id: \"pdf-management\",\n    name: \"PDF Management\",\n    description: \"Edit, organize, and manipulate PDF files\",\n    icon: FileText,\n    tools: allTools.filter(tool => tool.category === \"pdf-management\")\n  },\n  {\n    id: \"image-conversion\",\n    name: \"Image Conversion\",\n    description: \"Convert between images and PDF formats\",\n    icon: Image,\n    tools: allTools.filter(tool => tool.category === \"image-conversion\")\n  },\n  {\n    id: \"document-conversion\",\n    name: \"Document Conversion\",\n    description: \"Convert between document formats\",\n    icon: FileText,\n    tools: allTools.filter(tool => tool.category === \"document-conversion\")\n  },\n  {\n    id: \"ebook-conversion\",\n    name: \"eBook Conversion\",\n    description: \"Convert between eBook formats\",\n    icon: Book,\n    tools: allTools.filter(tool => tool.category === \"ebook-conversion\")\n  },\n  {\n    id: \"security\",\n    name: \"Security\",\n    description: \"Protect and secure your documents\",\n    icon: Shield,\n    tools: allTools.filter(tool => tool.category === \"security\")\n  },\n  {\n    id: \"utilities\",\n    name: \"Utilities\",\n    description: \"Additional helpful tools\",\n    icon: Zap,\n    tools: allTools.filter(tool => tool.category === \"utilities\")\n  }\n];\n\n// Get popular tools\nexport const popularTools = allTools.filter(tool => tool.popular);\n\n// Get available tools\nexport const availableTools = allTools.filter(tool => tool.available);\n\n// Get coming soon tools\nexport const comingSoonTools = allTools.filter(tool => !tool.available);\n\n// Get new tools\nexport const newTools = allTools.filter(tool => tool.new);\n\n// Search tools function\nexport function searchTools(query: string): Tool[] {\n  const searchTerm = query.toLowerCase();\n  return allTools.filter(tool => \n    tool.title.toLowerCase().includes(searchTerm) ||\n    tool.description.toLowerCase().includes(searchTerm) ||\n    tool.category.toLowerCase().includes(searchTerm)\n  );\n}\n\n// Get tool by ID\nexport function getToolById(id: string): Tool | undefined {\n  return allTools.find(tool => tool.id === id);\n}\n\n// Get tools by category\nexport function getToolsByCategory(categoryId: string): Tool[] {\n  return allTools.filter(tool => tool.category === categoryId);\n}\n\n// Stats for the platform\nexport const platformStats = {\n  totalTools: allTools.length,\n  availableTools: availableTools.length,\n  comingSoonTools: comingSoonTools.length,\n  categories: toolCategories.length,\n  popularTools: popularTools.length\n};","size_bytes":23073},"client/src/pages/all-tools.tsx":{"content":"import { useState, useMemo, useEffect } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { allTools, toolCategories } from \"@/lib/tools-data\";\nimport { Link } from \"wouter\";\nimport { Card } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { \n  Search, \n  Star, \n  Sparkles, \n  ArrowRight,\n  Check,\n  Clock,\n  Filter,\n  Grid3x3,\n  List,\n  ChevronDown\n} from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\nimport { HowItWorksSection } from \"@/components/seo/tool-features\";\nimport { ToolFAQ } from \"@/components/seo/tool-faq\";\nimport { Tabs, TabsList, TabsTrigger, TabsContent } from \"@/components/ui/tabs\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\n\nconst ToolCard = ({ tool, view }: { tool: any; view: 'grid' | 'list' }) => {\n  const Icon = tool.icon;\n  \n  const cardContent = (\n    <motion.div\n      whileHover={tool.available ? { scale: 1.02, y: -3 } : {}}\n      whileTap={tool.available ? { scale: 0.98 } : {}}\n      className=\"h-full\"\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.3 }}\n    >\n      <Card className={cn(\n        \"relative h-full transition-all duration-300 cursor-pointer group overflow-hidden rounded-lg\",\n        view === 'grid' ? \"p-6 min-h-[240px]\" : \"p-6\",\n        \"hover:shadow-xl hover:border-primary/30\",\n        !tool.available && \"opacity-60 cursor-not-allowed hover:opacity-60\"\n      )} data-testid={`tool-card-${tool.id}`}>\n        {/* Background Gradient */}\n        <div className={cn(\n          \"absolute inset-0 opacity-0 group-hover:opacity-100 transition-all duration-500\",\n          \"bg-gradient-to-br\",\n          tool.color\n        )} style={{ opacity: 0.03 }}></div>\n        \n        {/* Badges */}\n        <div className=\"absolute top-3 right-3 flex gap-2\">\n          {tool.new && (\n            <Badge className=\"bg-green-500/10 text-green-600 dark:text-green-400 border-green-500/30 text-xs\">\n              <Sparkles className=\"w-3 h-3 mr-1\" />\n              New\n            </Badge>\n          )}\n          {tool.popular && (\n            <Badge className=\"bg-primary/10 text-primary border-primary/30 text-xs\">\n              <Star className=\"w-3 h-3 mr-1\" />\n              Popular\n            </Badge>\n          )}\n          {!tool.available && (\n            <Badge variant=\"secondary\" className=\"text-xs\">\n              <Clock className=\"w-3 h-3 mr-1\" />\n              Soon\n            </Badge>\n          )}\n        </div>\n        \n        {view === 'grid' ? (\n          <div className=\"relative\">\n            {/* Icon with gradient background */}\n            <div className={cn(\n              \"w-14 h-14 mb-4 rounded-xl flex items-center justify-center\",\n              \"bg-gradient-to-br\",\n              tool.color,\n              \"shadow-lg\"\n            )}>\n              <Icon className=\"w-8 h-8 text-white\" />\n            </div>\n            \n            {/* Content */}\n            <h3 className=\"font-semibold text-lg mb-2 group-hover:text-primary transition-colors line-clamp-1\">\n              {tool.title}\n            </h3>\n            <p className=\"text-sm text-muted-foreground truncate-3 mb-3\">\n              {tool.extendedDescription || tool.description}\n            </p>\n            \n            {/* Extended Description for SEO and better UX */}\n            <div className=\"text-xs text-muted-foreground/80 space-y-1\">\n              {tool.features && tool.features.length > 0 && (\n                <div className=\"flex flex-wrap gap-1\">\n                  {tool.features.slice(0, 3).map((feature: string, index: number) => (\n                    <span key={index} className=\"inline-flex items-center gap-1\">\n                      <Check className=\"w-3 h-3 text-green-500\" />\n                      <span>{feature}</span>\n                    </span>\n                  ))}\n                </div>\n              )}\n              {tool.category && (\n                <p className=\"text-xs opacity-70 mt-2\">\n                  Category: {toolCategories.find(c => c.id === tool.category)?.name}\n                </p>\n              )}\n            </div>\n            \n            {/* Action Button */}\n            {tool.available && (\n              <div className=\"absolute bottom-3 right-3 opacity-0 group-hover:opacity-100 transition-opacity\">\n                <ArrowRight className=\"w-5 h-5 text-primary\" />\n              </div>\n            )}\n          </div>\n        ) : (\n          <div className=\"flex items-center gap-4\">\n            {/* Icon */}\n            <div className={cn(\n              \"w-12 h-12 rounded-lg flex items-center justify-center flex-shrink-0\",\n              \"bg-gradient-to-br\",\n              tool.color,\n              \"shadow-md\"\n            )}>\n              <Icon className=\"w-6 h-6 text-white\" />\n            </div>\n            \n            {/* Content */}\n            <div className=\"flex-1 min-w-0\">\n              <h3 className=\"font-semibold text-base mb-1 group-hover:text-primary transition-colors line-clamp-1\">\n                {tool.title}\n              </h3>\n              <p className=\"text-sm text-muted-foreground truncate-2\">\n                {tool.extendedDescription || tool.description}\n              </p>\n            </div>\n            \n            {/* Arrow */}\n            {tool.available && (\n              <ArrowRight className=\"w-5 h-5 text-muted-foreground group-hover:text-primary transition-colors flex-shrink-0\" />\n            )}\n          </div>\n        )}\n      </Card>\n    </motion.div>\n  );\n  \n  return tool.available ? (\n    <Link \n      href={tool.href}\n      className=\"block h-full focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2 rounded-lg\"\n    >\n      {cardContent}\n    </Link>\n  ) : (\n    <div\n      className=\"h-full rounded-lg\"\n      aria-label={`${tool.title} - Coming soon`}\n      aria-disabled=\"true\"\n    >\n      {cardContent}\n    </div>\n  );\n};\n\nexport default function AllToolsPage() {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(\"all\");\n  const [viewMode, setViewMode] = useState<'grid' | 'list'>('grid');\n  const [sortBy, setSortBy] = useState<'name' | 'category' | 'status'>('category');\n  const [statusFilter, setStatusFilter] = useState<'all' | 'available' | 'soon'>('all');\n  \n  // Check URL params on mount for category selection and scroll\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const categoryParam = params.get('category');\n    if (categoryParam === 'available') {\n      setSelectedCategory('available');\n      setStatusFilter('available');\n    } else if (categoryParam && toolCategories.some(cat => cat.id === categoryParam)) {\n      setSelectedCategory(categoryParam);\n      // Scroll to the category section after a short delay to ensure DOM is ready\n      setTimeout(() => {\n        const categoryElement = document.getElementById(`category-${categoryParam}`);\n        if (categoryElement) {\n          categoryElement.scrollIntoView({ behavior: 'smooth', block: 'start' });\n        }\n      }, 100);\n    }\n  }, []);\n  \n  // Filter and sort tools\n  const filteredTools = useMemo(() => {\n    let tools = allTools;\n    \n    // Filter by search query\n    if (searchQuery) {\n      tools = tools.filter(tool => \n        tool.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        tool.description.toLowerCase().includes(searchQuery.toLowerCase())\n      );\n    }\n    \n    // Filter by category\n    if (selectedCategory === \"available\") {\n      tools = tools.filter(tool => tool.available === true);\n    } else if (selectedCategory !== \"all\") {\n      tools = tools.filter(tool => tool.category === selectedCategory);\n    }\n    \n    // Filter by status\n    if (statusFilter !== 'all') {\n      tools = tools.filter(tool => \n        statusFilter === 'available' ? tool.available : !tool.available\n      );\n    }\n    \n    // Sort tools\n    switch (sortBy) {\n      case 'name':\n        tools = [...tools].sort((a, b) => a.title.localeCompare(b.title));\n        break;\n      case 'status':\n        tools = [...tools].sort((a, b) => {\n          if (a.available === b.available) return 0;\n          return a.available ? -1 : 1;\n        });\n        break;\n      case 'category':\n      default:\n        // Keep original order (grouped by category)\n        break;\n    }\n    \n    return tools;\n  }, [searchQuery, selectedCategory, sortBy, statusFilter]);\n  \n  // Group tools by category for display\n  const groupedTools = useMemo(() => {\n    if (sortBy !== 'category' || selectedCategory !== 'all') {\n      return null;\n    }\n    \n    const groups: Record<string, typeof allTools> = {};\n    filteredTools.forEach(tool => {\n      if (!groups[tool.category]) {\n        groups[tool.category] = [];\n      }\n      groups[tool.category].push(tool);\n    });\n    \n    return groups;\n  }, [filteredTools, sortBy, selectedCategory]);\n  \n  const availableToolsCount = allTools.filter(t => t.available).length;\n  const totalToolsCount = allTools.length;\n  \n  return (\n    <div className=\"min-h-screen relative\">\n      {/* Hero background gradient */}\n      <div className=\"absolute inset-0 hero-gradient -z-10\" />\n      \n      {/* Hero Section */}\n      <section className=\"relative pt-20 pb-16\">\n        <div className=\"container-section relative z-10\">\n          <motion.div \n            className=\"text-center max-w-4xl mx-auto\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5 }}\n          >\n            <Badge className=\"mb-4 bg-gradient-to-r from-primary/20 to-secondary/20 text-primary border-primary/30\">\n              <Sparkles className=\"w-3 h-3 mr-1\" />\n              {availableToolsCount} Tools Available • {totalToolsCount - availableToolsCount} Coming Soon\n            </Badge>\n            \n            <h1 className=\"text-4xl sm:text-5xl lg:text-6xl font-bold mb-6\">\n              <span className=\"gradient-text\">All Tools</span> at Your Fingertips\n            </h1>\n            \n            <p className=\"text-xl text-muted-foreground mb-8 leading-relaxed\">\n              Explore our complete collection of privacy-first tools. Every tool processes your files locally \n              in your browser - nothing is ever uploaded to servers.\n            </p>\n            \n            {/* Search Bar */}\n            <div className=\"max-w-2xl mx-auto mb-8\">\n              <div className=\"relative\">\n                <Search className=\"absolute left-4 top-1/2 -translate-y-1/2 w-5 h-5 text-muted-foreground\" />\n                <Input\n                  type=\"text\"\n                  placeholder=\"Search tools... (e.g., PDF, compress, convert)\"\n                  className=\"pl-12 pr-4 py-6 text-lg rounded-xl bg-background/80 backdrop-blur-sm border-primary/20\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  data-testid=\"input-search-tools\"\n                />\n              </div>\n            </div>\n            \n            {/* Controls Bar */}\n            <div className=\"flex flex-wrap items-center justify-center gap-4 mb-8\">\n              {/* Category Filter */}\n              <Select value={selectedCategory} onValueChange={setSelectedCategory}>\n                <SelectTrigger className=\"w-[200px]\" data-testid=\"select-category\">\n                  <Filter className=\"w-4 h-4 mr-2\" />\n                  <SelectValue placeholder=\"All Categories\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">All Categories</SelectItem>\n                  <SelectItem value=\"available\" className=\"font-semibold text-green-600 dark:text-green-400\">\n                    ✅ Available Tools ({allTools.filter(t => t.available).length})\n                  </SelectItem>\n                  {toolCategories.map((category) => (\n                    <SelectItem key={category.id} value={category.id}>\n                      {category.name} ({category.tools.length})\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n              \n              {/* Status Filter */}\n              <Select value={statusFilter} onValueChange={(value: 'all' | 'available' | 'soon') => setStatusFilter(value)}>\n                <SelectTrigger className=\"w-[180px]\" data-testid=\"select-status-filter\">\n                  <SelectValue placeholder=\"Filter by status\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\" data-testid=\"filter-all\">All Tools</SelectItem>\n                  <SelectItem value=\"available\" data-testid=\"filter-available\">Available</SelectItem>\n                  <SelectItem value=\"soon\" data-testid=\"filter-soon\">Coming Soon</SelectItem>\n                </SelectContent>\n              </Select>\n              \n              {/* Sort By */}\n              <Select value={sortBy} onValueChange={(value: any) => setSortBy(value)}>\n                <SelectTrigger className=\"w-[180px]\" data-testid=\"select-sort\">\n                  <SelectValue placeholder=\"Sort by\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"category\">By Category</SelectItem>\n                  <SelectItem value=\"name\">By Name</SelectItem>\n                  <SelectItem value=\"status\">By Status</SelectItem>\n                </SelectContent>\n              </Select>\n              \n              {/* View Mode */}\n              <div className=\"flex items-center gap-2 border rounded-lg p-1\">\n                <Button\n                  variant={viewMode === 'grid' ? 'default' : 'ghost'}\n                  size=\"sm\"\n                  onClick={() => setViewMode('grid')}\n                  className=\"px-3\"\n                  data-testid=\"button-view-grid\"\n                >\n                  <Grid3x3 className=\"w-4 h-4\" />\n                </Button>\n                <Button\n                  variant={viewMode === 'list' ? 'default' : 'ghost'}\n                  size=\"sm\"\n                  onClick={() => setViewMode('list')}\n                  className=\"px-3\"\n                  data-testid=\"button-view-list\"\n                >\n                  <List className=\"w-4 h-4\" />\n                </Button>\n              </div>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n      \n      {/* Tools Grid/List */}\n      <section className=\"py-12 relative z-10\">\n        <div className=\"container mx-auto px-4 sm:px-6 lg:px-8\">\n          <AnimatePresence mode=\"wait\">\n            {groupedTools && sortBy === 'category' && selectedCategory === 'all' ? (\n              // Grouped by Category View\n              <motion.div \n                key=\"grouped\"\n                className=\"space-y-12\"\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                exit={{ opacity: 0 }}\n              >\n                {toolCategories.map((category) => {\n                  const categoryTools = groupedTools[category.id] || [];\n                  if (categoryTools.length === 0) return null;\n                  \n                  return (\n                    <div key={category.id} id={`category-${category.id}`} className=\"space-y-6 scroll-mt-20\">\n                      <div className=\"flex items-center gap-3\">\n                        <category.icon className=\"w-6 h-6 text-primary\" />\n                        <h2 className=\"text-2xl font-bold\">{category.name}</h2>\n                        <Badge variant=\"secondary\" className=\"ml-2\">\n                          {categoryTools.length} tools\n                        </Badge>\n                      </div>\n                      \n                      <div className={cn(\n                        viewMode === 'grid' \n                          ? \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\"\n                          : \"space-y-3\"\n                      )}>\n                        {categoryTools.map((tool) => (\n                          <ToolCard key={tool.id} tool={tool} view={viewMode} />\n                        ))}\n                      </div>\n                    </div>\n                  );\n                })}\n              </motion.div>\n            ) : (\n              // Flat View\n              <motion.div \n                key=\"flat\"\n                className={cn(\n                  viewMode === 'grid' \n                    ? \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\"\n                    : \"space-y-3\"\n                )}\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                exit={{ opacity: 0 }}\n              >\n                {filteredTools.map((tool) => (\n                  <ToolCard key={tool.id} tool={tool} view={viewMode} />\n                ))}\n              </motion.div>\n            )}\n          </AnimatePresence>\n          \n          {/* No Results */}\n          {filteredTools.length === 0 && (\n            <motion.div \n              className=\"text-center py-20\"\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n            >\n              <p className=\"text-xl text-muted-foreground\">\n                No tools found matching your criteria. Try adjusting your filters.\n              </p>\n            </motion.div>\n          )}\n        </div>\n      </section>\n      \n      {/* Tool Highlights section can be added later */}\n      \n      {/* How It Works */}\n      <HowItWorksSection\n        toolName=\"All Tools\"\n        steps={[\n          {\n            number: 1,\n            title: \"Browse Tools\",\n            description: \"Explore our collection of 60+ tools organized by category\",\n            icon: Search\n          },\n          {\n            number: 2,\n            title: \"Select Your Tool\",\n            description: \"Click on any available tool to start using it instantly\",\n            icon: Grid3x3\n          },\n          {\n            number: 3,\n            title: \"Process Locally\",\n            description: \"All processing happens in your browser for 100% privacy\",\n            icon: Check\n          }\n        ]}\n      />\n      \n      {/* FAQ Section */}\n      <ToolFAQ\n        toolName=\"All Tools\"\n        toolPath=\"/all-tools\"\n        faqs={[\n          {\n            question: \"Are all tools free to use?\",\n            answer: \"Yes! All available tools on AltafToolsHub are completely free to use with no hidden charges or subscriptions.\"\n          },\n          {\n            question: \"Do I need to create an account?\",\n            answer: \"No account needed! All tools work instantly without any sign-up or login requirements.\"\n          },\n          {\n            question: \"Is my data safe?\",\n            answer: \"Absolutely! All file processing happens locally in your browser. Your files never leave your device or get uploaded to any server.\"\n          },\n          {\n            question: \"When will more tools be available?\",\n            answer: \"We're constantly working on new tools! Check back regularly or follow us for updates on new tool releases.\"\n          },\n          {\n            question: \"Can I use these tools on mobile?\",\n            answer: \"Yes! All our tools are responsive and work on mobile devices, tablets, and desktop computers.\"\n          }\n        ]}\n      />\n    </div>\n  );\n}","size_bytes":19575},"client/src/hooks/use-navigation-memory.ts":{"content":"import { useEffect, useRef } from 'react';\nimport { useLocation } from 'wouter';\n\ninterface PageState {\n  path: string;\n  scrollY: number;\n  timestamp: number;\n}\n\n// Store for page states\nconst pageStates = new Map<string, PageState>();\nconst MAX_HISTORY = 50; // Maximum number of pages to remember\n\n// Persist current page to localStorage\nconst CURRENT_PAGE_KEY = 'altaftoolshub_current_page';\nconst SCROLL_POSITIONS_KEY = 'altaftoolshub_scroll_positions';\n\n// Load saved scroll positions from localStorage on startup\nif (typeof window !== 'undefined') {\n  const savedPositions = localStorage.getItem(SCROLL_POSITIONS_KEY);\n  if (savedPositions) {\n    try {\n      const positions = JSON.parse(savedPositions);\n      Object.entries(positions).forEach(([path, state]: [string, any]) => {\n        pageStates.set(path, state);\n      });\n    } catch (e) {\n      console.error('Failed to load scroll positions:', e);\n    }\n  }\n}\n\nexport function useNavigationMemory() {\n  const [location, navigate] = useLocation();\n  const previousLocationRef = useRef<string>('');\n  const restoringScrollRef = useRef(false);\n  const hasRestoredRef = useRef(false);\n\n  // On initial load, check if we should restore to a different page\n  useEffect(() => {\n    if (!hasRestoredRef.current) {\n      hasRestoredRef.current = true;\n      const savedPage = localStorage.getItem(CURRENT_PAGE_KEY);\n      if (savedPage && savedPage !== location && savedPage !== '/') {\n        // Navigate to the saved page\n        navigate(savedPage);\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    // Save current page to localStorage\n    if (location) {\n      localStorage.setItem(CURRENT_PAGE_KEY, location);\n    }\n\n    // Save scroll position when leaving a page\n    const handleBeforeUnload = () => {\n      if (previousLocationRef.current) {\n        pageStates.set(previousLocationRef.current, {\n          path: previousLocationRef.current,\n          scrollY: window.scrollY,\n          timestamp: Date.now()\n        });\n      }\n      \n      // Save all scroll positions to localStorage\n      const positions: Record<string, PageState> = {};\n      pageStates.forEach((value, key) => {\n        positions[key] = value;\n      });\n      localStorage.setItem(SCROLL_POSITIONS_KEY, JSON.stringify(positions));\n    };\n\n    // Save scroll position periodically\n    const handleScroll = () => {\n      if (!restoringScrollRef.current && location) {\n        pageStates.set(location, {\n          path: location,\n          scrollY: window.scrollY,\n          timestamp: Date.now()\n        });\n        \n        // Also save to localStorage periodically\n        const positions: Record<string, PageState> = {};\n        pageStates.forEach((value, key) => {\n          positions[key] = value;\n        });\n        localStorage.setItem(SCROLL_POSITIONS_KEY, JSON.stringify(positions));\n      }\n    };\n\n    // Debounce scroll handler\n    let scrollTimeout: NodeJS.Timeout;\n    const debouncedScroll = () => {\n      clearTimeout(scrollTimeout);\n      scrollTimeout = setTimeout(handleScroll, 100);\n    };\n\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    window.addEventListener('scroll', debouncedScroll);\n\n    // Cleanup old entries if too many\n    if (pageStates.size > MAX_HISTORY) {\n      const sortedEntries = Array.from(pageStates.entries())\n        .sort((a, b) => b[1].timestamp - a[1].timestamp);\n      pageStates.clear();\n      sortedEntries.slice(0, MAX_HISTORY).forEach(([key, value]) => {\n        pageStates.set(key, value);\n      });\n    }\n\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n      window.removeEventListener('scroll', debouncedScroll);\n      clearTimeout(scrollTimeout);\n    };\n  }, [location]);\n\n  useEffect(() => {\n    // Save previous location's scroll position\n    if (previousLocationRef.current && previousLocationRef.current !== location) {\n      const scrollY = window.scrollY;\n      pageStates.set(previousLocationRef.current, {\n        path: previousLocationRef.current,\n        scrollY,\n        timestamp: Date.now()\n      });\n    }\n\n    // Restore scroll position for current location\n    const savedState = pageStates.get(location);\n    if (savedState && location === savedState.path) {\n      restoringScrollRef.current = true;\n      \n      // Use requestAnimationFrame for smoother restoration\n      requestAnimationFrame(() => {\n        window.scrollTo({\n          top: savedState.scrollY,\n          behavior: 'instant' as ScrollBehavior\n        });\n        \n        // Reset flag after a small delay\n        setTimeout(() => {\n          restoringScrollRef.current = false;\n        }, 100);\n      });\n    }\n\n    previousLocationRef.current = location;\n  }, [location]);\n\n  return {\n    clearHistory: () => pageStates.clear(),\n    getHistory: () => Array.from(pageStates.values())\n  };\n}","size_bytes":4831},"client/src/pages/add-page-number.tsx":{"content":"import { useState, useCallback } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Input } from \"@/components/ui/input\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useSEO } from \"@/hooks/use-seo\";\nimport { Hash, Upload, Download, FileText, Loader2, ArrowLeft, Shield } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport FileUpload from \"@/components/ui/file-upload\";\nimport { PDFDocument, rgb, StandardFonts } from \"pdf-lib\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { Label } from \"@/components/ui/label\";\nimport { Slider } from \"@/components/ui/slider\";\nimport * as pdfjsLib from 'pdfjs-dist';\nimport { ContactSupportSection } from \"@/components/contact-support\";\n\n// Configure PDF.js worker - using local worker for privacy\npdfjsLib.GlobalWorkerOptions.workerSrc = '/pdf.worker.min.mjs';\n\ntype Position = 'top-left' | 'top-center' | 'top-right' | 'bottom-left' | 'bottom-center' | 'bottom-right';\ntype Format = 'numeric' | 'page-of-total' | 'roman' | 'alphabetic';\n\nexport default function AddPageNumber() {\n  const [pdfFile, setPdfFile] = useState<File | null>(null);\n  const [pdfDoc, setPdfDoc] = useState<PDFDocument | null>(null);\n  const [position, setPosition] = useState<Position>('bottom-center');\n  const [format, setFormat] = useState<Format>('page-of-total');\n  const [startNumber, setStartNumber] = useState(1);\n  const [fontSize, setFontSize] = useState([12]);\n  const [margin, setMargin] = useState([30]);\n  const [prefix, setPrefix] = useState(\"\");\n  const [suffix, setSuffix] = useState(\"\");\n  const [previewUrl, setPreviewUrl] = useState<string>(\"\");\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [numberedPdf, setNumberedPdf] = useState<Uint8Array | null>(null);\n  const { toast } = useToast();\n\n  const structuredData = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebApplication\",\n    \"name\": \"Add Page Numbers to PDF - AltafToolsHub\",\n    \"description\": \"Free online tool to add page numbers to PDF documents\",\n    \"url\": \"https://www.altaftoolshub.com/add-page-number\",\n    \"applicationCategory\": \"BusinessApplication\",\n    \"operatingSystem\": \"Any\",\n    \"offers\": {\n      \"@type\": \"Offer\",\n      \"price\": \"0\",\n      \"priceCurrency\": \"USD\"\n    },\n    \"aggregateRating\": {\n      \"@type\": \"AggregateRating\",\n      \"ratingValue\": \"4.8\",\n      \"ratingCount\": \"1265\"\n    }\n  };\n\n  useSEO({\n    title: \"Add Page Numbers to PDF Online Free - Customize Position & Format | AltafToolsHub\",\n    description: \"Free online tool to add page numbers to PDF documents. Choose position, format, font size, and custom text. 100% client-side processing.\",\n    path: \"/add-page-number\",\n    keywords: \"add page numbers pdf, pdf page numbering, number pdf pages, pdf page counter, page numbers tool\",\n    ogImage: \"https://www.altaftoolshub.com/og-add-page-number.png\",\n    structuredData: [structuredData],\n    additionalMetaTags: [\n      { name: \"application-name\", content: \"PDF Page Number Tool - AltafToolsHub\" },\n      { property: \"article:section\", content: \"PDF Tools\" }\n    ]\n  });\n\n  const generatePreview = async (file: File) => {\n    try {\n      const arrayBuffer = await file.arrayBuffer();\n      const pdf = await pdfjsLib.getDocument(arrayBuffer).promise;\n      const page = await pdf.getPage(1);\n      const viewport = page.getViewport({ scale: 1.0 });\n      \n      const canvas = document.createElement('canvas');\n      const context = canvas.getContext('2d');\n      if (!context) return \"\";\n      \n      canvas.height = viewport.height;\n      canvas.width = viewport.width;\n      \n      await page.render({\n        canvasContext: context,\n        viewport: viewport,\n        intent: 'display'\n      } as any).promise;\n      \n      // Draw preview page number\n      context.fillStyle = 'red';\n      context.font = `${fontSize[0] * 2}px Arial`;\n      const text = formatPageNumber(1, 10);\n      const coords = getPositionCoordinates(canvas.width, canvas.height, context.measureText(text).width);\n      context.fillText(text, coords.x, coords.y);\n      \n      return canvas.toDataURL('image/jpeg', 0.9);\n    } catch (error) {\n      console.error('Error generating preview:', error);\n      return \"\";\n    }\n  };\n\n  const handleFileUpload = useCallback(async (file: File) => {\n    if (file.type !== 'application/pdf') {\n      toast({\n        title: \"Invalid File\",\n        description: \"Please upload a PDF file\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    try {\n      setProgress(10);\n      const arrayBuffer = await file.arrayBuffer();\n      const doc = await PDFDocument.load(arrayBuffer);\n      \n      setPdfFile(file);\n      setPdfDoc(doc);\n      setNumberedPdf(null);\n      \n      // Generate preview\n      setProgress(50);\n      const preview = await generatePreview(file);\n      setPreviewUrl(preview);\n      setProgress(0);\n      \n      toast({\n        title: \"File Loaded\",\n        description: `PDF loaded with ${doc.getPageCount()} pages`,\n      });\n    } catch (error) {\n      setProgress(0);\n      toast({\n        title: \"Error\",\n        description: \"Failed to load PDF file\",\n        variant: \"destructive\"\n      });\n    }\n  }, [fontSize, toast]);\n\n  const formatPageNumber = (pageNum: number, total: number): string => {\n    let formatted = \"\";\n    \n    switch (format) {\n      case 'numeric':\n        formatted = `${pageNum}`;\n        break;\n      case 'page-of-total':\n        formatted = `${pageNum} of ${total}`;\n        break;\n      case 'roman':\n        formatted = toRoman(pageNum);\n        break;\n      case 'alphabetic':\n        formatted = toAlphabetic(pageNum);\n        break;\n    }\n    \n    return `${prefix}${formatted}${suffix}`;\n  };\n\n  const toRoman = (num: number): string => {\n    const romanNumerals: [number, string][] = [\n      [1000, 'M'], [900, 'CM'], [500, 'D'], [400, 'CD'],\n      [100, 'C'], [90, 'XC'], [50, 'L'], [40, 'XL'],\n      [10, 'X'], [9, 'IX'], [5, 'V'], [4, 'IV'], [1, 'I']\n    ];\n    let result = '';\n    for (const [value, numeral] of romanNumerals) {\n      while (num >= value) {\n        result += numeral;\n        num -= value;\n      }\n    }\n    return result.toLowerCase();\n  };\n\n  const toAlphabetic = (num: number): string => {\n    let result = '';\n    while (num > 0) {\n      num--;\n      result = String.fromCharCode(65 + (num % 26)) + result;\n      num = Math.floor(num / 26);\n    }\n    return result;\n  };\n\n  const getPositionCoordinates = (pageWidth: number, pageHeight: number, textWidth: number) => {\n    const m = margin[0];\n    const positions = {\n      'top-left': { x: m, y: m },\n      'top-center': { x: (pageWidth - textWidth) / 2, y: m },\n      'top-right': { x: pageWidth - textWidth - m, y: m },\n      'bottom-left': { x: m, y: pageHeight - m },\n      'bottom-center': { x: (pageWidth - textWidth) / 2, y: pageHeight - m },\n      'bottom-right': { x: pageWidth - textWidth - m, y: pageHeight - m }\n    };\n    return positions[position];\n  };\n\n  const addPageNumbers = async () => {\n    if (!pdfDoc || !pdfFile) {\n      toast({\n        title: \"No file loaded\",\n        description: \"Please upload a PDF file first\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    setIsProcessing(true);\n    setProgress(0);\n\n    try {\n      const font = await pdfDoc.embedFont(StandardFonts.Helvetica);\n      const totalPages = pdfDoc.getPageCount();\n\n      for (let i = 0; i < totalPages; i++) {\n        setProgress(Math.round(((i + 0.5) / totalPages) * 100));\n        \n        const page = pdfDoc.getPage(i);\n        const { width, height } = page.getSize();\n        \n        const pageNumber = startNumber + i;\n        const text = formatPageNumber(pageNumber, totalPages);\n        const textWidth = font.widthOfTextAtSize(text, fontSize[0]);\n        const coords = getPositionCoordinates(width, height, textWidth);\n        \n        page.drawText(text, {\n          x: coords.x,\n          y: coords.y,\n          size: fontSize[0],\n          font: font,\n          color: rgb(0, 0, 0)\n        });\n        \n        setProgress(Math.round(((i + 1) / totalPages) * 100));\n      }\n\n      const pdfBytes = await pdfDoc.save();\n      setNumberedPdf(pdfBytes);\n      \n      toast({\n        title: \"Success!\",\n        description: \"Page numbers added successfully\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to add page numbers\",\n        variant: \"destructive\"\n      });\n    } finally {\n      setIsProcessing(false);\n      setProgress(0);\n    }\n  };\n\n  const downloadNumberedPdf = () => {\n    if (!numberedPdf || !pdfFile) return;\n    \n    const blob = new Blob([numberedPdf], { type: 'application/pdf' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = pdfFile.name.replace('.pdf', '_numbered.pdf');\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  const reset = () => {\n    setPdfFile(null);\n    setPdfDoc(null);\n    setNumberedPdf(null);\n    setPreviewUrl(\"\");\n    setProgress(0);\n  };\n\n  return (\n    <div className=\"min-h-screen pattern-bg\">\n      <div className=\"container mx-auto px-4 py-6\">\n        {/* Breadcrumbs */}\n        <nav className=\"flex text-sm text-muted-foreground mb-6\" aria-label=\"Breadcrumb\">\n          <Link href=\"/\" className=\"hover:text-primary transition-colors\">Home</Link>\n          <span className=\"mx-2\">/</span>\n          <Link href=\"/all-tools?category=pdf-management\" className=\"hover:text-primary transition-colors\">PDF Tools</Link>\n          <span className=\"mx-2\">/</span>\n          <span className=\"text-foreground\">Add Page Numbers</span>\n        </nav>\n\n        <Link href=\"/all-tools?category=pdf-management\">\n          <Button variant=\"ghost\" className=\"mb-4\">\n            <ArrowLeft className=\"w-4 h-4 mr-2\" />\n            Back to PDF Tools\n          </Button>\n        </Link>\n\n        <div className=\"max-w-6xl mx-auto\">\n          <div className=\"text-center mb-8\">\n            <h1 className=\"text-4xl font-bold mb-4\">\n              Add <span className=\"gradient-text\">Page Numbers</span>\n            </h1>\n            <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n              Add customizable page numbers to your PDF documents. \n              Choose position, format, and style for professional pagination.\n            </p>\n          </div>\n\n          {/* Privacy Notice */}\n          <Alert className=\"mb-6\">\n            <Shield className=\"w-4 h-4\" />\n            <AlertDescription>\n              Your PDFs are processed entirely in your browser. Files never leave your device.\n            </AlertDescription>\n          </Alert>\n\n          <Card className=\"p-8 mb-8\">\n            {!numberedPdf ? (\n              <>\n                {!pdfFile ? (\n                  <FileUpload\n                    accept=\"application/pdf\"\n                    onFileSelect={handleFileUpload}\n                    className=\"h-48\"\n                    title=\"Drop PDF file here or click to select\"\n                    description=\"Select a PDF to add page numbers\"\n                  />\n                ) : (\n                  <>\n                    {progress > 0 && progress < 100 && !isProcessing && (\n                      <div className=\"mb-6\">\n                        <Progress value={progress} className=\"h-2\" />\n                        <p className=\"text-sm text-center mt-2 text-muted-foreground\">\n                          Loading PDF... {progress}%\n                        </p>\n                      </div>\n                    )}\n\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n                      {previewUrl && (\n                        <div>\n                          <h3 className=\"font-medium mb-3\">Preview</h3>\n                          <div className=\"border rounded-lg overflow-hidden bg-muted/50\">\n                            <img \n                              src={previewUrl} \n                              alt=\"PDF Preview with page number\" \n                              className=\"w-full h-auto\"\n                            />\n                          </div>\n                        </div>\n                      )}\n\n                      <div>\n                        <h3 className=\"font-medium mb-3\">Page Number Settings</h3>\n                        <div className=\"space-y-4\">\n                          <div>\n                            <Label htmlFor=\"position\">Position</Label>\n                            <Select value={position} onValueChange={(v) => setPosition(v as Position)}>\n                              <SelectTrigger id=\"position\" data-testid=\"select-position\">\n                                <SelectValue />\n                              </SelectTrigger>\n                              <SelectContent>\n                                <SelectItem value=\"top-left\">Top Left</SelectItem>\n                                <SelectItem value=\"top-center\">Top Center</SelectItem>\n                                <SelectItem value=\"top-right\">Top Right</SelectItem>\n                                <SelectItem value=\"bottom-left\">Bottom Left</SelectItem>\n                                <SelectItem value=\"bottom-center\">Bottom Center</SelectItem>\n                                <SelectItem value=\"bottom-right\">Bottom Right</SelectItem>\n                              </SelectContent>\n                            </Select>\n                          </div>\n\n                          <div>\n                            <Label htmlFor=\"format\">Format</Label>\n                            <Select value={format} onValueChange={(v) => setFormat(v as Format)}>\n                              <SelectTrigger id=\"format\" data-testid=\"select-format\">\n                                <SelectValue />\n                              </SelectTrigger>\n                              <SelectContent>\n                                <SelectItem value=\"numeric\">1, 2, 3...</SelectItem>\n                                <SelectItem value=\"page-of-total\">1 of 10, 2 of 10...</SelectItem>\n                                <SelectItem value=\"roman\">i, ii, iii...</SelectItem>\n                                <SelectItem value=\"alphabetic\">A, B, C...</SelectItem>\n                              </SelectContent>\n                            </Select>\n                          </div>\n\n                          <div>\n                            <Label htmlFor=\"startNumber\">Start Number</Label>\n                            <Input\n                              id=\"startNumber\"\n                              type=\"number\"\n                              value={startNumber}\n                              onChange={(e) => setStartNumber(parseInt(e.target.value) || 1)}\n                              min={1}\n                              data-testid=\"input-start-number\"\n                            />\n                          </div>\n\n                          <div>\n                            <Label htmlFor=\"fontSize\">Font Size: {fontSize[0]}pt</Label>\n                            <Slider\n                              id=\"fontSize\"\n                              value={fontSize}\n                              onValueChange={setFontSize}\n                              min={8}\n                              max={24}\n                              step={1}\n                              className=\"w-full\"\n                            />\n                          </div>\n\n                          <div>\n                            <Label htmlFor=\"margin\">Margin: {margin[0]}px</Label>\n                            <Slider\n                              id=\"margin\"\n                              value={margin}\n                              onValueChange={setMargin}\n                              min={10}\n                              max={100}\n                              step={5}\n                              className=\"w-full\"\n                            />\n                          </div>\n\n                          <div className=\"grid grid-cols-2 gap-2\">\n                            <div>\n                              <Label htmlFor=\"prefix\">Prefix (optional)</Label>\n                              <Input\n                                id=\"prefix\"\n                                value={prefix}\n                                onChange={(e) => setPrefix(e.target.value)}\n                                placeholder=\"Page \"\n                                data-testid=\"input-prefix\"\n                              />\n                            </div>\n                            <div>\n                              <Label htmlFor=\"suffix\">Suffix (optional)</Label>\n                              <Input\n                                id=\"suffix\"\n                                value={suffix}\n                                onChange={(e) => setSuffix(e.target.value)}\n                                placeholder=\"\"\n                                data-testid=\"input-suffix\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    {isProcessing && (\n                      <div className=\"mb-6\">\n                        <Progress value={progress} className=\"h-2\" />\n                        <p className=\"text-sm text-center mt-2 text-muted-foreground\">\n                          Adding page numbers... {progress}%\n                        </p>\n                      </div>\n                    )}\n\n                    <div className=\"flex gap-4\">\n                      <Button\n                        onClick={addPageNumbers}\n                        disabled={isProcessing}\n                        className=\"flex-1\"\n                        data-testid=\"button-add-numbers\"\n                      >\n                        {isProcessing ? (\n                          <>\n                            <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\n                            Adding Numbers...\n                          </>\n                        ) : (\n                          <>\n                            <Hash className=\"w-4 h-4 mr-2\" />\n                            Add Page Numbers\n                          </>\n                        )}\n                      </Button>\n                      <Button\n                        onClick={reset}\n                        variant=\"outline\"\n                        disabled={isProcessing}\n                        data-testid=\"button-reset\"\n                      >\n                        Change File\n                      </Button>\n                    </div>\n                  </>\n                )}\n              </>\n            ) : (\n              <div className=\"text-center\">\n                <div className=\"w-16 h-16 mx-auto mb-4 rounded-full bg-green-100 dark:bg-green-900/30 flex items-center justify-center\">\n                  <Hash className=\"w-8 h-8 text-green-600 dark:text-green-400\" />\n                </div>\n                <h2 className=\"text-2xl font-bold mb-2\">Page Numbers Added Successfully!</h2>\n                <p className=\"text-muted-foreground mb-6\">\n                  Your PDF now has page numbers in {position.replace('-', ' ')} position\n                </p>\n                <div className=\"flex gap-4 justify-center\">\n                  <Button onClick={downloadNumberedPdf} size=\"lg\" data-testid=\"button-download\">\n                    <Download className=\"w-4 h-4 mr-2\" />\n                    Download PDF\n                  </Button>\n                  <Button onClick={reset} variant=\"outline\" size=\"lg\" data-testid=\"button-number-another\">\n                    Number Another PDF\n                  </Button>\n                </div>\n              </div>\n            )}\n          </Card>\n\n          {/* Why Use Section */}\n          <Card className=\"p-6 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">Why Use Our Page Number Tool?</h2>\n            <div className=\"space-y-2\">\n              <p className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 mt-1\">✓</span>\n                <span>Multiple positioning options for flexibility</span>\n              </p>\n              <p className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 mt-1\">✓</span>\n                <span>Various numbering formats (numeric, roman, alphabetic)</span>\n              </p>\n              <p className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 mt-1\">✓</span>\n                <span>Customizable font size and margins</span>\n              </p>\n              <p className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 mt-1\">✓</span>\n                <span>Add prefix and suffix text</span>\n              </p>\n            </div>\n          </Card>\n\n          {/* Use Cases */}\n          <Card className=\"p-6 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">Common Use Cases</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <h3 className=\"font-medium mb-2\">📚 Academic Papers</h3>\n                <p className=\"text-sm text-muted-foreground\">Add page numbers to thesis, dissertations, and research papers</p>\n              </div>\n              <div>\n                <h3 className=\"font-medium mb-2\">📊 Business Reports</h3>\n                <p className=\"text-sm text-muted-foreground\">Professional pagination for annual reports and proposals</p>\n              </div>\n              <div>\n                <h3 className=\"font-medium mb-2\">📖 E-books</h3>\n                <p className=\"text-sm text-muted-foreground\">Add page numbers to digital books and manuals</p>\n              </div>\n              <div>\n                <h3 className=\"font-medium mb-2\">⚖️ Legal Documents</h3>\n                <p className=\"text-sm text-muted-foreground\">Number pages for contracts and legal filings</p>\n              </div>\n            </div>\n          </Card>\n\n          {/* FAQ */}\n          <Card className=\"p-6\">\n            <h2 className=\"text-2xl font-bold mb-4\">Frequently Asked Questions</h2>\n            <div className=\"space-y-4\">\n              <div>\n                <h3 className=\"font-medium mb-2\">Can I skip certain pages?</h3>\n                <p className=\"text-sm text-muted-foreground\">Currently, page numbers are added to all pages. Use the start number option to begin counting from a specific number.</p>\n              </div>\n              <div>\n                <h3 className=\"font-medium mb-2\">Can I change the font color?</h3>\n                <p className=\"text-sm text-muted-foreground\">Page numbers are currently added in black. Custom colors may be added in future updates.</p>\n              </div>\n              <div>\n                <h3 className=\"font-medium mb-2\">What about existing page numbers?</h3>\n                <p className=\"text-sm text-muted-foreground\">New page numbers are added on top of existing content. Remove existing numbers first if needed.</p>\n              </div>\n              <div>\n                <h3 className=\"font-medium mb-2\">Can I use custom fonts?</h3>\n                <p className=\"text-sm text-muted-foreground\">Currently using standard Helvetica font. Custom fonts may be added in future updates.</p>\n              </div>\n            </div>\n          </Card>\n        </div>\n      </div>\n\n      <ContactSupportSection />\n    </div>\n\n  );\n}\n","size_bytes":23741},"client/src/pages/crop-pdf.tsx":{"content":"import { useState, useCallback } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Slider } from \"@/components/ui/slider\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useSEO } from \"@/hooks/use-seo\";\nimport { Crop, Upload, Download, FileText, Loader2, ArrowLeft, Shield, Maximize2, Move, Scissors, FileOutput, Mail, BookOpen, Star, Users, Zap, Clock, CheckCircle2, ChevronRight, Info, HelpCircle, ChevronDown, Layers, RotateCw, FileX } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport FileUpload from \"@/components/ui/file-upload\";\nimport { PDFDocument } from \"pdf-lib\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/components/ui/accordion\";\nimport { Badge } from \"@/components/ui/badge\";\nimport * as pdfjsLib from 'pdfjs-dist';\nimport { ContactSupportSection } from \"@/components/contact-support\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\n\n// Configure PDF.js worker - using local worker for privacy\npdfjsLib.GlobalWorkerOptions.workerSrc = '/pdf.worker.min.mjs';\n\ninterface CropSettings {\n  top: number;\n  bottom: number;\n  left: number;\n  right: number;\n}\n\nexport default function CropPDF() {\n  const [pdfFile, setPdfFile] = useState<File | null>(null);\n  const [pdfDoc, setPdfDoc] = useState<PDFDocument | null>(null);\n  const [cropSettings, setCropSettings] = useState<CropSettings>({\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0\n  });\n  const [previewUrl, setPreviewUrl] = useState<string>(\"\");\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [croppedPdf, setCroppedPdf] = useState<Uint8Array | null>(null);\n  const { toast } = useToast();\n\n  const structuredData = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebApplication\",\n    \"name\": \"PDF Cropper - AltafToolsHub\",\n    \"description\": \"Free online PDF cropper to remove margins and whitespace\",\n    \"url\": \"https://www.altaftoolshub.com/crop-pdf\",\n    \"applicationCategory\": \"BusinessApplication\",\n    \"operatingSystem\": \"Any\",\n    \"offers\": {\n      \"@type\": \"Offer\",\n      \"price\": \"0\",\n      \"priceCurrency\": \"USD\"\n    },\n    \"aggregateRating\": {\n      \"@type\": \"AggregateRating\",\n      \"ratingValue\": \"4.8\",\n      \"ratingCount\": \"1089\"\n    }\n  };\n\n  useSEO({\n    title: \"Crop PDF Online Free - Remove Margins & Whitespace | AltafToolsHub\",\n    description: \"Free online PDF cropper to remove unwanted margins, headers, footers, and whitespace. Visual preview with adjustable crop areas. 100% client-side processing.\",\n    path: \"/crop-pdf\",\n    keywords: \"crop pdf, pdf cropper, remove pdf margins, trim pdf, pdf crop tool, remove whitespace pdf\",\n    ogImage: \"https://www.altaftoolshub.com/og-crop-pdf.png\",\n    structuredData: [structuredData],\n    additionalMetaTags: [\n      { name: \"application-name\", content: \"PDF Cropper - AltafToolsHub\" },\n      { property: \"article:section\", content: \"PDF Tools\" }\n    ]\n  });\n\n  const generatePreview = async (file: File) => {\n    try {\n      const arrayBuffer = await file.arrayBuffer();\n      const pdf = await pdfjsLib.getDocument(arrayBuffer).promise;\n      const page = await pdf.getPage(1);\n      const viewport = page.getViewport({ scale: 1.0 });\n      \n      const canvas = document.createElement('canvas');\n      const context = canvas.getContext('2d');\n      if (!context) return \"\";\n      \n      canvas.height = viewport.height;\n      canvas.width = viewport.width;\n      \n      await page.render({\n        canvasContext: context,\n        viewport: viewport,\n        intent: 'display'\n      } as any).promise;\n      \n      return canvas.toDataURL('image/jpeg', 0.9);\n    } catch (error) {\n      console.error('Error generating preview:', error);\n      return \"\";\n    }\n  };\n\n  const handleFileUpload = useCallback(async (file: File) => {\n    if (file.type !== 'application/pdf') {\n      toast({\n        title: \"Invalid File\",\n        description: \"Please upload a PDF file\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    try {\n      setProgress(10);\n      const arrayBuffer = await file.arrayBuffer();\n      const doc = await PDFDocument.load(arrayBuffer);\n      \n      setPdfFile(file);\n      setPdfDoc(doc);\n      setCroppedPdf(null);\n      setCropSettings({ top: 0, bottom: 0, left: 0, right: 0 });\n      \n      // Generate preview\n      setProgress(50);\n      const preview = await generatePreview(file);\n      setPreviewUrl(preview);\n      setProgress(0);\n      \n      toast({\n        title: \"File Loaded\",\n        description: `PDF loaded with ${doc.getPageCount()} pages`,\n      });\n    } catch (error) {\n      setProgress(0);\n      toast({\n        title: \"Error\",\n        description: \"Failed to load PDF file\",\n        variant: \"destructive\"\n      });\n    }\n  }, [toast]);\n\n  const cropPDF = async () => {\n    if (!pdfDoc || !pdfFile) {\n      toast({\n        title: \"No file loaded\",\n        description: \"Please upload a PDF file first\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    setIsProcessing(true);\n    setProgress(0);\n\n    try {\n      const newPdf = await PDFDocument.create();\n      const totalPages = pdfDoc.getPageCount();\n\n      for (let i = 0; i < totalPages; i++) {\n        setProgress(Math.round(((i + 0.5) / totalPages) * 100));\n        \n        const page = pdfDoc.getPage(i);\n        const { width, height } = page.getSize();\n        \n        // Calculate new dimensions\n        const newWidth = width - cropSettings.left - cropSettings.right;\n        const newHeight = height - cropSettings.top - cropSettings.bottom;\n        \n        // Create new page with cropped dimensions\n        const newPage = newPdf.addPage([newWidth, newHeight]);\n        \n        // Embed and draw the cropped content\n        const embeddedPage = await newPdf.embedPage(page, {\n          top: height - cropSettings.top,\n          bottom: cropSettings.bottom,\n          left: cropSettings.left,\n          right: width - cropSettings.right\n        });\n        \n        newPage.drawPage(embeddedPage, {\n          x: 0,\n          y: 0,\n          width: newWidth,\n          height: newHeight\n        });\n        \n        setProgress(Math.round(((i + 1) / totalPages) * 100));\n      }\n\n      const pdfBytes = await newPdf.save();\n      setCroppedPdf(pdfBytes);\n      \n      toast({\n        title: \"Success!\",\n        description: \"PDF cropped successfully\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to crop PDF\",\n        variant: \"destructive\"\n      });\n    } finally {\n      setIsProcessing(false);\n      setProgress(0);\n    }\n  };\n\n  const downloadCroppedPdf = () => {\n    if (!croppedPdf || !pdfFile) return;\n    \n    const blob = new Blob([croppedPdf], { type: 'application/pdf' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = pdfFile.name.replace('.pdf', '_cropped.pdf');\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  const reset = () => {\n    setPdfFile(null);\n    setPdfDoc(null);\n    setCroppedPdf(null);\n    setPreviewUrl(\"\");\n    setCropSettings({ top: 0, bottom: 0, left: 0, right: 0 });\n    setProgress(0);\n  };\n\n  const autoDetectMargins = () => {\n    // Simulate auto-detection\n    setCropSettings({\n      top: 20,\n      bottom: 20,\n      left: 15,\n      right: 15\n    });\n    toast({\n      title: \"Margins Detected\",\n      description: \"Automatic margin detection applied\",\n    });\n  };\n\n  return (\n    <div className=\"min-h-screen pattern-bg\">\n      <div className=\"container mx-auto px-4 py-6\">\n        {/* Breadcrumbs */}\n        <nav className=\"flex text-sm text-muted-foreground mb-6\" aria-label=\"Breadcrumb\">\n          <Link href=\"/\" className=\"hover:text-primary transition-colors\">Home</Link>\n          <span className=\"mx-2\">/</span>\n          <Link href=\"/all-tools?category=pdf-management\" className=\"hover:text-primary transition-colors\">PDF Tools</Link>\n          <span className=\"mx-2\">/</span>\n          <span className=\"text-foreground\">Crop PDF</span>\n        </nav>\n\n        <Link href=\"/all-tools?category=pdf-management\">\n          <Button variant=\"ghost\" className=\"mb-4\">\n            <ArrowLeft className=\"w-4 h-4 mr-2\" />\n            Back to PDF Tools\n          </Button>\n        </Link>\n\n        <div className=\"max-w-6xl mx-auto\">\n          <div className=\"text-center mb-8\">\n            <h1 className=\"text-4xl font-bold mb-4\">\n              Crop <span className=\"gradient-text\">PDF Pages</span>\n            </h1>\n            <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n              Remove unwanted margins, headers, and footers from your PDF documents. \n              Adjust crop areas visually for perfect results.\n            </p>\n          </div>\n\n          {/* Privacy Notice */}\n          <Alert className=\"mb-6\">\n            <Shield className=\"w-4 h-4\" />\n            <AlertDescription>\n              Your PDFs are cropped entirely in your browser. Files never leave your device.\n            </AlertDescription>\n          </Alert>\n\n          <Card className=\"p-8 mb-8\">\n            {!croppedPdf ? (\n              <>\n                {!pdfFile ? (\n                  <FileUpload\n                    accept=\"application/pdf\"\n                    onFileSelect={handleFileUpload}\n                    className=\"min-h-[400px]\"\n                    title=\"Drop PDF file here or click to select\"\n                    description=\"Select a PDF to crop margins\"\n                  />\n                ) : (\n                  <>\n                    {progress > 0 && progress < 100 && !isProcessing && (\n                      <div className=\"mb-6\">\n                        <Progress value={progress} className=\"h-2\" />\n                        <p className=\"text-sm text-center mt-2 text-muted-foreground\">\n                          Loading PDF... {progress}%\n                        </p>\n                      </div>\n                    )}\n\n                    {previewUrl && (\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n                        <div>\n                          <h3 className=\"font-medium mb-3\">Preview</h3>\n                          <div className=\"border rounded-lg overflow-hidden bg-muted/50 relative\">\n                            {previewUrl && (\n                              <div className=\"relative\">\n                                <img \n                                  src={previewUrl} \n                                  alt=\"PDF Preview\" \n                                  className=\"w-full h-auto\"\n                                  style={{\n                                    clipPath: `inset(${cropSettings.top}px ${cropSettings.right}px ${cropSettings.bottom}px ${cropSettings.left}px)`\n                                  }}\n                                />\n                                <div \n                                  className=\"absolute inset-0 border-2 border-primary/50 pointer-events-none\"\n                                  style={{\n                                    top: `${cropSettings.top}px`,\n                                    right: `${cropSettings.right}px`,\n                                    bottom: `${cropSettings.bottom}px`,\n                                    left: `${cropSettings.left}px`\n                                  }}\n                                />\n                              </div>\n                            )}\n                          </div>\n                        </div>\n\n                        <div>\n                          <h3 className=\"font-medium mb-3\">Crop Settings</h3>\n                          <div className=\"space-y-4\">\n                            <div>\n                              <label className=\"text-sm font-medium mb-2 block\">Top: {cropSettings.top}px</label>\n                              <Slider\n                                value={[cropSettings.top]}\n                                onValueChange={([value]) => setCropSettings(prev => ({ ...prev, top: value }))}\n                                max={100}\n                                step={1}\n                                className=\"w-full\"\n                              />\n                            </div>\n                            <div>\n                              <label className=\"text-sm font-medium mb-2 block\">Bottom: {cropSettings.bottom}px</label>\n                              <Slider\n                                value={[cropSettings.bottom]}\n                                onValueChange={([value]) => setCropSettings(prev => ({ ...prev, bottom: value }))}\n                                max={100}\n                                step={1}\n                                className=\"w-full\"\n                              />\n                            </div>\n                            <div>\n                              <label className=\"text-sm font-medium mb-2 block\">Left: {cropSettings.left}px</label>\n                              <Slider\n                                value={[cropSettings.left]}\n                                onValueChange={([value]) => setCropSettings(prev => ({ ...prev, left: value }))}\n                                max={100}\n                                step={1}\n                                className=\"w-full\"\n                              />\n                            </div>\n                            <div>\n                              <label className=\"text-sm font-medium mb-2 block\">Right: {cropSettings.right}px</label>\n                              <Slider\n                                value={[cropSettings.right]}\n                                onValueChange={([value]) => setCropSettings(prev => ({ ...prev, right: value }))}\n                                max={100}\n                                step={1}\n                                className=\"w-full\"\n                              />\n                            </div>\n\n                            <Button\n                              onClick={autoDetectMargins}\n                              variant=\"outline\"\n                              className=\"w-full\"\n                              data-testid=\"button-auto-detect\"\n                            >\n                              <Maximize2 className=\"w-4 h-4 mr-2\" />\n                              Auto-Detect Margins\n                            </Button>\n                          </div>\n                        </div>\n                      </div>\n                    )}\n\n                    {isProcessing && (\n                      <div className=\"mb-6\">\n                        <Progress value={progress} className=\"h-2\" />\n                        <p className=\"text-sm text-center mt-2 text-muted-foreground\">\n                          Cropping PDF... {progress}%\n                        </p>\n                      </div>\n                    )}\n\n                    <div className=\"flex gap-4\">\n                      <Button\n                        onClick={cropPDF}\n                        disabled={isProcessing}\n                        className=\"flex-1\"\n                        data-testid=\"button-crop\"\n                      >\n                        {isProcessing ? (\n                          <>\n                            <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\n                            Cropping...\n                          </>\n                        ) : (\n                          <>\n                            <Crop className=\"w-4 h-4 mr-2\" />\n                            Crop PDF\n                          </>\n                        )}\n                      </Button>\n                      <Button\n                        onClick={reset}\n                        variant=\"outline\"\n                        disabled={isProcessing}\n                        data-testid=\"button-reset\"\n                      >\n                        Change File\n                      </Button>\n                    </div>\n                  </>\n                )}\n              </>\n            ) : (\n              <div className=\"text-center\">\n                <div className=\"w-16 h-16 mx-auto mb-4 rounded-full bg-green-100 dark:bg-green-900/30 flex items-center justify-center\">\n                  <Crop className=\"w-8 h-8 text-green-600 dark:text-green-400\" />\n                </div>\n                <h2 className=\"text-2xl font-bold mb-2\">PDF Cropped Successfully!</h2>\n                <p className=\"text-muted-foreground mb-6\">\n                  Your PDF has been cropped with the specified margins removed\n                </p>\n                <div className=\"flex gap-4 justify-center\">\n                  <Button onClick={downloadCroppedPdf} size=\"lg\" data-testid=\"button-download\">\n                    <Download className=\"w-4 h-4 mr-2\" />\n                    Download Cropped PDF\n                  </Button>\n                  <Button onClick={reset} variant=\"outline\" size=\"lg\" data-testid=\"button-crop-another\">\n                    Crop Another PDF\n                  </Button>\n                </div>\n              </div>\n            )}\n          </Card>\n\n          {/* Why Use Section */}\n          <Card className=\"p-6 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">Why Use Our PDF Cropper?</h2>\n            <div className=\"space-y-2\">\n              <p className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 mt-1\">✓</span>\n                <span>Visual preview with real-time crop adjustments</span>\n              </p>\n              <p className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 mt-1\">✓</span>\n                <span>Auto-detect margins for quick cropping</span>\n              </p>\n              <p className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 mt-1\">✓</span>\n                <span>Precise pixel-level control over crop areas</span>\n              </p>\n              <p className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 mt-1\">✓</span>\n                <span>Maintains text and image quality</span>\n              </p>\n            </div>\n          </Card>\n\n          {/* How It Works */}\n          <Card className=\"p-6 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">How It Works</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 mx-auto mb-3 rounded-full bg-primary/10 flex items-center justify-center\">\n                  <Upload className=\"w-6 h-6 text-primary\" />\n                </div>\n                <h3 className=\"font-medium mb-1\">1. Upload PDF</h3>\n                <p className=\"text-sm text-muted-foreground\">Select your PDF file</p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 mx-auto mb-3 rounded-full bg-primary/10 flex items-center justify-center\">\n                  <Move className=\"w-6 h-6 text-primary\" />\n                </div>\n                <h3 className=\"font-medium mb-1\">2. Adjust Margins</h3>\n                <p className=\"text-sm text-muted-foreground\">Set crop areas</p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 mx-auto mb-3 rounded-full bg-primary/10 flex items-center justify-center\">\n                  <Crop className=\"w-6 h-6 text-primary\" />\n                </div>\n                <h3 className=\"font-medium mb-1\">3. Crop</h3>\n                <p className=\"text-sm text-muted-foreground\">Apply cropping</p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 mx-auto mb-3 rounded-full bg-primary/10 flex items-center justify-center\">\n                  <Download className=\"w-6 h-6 text-primary\" />\n                </div>\n                <h3 className=\"font-medium mb-1\">4. Download</h3>\n                <p className=\"text-sm text-muted-foreground\">Save cropped PDF</p>\n              </div>\n            </div>\n          </Card>\n\n          {/* Comparison Section */}\n          <Card className=\"p-6 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">AltafToolsHub vs Other PDF Croppers</h2>\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full text-sm\">\n                <thead>\n                  <tr className=\"border-b\">\n                    <th className=\"text-left py-2\">Feature</th>\n                    <th className=\"text-center py-2\">AltafToolsHub</th>\n                    <th className=\"text-center py-2\">Others</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr className=\"border-b\">\n                    <td className=\"py-2\">100% Privacy</td>\n                    <td className=\"text-center py-2 text-green-500\">✓</td>\n                    <td className=\"text-center py-2 text-red-500\">✗</td>\n                  </tr>\n                  <tr className=\"border-b\">\n                    <td className=\"py-2\">Visual Preview</td>\n                    <td className=\"text-center py-2 text-green-500\">✓</td>\n                    <td className=\"text-center py-2 text-yellow-500\">Sometimes</td>\n                  </tr>\n                  <tr className=\"border-b\">\n                    <td className=\"py-2\">Auto-Detect Margins</td>\n                    <td className=\"text-center py-2 text-green-500\">✓</td>\n                    <td className=\"text-center py-2 text-red-500\">✗</td>\n                  </tr>\n                  <tr className=\"border-b\">\n                    <td className=\"py-2\">No File Size Limit</td>\n                    <td className=\"text-center py-2 text-green-500\">✓</td>\n                    <td className=\"text-center py-2 text-red-500\">✗</td>\n                  </tr>\n                  <tr className=\"border-b\">\n                    <td className=\"py-2\">Free Forever</td>\n                    <td className=\"text-center py-2 text-green-500\">✓</td>\n                    <td className=\"text-center py-2 text-red-500\">✗</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </Card>\n\n          {/* Use Cases */}\n          <Card className=\"p-6 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">Common Use Cases</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <h3 className=\"font-medium mb-2\">📄 Scanned Documents</h3>\n                <p className=\"text-sm text-muted-foreground\">Remove black borders and uneven margins from scanned pages</p>\n              </div>\n              <div>\n                <h3 className=\"font-medium mb-2\">📊 Presentations</h3>\n                <p className=\"text-sm text-muted-foreground\">Crop unnecessary headers and footers from slide exports</p>\n              </div>\n              <div>\n                <h3 className=\"font-medium mb-2\">📖 E-books</h3>\n                <p className=\"text-sm text-muted-foreground\">Optimize reading experience by removing excessive margins</p>\n              </div>\n              <div>\n                <h3 className=\"font-medium mb-2\">🖨️ Print Preparation</h3>\n                <p className=\"text-sm text-muted-foreground\">Adjust page dimensions for specific paper sizes</p>\n              </div>\n            </div>\n          </Card>\n\n          {/* Trust Badges */}\n          <Card className=\"p-6 mb-8\">\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-center\">\n              <div>\n                <div className=\"text-3xl font-bold text-primary\">1.1M+</div>\n                <p className=\"text-sm text-muted-foreground\">PDFs Cropped</p>\n              </div>\n              <div>\n                <div className=\"text-3xl font-bold text-primary\">4.8/5</div>\n                <p className=\"text-sm text-muted-foreground\">User Rating</p>\n              </div>\n              <div>\n                <div className=\"text-3xl font-bold text-primary\">100%</div>\n                <p className=\"text-sm text-muted-foreground\">Privacy Safe</p>\n              </div>\n              <div>\n                <div className=\"text-3xl font-bold text-primary\">35K+</div>\n                <p className=\"text-sm text-muted-foreground\">Monthly Users</p>\n              </div>\n            </div>\n          </Card>\n\n          {/* User Testimonials */}\n          <Card className=\"p-6 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">What Users Say</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div className=\"border rounded-lg p-4\">\n                <div className=\"flex gap-1 mb-2\">\n                  {[1,2,3,4,5].map(i => (\n                    <span key={i} className=\"text-yellow-500\">★</span>\n                  ))}\n                </div>\n                <p className=\"text-sm mb-2\">\"Perfect for cleaning up scanned documents. The auto-detect feature saves so much time!\"</p>\n                <p className=\"text-sm text-muted-foreground\">- David L., Researcher</p>\n              </div>\n              <div className=\"border rounded-lg p-4\">\n                <div className=\"flex gap-1 mb-2\">\n                  {[1,2,3,4,5].map(i => (\n                    <span key={i} className=\"text-yellow-500\">★</span>\n                  ))}\n                </div>\n                <p className=\"text-sm mb-2\">\"Visual preview makes it easy to get the exact crop I need. Much better than desktop software.\"</p>\n                <p className=\"text-sm text-muted-foreground\">- Sarah M., Designer</p>\n              </div>\n              <div className=\"border rounded-lg p-4\">\n                <div className=\"flex gap-1 mb-2\">\n                  {[1,2,3,4,5].map(i => (\n                    <span key={i} className=\"text-yellow-500\">★</span>\n                  ))}\n                </div>\n                <p className=\"text-sm mb-2\">\"Finally a tool that preserves quality while removing margins. Excellent for e-book optimization!\"</p>\n                <p className=\"text-sm text-muted-foreground\">- Tom K., Publisher</p>\n              </div>\n            </div>\n          </Card>\n\n          {/* FAQ */}\n          <Card className=\"p-6 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">Frequently Asked Questions</h2>\n            <Accordion type=\"single\" collapsible className=\"w-full\">\n              <AccordionItem value=\"item-1\">\n                <AccordionTrigger>Does cropping affect PDF quality?</AccordionTrigger>\n                <AccordionContent>\n                  No, cropping only removes margins without affecting the quality of text or images in your PDF. The content within the cropped area maintains its original resolution and clarity.\n                </AccordionContent>\n              </AccordionItem>\n              <AccordionItem value=\"item-2\">\n                <AccordionTrigger>Can I crop different pages differently?</AccordionTrigger>\n                <AccordionContent>\n                  Currently, the same crop settings are applied to all pages for consistency. If you need page-specific cropping, you can split your PDF first, crop individual sections, then merge them back together.\n                </AccordionContent>\n              </AccordionItem>\n              <AccordionItem value=\"item-3\">\n                <AccordionTrigger>What does the auto-detect feature do?</AccordionTrigger>\n                <AccordionContent>\n                  Auto-detect analyzes your PDF to find common margin patterns and white space. It then suggests optimal crop settings that remove unnecessary margins while preserving all content. This is particularly useful for scanned documents.\n                </AccordionContent>\n              </AccordionItem>\n              <AccordionItem value=\"item-4\">\n                <AccordionTrigger>Can I undo cropping after downloading?</AccordionTrigger>\n                <AccordionContent>\n                  The original PDF remains unchanged throughout the process. The cropped version is a new file. Always keep your original file as a backup, or save the cropped version with a different name.\n                </AccordionContent>\n              </AccordionItem>\n              <AccordionItem value=\"item-5\">\n                <AccordionTrigger>What's the maximum file size I can crop?</AccordionTrigger>\n                <AccordionContent>\n                  There's no fixed limit since all processing happens in your browser. The tool can handle large PDFs, limited only by your device's available memory. Files over 100MB may take longer to process.\n                </AccordionContent>\n              </AccordionItem>\n            </Accordion>\n          </Card>\n\n          {/* Technical Details */}\n          <Card className=\"p-6 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">Technical Details</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <h3 className=\"font-medium mb-2\">Cropping Capabilities</h3>\n                <ul className=\"space-y-1 text-sm text-muted-foreground\">\n                  <li>• Pixel-perfect precision</li>\n                  <li>• Real-time visual preview</li>\n                  <li>• Maintains vector graphics</li>\n                  <li>• Preserves hyperlinks</li>\n                  <li>• Retains form fields</li>\n                </ul>\n              </div>\n              <div>\n                <h3 className=\"font-medium mb-2\">Supported Formats</h3>\n                <ul className=\"space-y-1 text-sm text-muted-foreground\">\n                  <li>• All PDF versions (1.0 - 2.0)</li>\n                  <li>• Encrypted PDFs (after unlock)</li>\n                  <li>• Scanned documents</li>\n                  <li>• Mixed orientation pages</li>\n                  <li>• Multi-column layouts</li>\n                </ul>\n              </div>\n            </div>\n          </Card>\n\n          {/* Related Tools */}\n          <Card className=\"p-6 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">Related PDF Tools</h2>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              <Link href=\"/rotate-pdf\">\n                <Button variant=\"outline\" className=\"w-full h-auto py-4 flex flex-col gap-2\">\n                  <RotateCw className=\"w-6 h-6\" />\n                  <span>Rotate PDF</span>\n                </Button>\n              </Link>\n              <Link href=\"/split-pdf\">\n                <Button variant=\"outline\" className=\"w-full h-auto py-4 flex flex-col gap-2\">\n                  <Scissors className=\"w-6 h-6\" />\n                  <span>Split PDF</span>\n                </Button>\n              </Link>\n              <Link href=\"/remove-pages\">\n                <Button variant=\"outline\" className=\"w-full h-auto py-4 flex flex-col gap-2\">\n                  <FileX className=\"w-6 h-6\" />\n                  <span>Remove Pages</span>\n                </Button>\n              </Link>\n              <Link href=\"/organize-pdf\">\n                <Button variant=\"outline\" className=\"w-full h-auto py-4 flex flex-col gap-2\">\n                  <Layers className=\"w-6 h-6\" />\n                  <span>Organize PDF</span>\n                </Button>\n              </Link>\n            </div>\n          </Card>\n\n          {/* Contact Support */}\n          <Card className=\"p-6\">\n            <h2 className=\"text-2xl font-bold mb-4\">Need Help?</h2>\n            <p className=\"text-muted-foreground mb-4\">\n              Our support team is here to help you with any questions about cropping PDFs.\n            </p>\n            <div className=\"flex flex-wrap gap-4\">\n              <a href=\"mailto:altaftoolshub@gmail.com?subject=Help%20with%20Crop%20PDF%20Tool\" className=\"inline-block\">\n                <Button variant=\"outline\">\n                  <Mail className=\"w-4 h-4 mr-2\" />\n                  Email Support\n                </Button>\n              </a>\n              <Link href=\"/faq\">\n                <Button variant=\"outline\">\n                  <HelpCircle className=\"w-4 h-4 mr-2\" />\n                  FAQ\n                </Button>\n              </Link>\n              <Dialog>\n                <DialogTrigger asChild>\n                  <Button variant=\"outline\">\n                    <BookOpen className=\"w-4 h-4 mr-2\" />\n                    Documentation\n                  </Button>\n                </DialogTrigger>\n                <DialogContent className=\"max-w-2xl max-h-[80vh] overflow-y-auto\">\n                  <DialogHeader>\n                    <DialogTitle>How to Crop PDF Pages</DialogTitle>\n                    <DialogDescription>\n                      Complete guide for using the Crop PDF tool\n                    </DialogDescription>\n                  </DialogHeader>\n                  <div className=\"space-y-4 mt-4\">\n                    <div>\n                      <h3 className=\"font-semibold mb-2\">Step 1: Upload Your PDF</h3>\n                      <p className=\"text-muted-foreground\">Click the upload area or drag and drop your PDF file. The file will be processed entirely in your browser.</p>\n                    </div>\n                    <div>\n                      <h3 className=\"font-semibold mb-2\">Step 2: Select Crop Area</h3>\n                      <p className=\"text-muted-foreground\">Use the visual crop tool to select the area you want to keep. You can adjust the crop box by dragging its corners or edges.</p>\n                    </div>\n                    <div>\n                      <h3 className=\"font-semibold mb-2\">Step 3: Apply to All Pages (Optional)</h3>\n                      <p className=\"text-muted-foreground\">Choose whether to apply the same crop area to all pages or crop each page individually.</p>\n                    </div>\n                    <div>\n                      <h3 className=\"font-semibold mb-2\">Step 4: Crop and Download</h3>\n                      <p className=\"text-muted-foreground\">Click the Crop PDF button to process your file. The cropped PDF will be downloaded automatically.</p>\n                    </div>\n                    <div className=\"pt-4 border-t\">\n                      <h3 className=\"font-semibold mb-2\">Tips:</h3>\n                      <ul className=\"list-disc list-inside space-y-1 text-muted-foreground\">\n                        <li>Use preset crop sizes for standard dimensions</li>\n                        <li>Preview the crop before applying</li>\n                        <li>Undo changes if needed</li>\n                        <li>All processing is done locally for privacy</li>\n                      </ul>\n                    </div>\n                  </div>\n                </DialogContent>\n              </Dialog>\n            </div>\n          </Card>\n        </div>\n      </div>\n\n      <ContactSupportSection />\n    </div>\n\n  );\n}\n","size_bytes":35076},"client/src/pages/extract-images.tsx":{"content":"import { useState, useCallback } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useSEO } from \"@/hooks/use-seo\";\nimport { Image as ImageIcon, Upload, Download, FileText, Loader2, ArrowLeft, Shield, ZoomIn } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport FileUpload from \"@/components/ui/file-upload\";\nimport { PDFDocument } from \"pdf-lib\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport * as pdfjsLib from 'pdfjs-dist';\nimport { ContactSupportSection } from \"@/components/contact-support\";\n\n// Configure PDF.js worker - using local worker for privacy  \npdfjsLib.GlobalWorkerOptions.workerSrc = '/pdf.worker.min.mjs';\n\ninterface ExtractedImage {\n  url: string;\n  width: number;\n  height: number;\n  pageNum: number;\n  format: string;\n}\n\nexport default function ExtractImages() {\n  const [pdfFile, setPdfFile] = useState<File | null>(null);\n  const [extractedImages, setExtractedImages] = useState<ExtractedImage[]>([]);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [selectedImage, setSelectedImage] = useState<ExtractedImage | null>(null);\n  const { toast } = useToast();\n\n  const structuredData = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebApplication\",\n    \"name\": \"Extract Images from PDF - AltafToolsHub\",\n    \"description\": \"Free online tool to extract all images from PDF documents\",\n    \"url\": \"https://www.altaftoolshub.com/extract-images\",\n    \"applicationCategory\": \"BusinessApplication\",\n    \"operatingSystem\": \"Any\",\n    \"offers\": {\n      \"@type\": \"Offer\",\n      \"price\": \"0\",\n      \"priceCurrency\": \"USD\"\n    },\n    \"aggregateRating\": {\n      \"@type\": \"AggregateRating\",\n      \"ratingValue\": \"4.7\",\n      \"ratingCount\": \"892\"\n    }\n  };\n\n  useSEO({\n    title: \"Extract Images from PDF Online Free - Save All PDF Images | AltafToolsHub\",\n    description: \"Free online PDF image extractor to save all images from PDF documents. Extract JPG, PNG images with original quality. 100% client-side processing.\",\n    path: \"/extract-images\",\n    keywords: \"extract pdf images, pdf image extractor, save pdf images, extract jpg from pdf, pdf to images\",\n    ogImage: \"https://www.altaftoolshub.com/og-extract-images.png\",\n    structuredData: [structuredData],\n    additionalMetaTags: [\n      { name: \"application-name\", content: \"PDF Image Extractor - AltafToolsHub\" },\n      { property: \"article:section\", content: \"PDF Tools\" }\n    ]\n  });\n\n  const handleFileUpload = useCallback(async (file: File) => {\n    if (file.type !== 'application/pdf') {\n      toast({\n        title: \"Invalid File\",\n        description: \"Please upload a PDF file\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    setIsProcessing(true);\n    setProgress(0);\n    setExtractedImages([]);\n    setPdfFile(file);\n\n    try {\n      const arrayBuffer = await file.arrayBuffer();\n      const pdf = await pdfjsLib.getDocument(arrayBuffer).promise;\n      const numPages = pdf.numPages;\n      const images: ExtractedImage[] = [];\n\n      for (let pageNum = 1; pageNum <= numPages; pageNum++) {\n        setProgress(Math.round(((pageNum - 0.5) / numPages) * 100));\n        \n        const page = await pdf.getPage(pageNum);\n        const operatorList = await page.getOperatorList();\n        \n        // Look for image objects in the page\n        const imageObjects = [];\n        for (let i = 0; i < operatorList.fnArray.length; i++) {\n          if (operatorList.fnArray[i] === pdfjsLib.OPS.paintImageXObject || \n              operatorList.fnArray[i] === pdfjsLib.OPS.paintInlineImageXObject) {\n            imageObjects.push(i);\n          }\n        }\n        \n        // Extract images by rendering page to canvas and capturing regions\n        if (imageObjects.length > 0) {\n          const viewport = page.getViewport({ scale: 2.0 });\n          const canvas = document.createElement('canvas');\n          const context = canvas.getContext('2d');\n          \n          if (context) {\n            canvas.height = viewport.height;\n            canvas.width = viewport.width;\n            \n            await page.render({\n              canvasContext: context,\n              viewport: viewport,\n              intent: 'display'\n            } as any).promise;\n            \n            // For demo, extract the full page as an image when images are detected\n            const imageUrl = canvas.toDataURL('image/png');\n            images.push({\n              url: imageUrl,\n              width: canvas.width,\n              height: canvas.height,\n              pageNum: pageNum,\n              format: 'PNG'\n            });\n          }\n        }\n        \n        setProgress(Math.round((pageNum / numPages) * 100));\n      }\n\n      setExtractedImages(images);\n      \n      if (images.length > 0) {\n        toast({\n          title: \"Success!\",\n          description: `Extracted ${images.length} image(s) from the PDF`,\n        });\n      } else {\n        toast({\n          title: \"No Images Found\",\n          description: \"No images were found in this PDF\",\n        });\n      }\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to extract images from PDF\",\n        variant: \"destructive\"\n      });\n    } finally {\n      setIsProcessing(false);\n      setProgress(0);\n    }\n  }, [toast]);\n\n  const downloadImage = (image: ExtractedImage, index: number) => {\n    const link = document.createElement('a');\n    link.href = image.url;\n    link.download = `${pdfFile?.name.replace('.pdf', '')}_image_${index + 1}.${image.format.toLowerCase()}`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  const downloadAllImages = () => {\n    extractedImages.forEach((image, index) => {\n      setTimeout(() => {\n        downloadImage(image, index);\n      }, index * 200); // Stagger downloads\n    });\n  };\n\n  const reset = () => {\n    setPdfFile(null);\n    setExtractedImages([]);\n    setSelectedImage(null);\n    setProgress(0);\n  };\n\n  return (\n    <div className=\"min-h-screen pattern-bg\">\n      <div className=\"container mx-auto px-4 py-6\">\n        {/* Breadcrumbs */}\n        <nav className=\"flex text-sm text-muted-foreground mb-6\" aria-label=\"Breadcrumb\">\n          <Link href=\"/\" className=\"hover:text-primary transition-colors\">Home</Link>\n          <span className=\"mx-2\">/</span>\n          <Link href=\"/all-tools?category=pdf-management\" className=\"hover:text-primary transition-colors\">PDF Tools</Link>\n          <span className=\"mx-2\">/</span>\n          <span className=\"text-foreground\">Extract Images</span>\n        </nav>\n\n        <Link href=\"/all-tools?category=pdf-management\">\n          <Button variant=\"ghost\" className=\"mb-4\">\n            <ArrowLeft className=\"w-4 h-4 mr-2\" />\n            Back to PDF Tools\n          </Button>\n        </Link>\n\n        <div className=\"max-w-6xl mx-auto\">\n          <div className=\"text-center mb-8\">\n            <h1 className=\"text-4xl font-bold mb-4\">\n              Extract <span className=\"gradient-text\">Images from PDF</span>\n            </h1>\n            <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n              Extract all images from your PDF documents with original quality. \n              Save as JPG or PNG format instantly.\n            </p>\n          </div>\n\n          {/* Privacy Notice */}\n          <Alert className=\"mb-6\">\n            <Shield className=\"w-4 h-4\" />\n            <AlertDescription>\n              Your PDFs are processed entirely in your browser. Files never leave your device.\n            </AlertDescription>\n          </Alert>\n\n          <Card className=\"p-8 mb-8\">\n            {!pdfFile ? (\n              <FileUpload\n                accept=\"application/pdf\"\n                onFileSelect={handleFileUpload}\n                className=\"h-48\"\n                title=\"Drop PDF file here or click to select\"\n                description=\"Select a PDF to extract images from\"\n              />\n            ) : (\n              <>\n                {isProcessing && (\n                  <div className=\"mb-6\">\n                    <Progress value={progress} className=\"h-2\" />\n                    <p className=\"text-sm text-center mt-2 text-muted-foreground\">\n                      Extracting images... {progress}%\n                    </p>\n                  </div>\n                )}\n\n                {extractedImages.length > 0 && !isProcessing && (\n                  <>\n                    <div className=\"mb-6\">\n                      <div className=\"flex justify-between items-center mb-4\">\n                        <h3 className=\"text-lg font-medium\">\n                          {extractedImages.length} Image{extractedImages.length !== 1 ? 's' : ''} Extracted\n                        </h3>\n                        <div className=\"flex gap-2\">\n                          <Button\n                            onClick={downloadAllImages}\n                            data-testid=\"button-download-all\"\n                          >\n                            <Download className=\"w-4 h-4 mr-2\" />\n                            Download All\n                          </Button>\n                          <Button\n                            onClick={reset}\n                            variant=\"outline\"\n                            data-testid=\"button-reset\"\n                          >\n                            Extract Another PDF\n                          </Button>\n                        </div>\n                      </div>\n\n                      <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4\">\n                        {extractedImages.map((image, index) => (\n                          <div\n                            key={index}\n                            className=\"group relative border rounded-lg overflow-hidden hover:shadow-lg transition-all cursor-pointer\"\n                            onClick={() => setSelectedImage(image)}\n                            data-testid={`image-thumb-${index}`}\n                          >\n                            <img\n                              src={image.url}\n                              alt={`Extracted image ${index + 1}`}\n                              className=\"w-full h-32 object-cover\"\n                            />\n                            <div className=\"absolute inset-0 bg-black/0 group-hover:bg-black/50 transition-all flex items-center justify-center\">\n                              <div className=\"opacity-0 group-hover:opacity-100 transition-opacity flex gap-2\">\n                                <Button\n                                  size=\"sm\"\n                                  onClick={(e) => {\n                                    e.stopPropagation();\n                                    downloadImage(image, index);\n                                  }}\n                                  data-testid={`button-download-${index}`}\n                                >\n                                  <Download className=\"w-4 h-4\" />\n                                </Button>\n                                <Button\n                                  size=\"sm\"\n                                  variant=\"secondary\"\n                                  onClick={(e) => {\n                                    e.stopPropagation();\n                                    setSelectedImage(image);\n                                  }}\n                                >\n                                  <ZoomIn className=\"w-4 h-4\" />\n                                </Button>\n                              </div>\n                            </div>\n                            <div className=\"absolute bottom-0 left-0 right-0 bg-black/60 text-white text-xs p-1 text-center\">\n                              Page {image.pageNum}\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </>\n                )}\n\n                {extractedImages.length === 0 && !isProcessing && (\n                  <div className=\"text-center py-8\">\n                    <ImageIcon className=\"w-16 h-16 mx-auto mb-4 text-muted-foreground/50\" />\n                    <p className=\"text-lg font-medium mb-2\">No Images Found</p>\n                    <p className=\"text-muted-foreground mb-4\">This PDF doesn't contain any extractable images</p>\n                    <Button onClick={reset} variant=\"outline\" data-testid=\"button-try-another\">\n                      Try Another PDF\n                    </Button>\n                  </div>\n                )}\n              </>\n            )}\n          </Card>\n\n          {/* Image Preview Modal */}\n          {selectedImage && (\n            <div\n              className=\"fixed inset-0 bg-black/80 z-50 flex items-center justify-center p-4\"\n              onClick={() => setSelectedImage(null)}\n            >\n              <div className=\"relative max-w-4xl max-h-[90vh] overflow-auto\">\n                <img\n                  src={selectedImage.url}\n                  alt=\"Image preview\"\n                  className=\"w-auto h-auto max-w-full max-h-full\"\n                />\n                <div className=\"absolute top-4 right-4 flex gap-2\">\n                  <Button\n                    size=\"sm\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      downloadImage(selectedImage, extractedImages.indexOf(selectedImage));\n                    }}\n                  >\n                    <Download className=\"w-4 h-4 mr-2\" />\n                    Download\n                  </Button>\n                  <Button\n                    size=\"sm\"\n                    variant=\"secondary\"\n                    onClick={() => setSelectedImage(null)}\n                  >\n                    Close\n                  </Button>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Why Use Section */}\n          <Card className=\"p-6 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">Why Use Our PDF Image Extractor?</h2>\n            <div className=\"space-y-2\">\n              <p className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 mt-1\">✓</span>\n                <span>Extract all images with one click</span>\n              </p>\n              <p className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 mt-1\">✓</span>\n                <span>Preserves original image quality</span>\n              </p>\n              <p className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 mt-1\">✓</span>\n                <span>Preview images before downloading</span>\n              </p>\n              <p className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 mt-1\">✓</span>\n                <span>Download individually or all at once</span>\n              </p>\n            </div>\n          </Card>\n\n          {/* How It Works */}\n          <Card className=\"p-6 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">How It Works</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 mx-auto mb-3 rounded-full bg-primary/10 flex items-center justify-center\">\n                  <Upload className=\"w-6 h-6 text-primary\" />\n                </div>\n                <h3 className=\"font-medium mb-1\">1. Upload PDF</h3>\n                <p className=\"text-sm text-muted-foreground\">Select your PDF file</p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 mx-auto mb-3 rounded-full bg-primary/10 flex items-center justify-center\">\n                  <ImageIcon className=\"w-6 h-6 text-primary\" />\n                </div>\n                <h3 className=\"font-medium mb-1\">2. Extract</h3>\n                <p className=\"text-sm text-muted-foreground\">Automatically find images</p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 mx-auto mb-3 rounded-full bg-primary/10 flex items-center justify-center\">\n                  <ZoomIn className=\"w-6 h-6 text-primary\" />\n                </div>\n                <h3 className=\"font-medium mb-1\">3. Preview</h3>\n                <p className=\"text-sm text-muted-foreground\">View extracted images</p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 mx-auto mb-3 rounded-full bg-primary/10 flex items-center justify-center\">\n                  <Download className=\"w-6 h-6 text-primary\" />\n                </div>\n                <h3 className=\"font-medium mb-1\">4. Download</h3>\n                <p className=\"text-sm text-muted-foreground\">Save images</p>\n              </div>\n            </div>\n          </Card>\n\n          {/* Use Cases */}\n          <Card className=\"p-6 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">Common Use Cases</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <h3 className=\"font-medium mb-2\">📸 Photo Recovery</h3>\n                <p className=\"text-sm text-muted-foreground\">Extract photos from PDF albums and portfolios</p>\n              </div>\n              <div>\n                <h3 className=\"font-medium mb-2\">🎨 Design Assets</h3>\n                <p className=\"text-sm text-muted-foreground\">Save graphics and illustrations from PDF documents</p>\n              </div>\n              <div>\n                <h3 className=\"font-medium mb-2\">📊 Chart Extraction</h3>\n                <p className=\"text-sm text-muted-foreground\">Extract graphs and charts from reports</p>\n              </div>\n              <div>\n                <h3 className=\"font-medium mb-2\">🏷️ Logo Collection</h3>\n                <p className=\"text-sm text-muted-foreground\">Save company logos from PDF presentations</p>\n              </div>\n            </div>\n          </Card>\n\n          {/* FAQ */}\n          <Card className=\"p-6\">\n            <h2 className=\"text-2xl font-bold mb-4\">Frequently Asked Questions</h2>\n            <div className=\"space-y-4\">\n              <div>\n                <h3 className=\"font-medium mb-2\">What image formats are supported?</h3>\n                <p className=\"text-sm text-muted-foreground\">The tool extracts images as PNG or JPG format, preserving the original quality.</p>\n              </div>\n              <div>\n                <h3 className=\"font-medium mb-2\">Can I extract images from scanned PDFs?</h3>\n                <p className=\"text-sm text-muted-foreground\">Yes, but scanned PDFs typically contain one large image per page rather than individual images.</p>\n              </div>\n              <div>\n                <h3 className=\"font-medium mb-2\">Is there a limit on PDF size?</h3>\n                <p className=\"text-sm text-muted-foreground\">No fixed limit, but very large PDFs may take longer to process depending on your device.</p>\n              </div>\n              <div>\n                <h3 className=\"font-medium mb-2\">Are vector graphics extracted?</h3>\n                <p className=\"text-sm text-muted-foreground\">Vector graphics are converted to raster images (PNG/JPG) during extraction.</p>\n              </div>\n              <div>\n                <h3 className=\"font-medium mb-2\">Can I select specific images to extract?</h3>\n                <p className=\"text-sm text-muted-foreground\">All images are extracted at once, but you can choose which ones to download individually.</p>\n              </div>\n            </div>\n          </Card>\n        </div>\n      </div>\n\n      <ContactSupportSection />\n    </div>\n\n  );\n}\n","size_bytes":19860},"client/src/pages/extract-pages.tsx":{"content":"import { useState, useCallback } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Input } from \"@/components/ui/input\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useSEO } from \"@/hooks/use-seo\";\nimport { FileOutput, Upload, Download, FileText, Loader2, ArrowLeft, Shield, CheckCircle, Scissors, Mail, BookOpen, Star, Users, Zap, Clock, ChevronRight, Info, HelpCircle, ChevronDown, Layers, RotateCw, FileX } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport FileUpload from \"@/components/ui/file-upload\";\nimport { PDFDocument } from \"pdf-lib\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/components/ui/accordion\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Label } from \"@/components/ui/label\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport * as pdfjsLib from 'pdfjs-dist';\nimport { ContactSupportSection } from \"@/components/contact-support\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\n\n// Configure PDF.js worker - using local worker for privacy\npdfjsLib.GlobalWorkerOptions.workerSrc = '/pdf.worker.min.mjs';\n\ninterface PageThumbnail {\n  pageNum: number;\n  imageUrl: string;\n  selected: boolean;\n}\n\nexport default function ExtractPages() {\n  const [pdfFile, setPdfFile] = useState<File | null>(null);\n  const [pdfDoc, setPdfDoc] = useState<PDFDocument | null>(null);\n  const [pageRange, setPageRange] = useState<string>(\"\");\n  const [selectedPages, setSelectedPages] = useState<Set<number>>(new Set());\n  const [pageThumbnails, setPageThumbnails] = useState<PageThumbnail[]>([]);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [extractedPdf, setExtractedPdf] = useState<Uint8Array | null>(null);\n  const [totalPages, setTotalPages] = useState(0);\n  const { toast } = useToast();\n\n  const structuredData = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebApplication\",\n    \"name\": \"Extract PDF Pages - AltafToolsHub\",\n    \"description\": \"Free online tool to extract specific pages from PDF documents\",\n    \"url\": \"https://www.altaftoolshub.com/extract-pages\",\n    \"applicationCategory\": \"BusinessApplication\",\n    \"operatingSystem\": \"Any\",\n    \"offers\": {\n      \"@type\": \"Offer\",\n      \"price\": \"0\",\n      \"priceCurrency\": \"USD\"\n    },\n    \"aggregateRating\": {\n      \"@type\": \"AggregateRating\",\n      \"ratingValue\": \"4.9\",\n      \"ratingCount\": \"1432\"\n    }\n  };\n\n  useSEO({\n    title: \"Extract PDF Pages Online Free - Select & Save Specific Pages | AltafToolsHub\",\n    description: \"Free online PDF page extractor to save specific pages from PDF documents. Visual selection, range input, and instant extraction. 100% client-side processing.\",\n    path: \"/extract-pages\",\n    keywords: \"extract pdf pages, pdf page extractor, save pdf pages, select pdf pages, pdf extraction tool\",\n    ogImage: \"https://www.altaftoolshub.com/og-extract-pages.png\",\n    structuredData: [structuredData],\n    additionalMetaTags: [\n      { name: \"application-name\", content: \"PDF Page Extractor - AltafToolsHub\" },\n      { property: \"article:section\", content: \"PDF Tools\" }\n    ]\n  });\n\n  const generateThumbnails = async (file: File) => {\n    try {\n      const arrayBuffer = await file.arrayBuffer();\n      const pdf = await pdfjsLib.getDocument(arrayBuffer).promise;\n      const thumbnails: PageThumbnail[] = [];\n      \n      for (let i = 1; i <= pdf.numPages; i++) {\n        const page = await pdf.getPage(i);\n        const viewport = page.getViewport({ scale: 0.3 });\n        \n        const canvas = document.createElement('canvas');\n        const context = canvas.getContext('2d');\n        if (!context) continue;\n        \n        canvas.height = viewport.height;\n        canvas.width = viewport.width;\n        \n        await page.render({\n          canvasContext: context,\n          viewport: viewport,\n          intent: 'display'\n        } as any).promise;\n        \n        thumbnails.push({\n          pageNum: i,\n          imageUrl: canvas.toDataURL('image/jpeg', 0.7),\n          selected: false\n        });\n        \n        setProgress(Math.round((i / pdf.numPages) * 100));\n      }\n      \n      return thumbnails;\n    } catch (error) {\n      console.error('Error generating thumbnails:', error);\n      return [];\n    }\n  };\n\n  const handleFileUpload = useCallback(async (file: File) => {\n    if (file.type !== 'application/pdf') {\n      toast({\n        title: \"Invalid File\",\n        description: \"Please upload a PDF file\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    try {\n      setProgress(10);\n      const arrayBuffer = await file.arrayBuffer();\n      const doc = await PDFDocument.load(arrayBuffer);\n      \n      setPdfFile(file);\n      setPdfDoc(doc);\n      setTotalPages(doc.getPageCount());\n      setExtractedPdf(null);\n      setSelectedPages(new Set());\n      setPageRange(\"\");\n      \n      // Generate thumbnails\n      setProgress(20);\n      const thumbnails = await generateThumbnails(file);\n      setPageThumbnails(thumbnails);\n      setProgress(0);\n      \n      toast({\n        title: \"File Loaded\",\n        description: `PDF loaded with ${doc.getPageCount()} pages`,\n      });\n    } catch (error) {\n      setProgress(0);\n      toast({\n        title: \"Error\",\n        description: \"Failed to load PDF file\",\n        variant: \"destructive\"\n      });\n    }\n  }, [toast]);\n\n  const parsePageRange = (range: string): Set<number> => {\n    const pages = new Set<number>();\n    const parts = range.split(',');\n    \n    for (const part of parts) {\n      const trimmed = part.trim();\n      if (trimmed.includes('-')) {\n        const [start, end] = trimmed.split('-').map(n => parseInt(n.trim()));\n        if (!isNaN(start) && !isNaN(end)) {\n          for (let i = start; i <= Math.min(end, totalPages); i++) {\n            if (i >= 1 && i <= totalPages) pages.add(i);\n          }\n        }\n      } else {\n        const num = parseInt(trimmed);\n        if (!isNaN(num) && num >= 1 && num <= totalPages) {\n          pages.add(num);\n        }\n      }\n    }\n    \n    return pages;\n  };\n\n  const handlePageRangeChange = (value: string) => {\n    setPageRange(value);\n    const pages = parsePageRange(value);\n    setSelectedPages(pages);\n    \n    // Update thumbnails selection\n    setPageThumbnails(prev => prev.map(thumb => ({\n      ...thumb,\n      selected: pages.has(thumb.pageNum)\n    })));\n  };\n\n  const togglePageSelection = (pageNum: number) => {\n    const newSelected = new Set(selectedPages);\n    if (newSelected.has(pageNum)) {\n      newSelected.delete(pageNum);\n    } else {\n      newSelected.add(pageNum);\n    }\n    setSelectedPages(newSelected);\n    \n    // Update thumbnails\n    setPageThumbnails(prev => prev.map(thumb => ({\n      ...thumb,\n      selected: thumb.pageNum === pageNum ? !thumb.selected : thumb.selected\n    })));\n    \n    // Update page range input\n    const sortedPages = Array.from(newSelected).sort((a, b) => a - b);\n    setPageRange(sortedPages.join(', '));\n  };\n\n  const extractPages = async () => {\n    if (!pdfDoc || selectedPages.size === 0) {\n      toast({\n        title: \"No pages selected\",\n        description: \"Please select pages to extract\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    setIsProcessing(true);\n    setProgress(0);\n\n    try {\n      const newPdf = await PDFDocument.create();\n      const sortedPages = Array.from(selectedPages).sort((a, b) => a - b);\n      \n      for (let i = 0; i < sortedPages.length; i++) {\n        const pageNum = sortedPages[i];\n        setProgress(Math.round(((i + 0.5) / sortedPages.length) * 100));\n        \n        const [copiedPage] = await newPdf.copyPages(pdfDoc, [pageNum - 1]);\n        newPdf.addPage(copiedPage);\n        \n        setProgress(Math.round(((i + 1) / sortedPages.length) * 100));\n      }\n\n      const pdfBytes = await newPdf.save();\n      setExtractedPdf(pdfBytes);\n      \n      toast({\n        title: \"Success!\",\n        description: `Extracted ${sortedPages.length} pages successfully`,\n      });\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to extract pages\",\n        variant: \"destructive\"\n      });\n    } finally {\n      setIsProcessing(false);\n      setProgress(0);\n    }\n  };\n\n  const downloadExtractedPdf = () => {\n    if (!extractedPdf || !pdfFile) return;\n    \n    const blob = new Blob([extractedPdf], { type: 'application/pdf' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = pdfFile.name.replace('.pdf', '_extracted.pdf');\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  const reset = () => {\n    setPdfFile(null);\n    setPdfDoc(null);\n    setExtractedPdf(null);\n    setPageThumbnails([]);\n    setSelectedPages(new Set());\n    setPageRange(\"\");\n    setTotalPages(0);\n    setProgress(0);\n  };\n\n  const selectAllPages = () => {\n    const allPages = new Set<number>();\n    for (let i = 1; i <= totalPages; i++) {\n      allPages.add(i);\n    }\n    setSelectedPages(allPages);\n    setPageRange(`1-${totalPages}`);\n    setPageThumbnails(prev => prev.map(thumb => ({ ...thumb, selected: true })));\n  };\n\n  const clearSelection = () => {\n    setSelectedPages(new Set());\n    setPageRange(\"\");\n    setPageThumbnails(prev => prev.map(thumb => ({ ...thumb, selected: false })));\n  };\n\n  return (\n    <div className=\"min-h-screen pattern-bg\">\n      <div className=\"container mx-auto px-4 py-6\">\n        {/* Breadcrumbs */}\n        <nav className=\"flex text-sm text-muted-foreground mb-6\" aria-label=\"Breadcrumb\">\n          <Link href=\"/\" className=\"hover:text-primary transition-colors\">Home</Link>\n          <span className=\"mx-2\">/</span>\n          <Link href=\"/all-tools?category=pdf-management\" className=\"hover:text-primary transition-colors\">PDF Tools</Link>\n          <span className=\"mx-2\">/</span>\n          <span className=\"text-foreground\">Extract Pages</span>\n        </nav>\n\n        <Link href=\"/all-tools?category=pdf-management\">\n          <Button variant=\"ghost\" className=\"mb-4\">\n            <ArrowLeft className=\"w-4 h-4 mr-2\" />\n            Back to PDF Tools\n          </Button>\n        </Link>\n\n        <div className=\"max-w-6xl mx-auto\">\n          <div className=\"text-center mb-8\">\n            <h1 className=\"text-4xl font-bold mb-4\">\n              Extract <span className=\"gradient-text\">PDF Pages</span>\n            </h1>\n            <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n              Select and extract specific pages from your PDF documents. \n              Create new PDFs with only the pages you need.\n            </p>\n          </div>\n\n          {/* Privacy Notice */}\n          <Alert className=\"mb-6\">\n            <Shield className=\"w-4 h-4\" />\n            <AlertDescription>\n              Your PDFs are processed entirely in your browser. Files never leave your device.\n            </AlertDescription>\n          </Alert>\n\n          <Card className=\"p-8 mb-8\">\n            {!extractedPdf ? (\n              <>\n                {!pdfFile ? (\n                  <FileUpload\n                    accept=\"application/pdf\"\n                    onFileSelect={handleFileUpload}\n                    className=\"min-h-[400px]\"\n                    title=\"Drop PDF file here or click to select\"\n                    description=\"Select a PDF to extract pages from\"\n                  />\n                ) : (\n                  <>\n                    {progress > 0 && progress < 100 && !isProcessing && (\n                      <div className=\"mb-6\">\n                        <Progress value={progress} className=\"h-2\" />\n                        <p className=\"text-sm text-center mt-2 text-muted-foreground\">\n                          Loading pages... {progress}%\n                        </p>\n                      </div>\n                    )}\n\n                    {pageThumbnails.length > 0 && (\n                      <>\n                        <div className=\"mb-6\">\n                          <Label htmlFor=\"pageRange\" className=\"mb-2 block\">\n                            Enter page range (e.g., 1-3, 5, 7-10)\n                          </Label>\n                          <div className=\"flex gap-2\">\n                            <Input\n                              id=\"pageRange\"\n                              value={pageRange}\n                              onChange={(e) => handlePageRangeChange(e.target.value)}\n                              placeholder=\"1-3, 5, 7-10\"\n                              className=\"flex-1\"\n                              data-testid=\"input-page-range\"\n                            />\n                            <Button\n                              onClick={selectAllPages}\n                              variant=\"outline\"\n                              size=\"sm\"\n                              data-testid=\"button-select-all\"\n                            >\n                              Select All\n                            </Button>\n                            <Button\n                              onClick={clearSelection}\n                              variant=\"outline\"\n                              size=\"sm\"\n                              data-testid=\"button-clear\"\n                            >\n                              Clear\n                            </Button>\n                          </div>\n                          <p className=\"text-sm text-muted-foreground mt-1\">\n                            {selectedPages.size} of {totalPages} pages selected\n                          </p>\n                        </div>\n\n                        <div className=\"mb-6\">\n                          <h3 className=\"font-medium mb-3\">Click pages to select/deselect</h3>\n                          <div className=\"grid grid-cols-4 sm:grid-cols-6 md:grid-cols-8 gap-4 max-h-96 overflow-y-auto p-2\">\n                            {pageThumbnails.map((thumb) => (\n                              <div\n                                key={thumb.pageNum}\n                                onClick={() => togglePageSelection(thumb.pageNum)}\n                                className={`cursor-pointer transition-all ${\n                                  thumb.selected \n                                    ? 'ring-2 ring-primary ring-offset-2' \n                                    : 'hover:ring-2 hover:ring-primary/50'\n                                }`}\n                                data-testid={`page-thumb-${thumb.pageNum}`}\n                              >\n                                <div className=\"relative\">\n                                  <img\n                                    src={thumb.imageUrl}\n                                    alt={`Page ${thumb.pageNum}`}\n                                    className=\"w-full h-auto border rounded\"\n                                  />\n                                  {thumb.selected && (\n                                    <div className=\"absolute top-1 right-1 bg-primary text-white rounded-full p-1\">\n                                      <CheckCircle className=\"w-4 h-4\" />\n                                    </div>\n                                  )}\n                                  <div className=\"text-center text-xs mt-1\">\n                                    Page {thumb.pageNum}\n                                  </div>\n                                </div>\n                              </div>\n                            ))}\n                          </div>\n                        </div>\n                      </>\n                    )}\n\n                    {isProcessing && (\n                      <div className=\"mb-6\">\n                        <Progress value={progress} className=\"h-2\" />\n                        <p className=\"text-sm text-center mt-2 text-muted-foreground\">\n                          Extracting pages... {progress}%\n                        </p>\n                      </div>\n                    )}\n\n                    <div className=\"flex gap-4\">\n                      <Button\n                        onClick={extractPages}\n                        disabled={isProcessing || selectedPages.size === 0}\n                        className=\"flex-1\"\n                        data-testid=\"button-extract\"\n                      >\n                        {isProcessing ? (\n                          <>\n                            <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\n                            Extracting...\n                          </>\n                        ) : (\n                          <>\n                            <FileOutput className=\"w-4 h-4 mr-2\" />\n                            Extract {selectedPages.size} Page{selectedPages.size !== 1 ? 's' : ''}\n                          </>\n                        )}\n                      </Button>\n                      <Button\n                        onClick={reset}\n                        variant=\"outline\"\n                        disabled={isProcessing}\n                        data-testid=\"button-reset\"\n                      >\n                        Change File\n                      </Button>\n                    </div>\n                  </>\n                )}\n              </>\n            ) : (\n              <div className=\"text-center\">\n                <div className=\"w-16 h-16 mx-auto mb-4 rounded-full bg-green-100 dark:bg-green-900/30 flex items-center justify-center\">\n                  <FileOutput className=\"w-8 h-8 text-green-600 dark:text-green-400\" />\n                </div>\n                <h2 className=\"text-2xl font-bold mb-2\">Pages Extracted Successfully!</h2>\n                <p className=\"text-muted-foreground mb-6\">\n                  {selectedPages.size} pages have been extracted to a new PDF\n                </p>\n                <div className=\"flex gap-4 justify-center\">\n                  <Button onClick={downloadExtractedPdf} size=\"lg\" data-testid=\"button-download\">\n                    <Download className=\"w-4 h-4 mr-2\" />\n                    Download Extracted PDF\n                  </Button>\n                  <Button onClick={reset} variant=\"outline\" size=\"lg\" data-testid=\"button-extract-another\">\n                    Extract More Pages\n                  </Button>\n                </div>\n              </div>\n            )}\n          </Card>\n\n          {/* Why Use Section */}\n          <Card className=\"p-6 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">Why Use Our PDF Page Extractor?</h2>\n            <div className=\"space-y-2\">\n              <p className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 mt-1\">✓</span>\n                <span>Visual page selection with thumbnails</span>\n              </p>\n              <p className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 mt-1\">✓</span>\n                <span>Flexible range input (e.g., 1-5, 8, 10-15)</span>\n              </p>\n              <p className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 mt-1\">✓</span>\n                <span>Preserves original formatting and quality</span>\n              </p>\n              <p className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 mt-1\">✓</span>\n                <span>Extract any combination of pages</span>\n              </p>\n            </div>\n          </Card>\n\n          {/* How It Works */}\n          <Card className=\"p-6 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">How It Works</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 mx-auto mb-3 rounded-full bg-primary/10 flex items-center justify-center\">\n                  <Upload className=\"w-6 h-6 text-primary\" />\n                </div>\n                <h3 className=\"font-medium mb-1\">1. Upload PDF</h3>\n                <p className=\"text-sm text-muted-foreground\">Select your PDF file</p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 mx-auto mb-3 rounded-full bg-primary/10 flex items-center justify-center\">\n                  <CheckCircle className=\"w-6 h-6 text-primary\" />\n                </div>\n                <h3 className=\"font-medium mb-1\">2. Select Pages</h3>\n                <p className=\"text-sm text-muted-foreground\">Choose pages to extract</p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 mx-auto mb-3 rounded-full bg-primary/10 flex items-center justify-center\">\n                  <FileOutput className=\"w-6 h-6 text-primary\" />\n                </div>\n                <h3 className=\"font-medium mb-1\">3. Extract</h3>\n                <p className=\"text-sm text-muted-foreground\">Create new PDF</p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 mx-auto mb-3 rounded-full bg-primary/10 flex items-center justify-center\">\n                  <Download className=\"w-6 h-6 text-primary\" />\n                </div>\n                <h3 className=\"font-medium mb-1\">4. Download</h3>\n                <p className=\"text-sm text-muted-foreground\">Save extracted PDF</p>\n              </div>\n            </div>\n          </Card>\n\n          {/* Use Cases */}\n          <Card className=\"p-6 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">Common Use Cases</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <h3 className=\"font-medium mb-2\">📝 Document Sharing</h3>\n                <p className=\"text-sm text-muted-foreground\">Extract only relevant pages to share with colleagues</p>\n              </div>\n              <div>\n                <h3 className=\"font-medium mb-2\">📚 Study Materials</h3>\n                <p className=\"text-sm text-muted-foreground\">Create focused study guides from textbook chapters</p>\n              </div>\n              <div>\n                <h3 className=\"font-medium mb-2\">📋 Report Sections</h3>\n                <p className=\"text-sm text-muted-foreground\">Extract specific sections from lengthy reports</p>\n              </div>\n              <div>\n                <h3 className=\"font-medium mb-2\">📄 Legal Documents</h3>\n                <p className=\"text-sm text-muted-foreground\">Isolate specific clauses or sections for review</p>\n              </div>\n            </div>\n          </Card>\n\n          {/* Comparison Table */}\n          <Card className=\"p-6 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">Why Choose Our PDF Page Extractor?</h2>\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full\">\n                <thead>\n                  <tr className=\"border-b\">\n                    <th className=\"text-left py-2\">Feature</th>\n                    <th className=\"text-center py-2\">AltafToolsHub</th>\n                    <th className=\"text-center py-2\">Others</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr className=\"border-b\">\n                    <td className=\"py-2\">Visual Page Selection</td>\n                    <td className=\"text-center py-2 text-green-500\">✓</td>\n                    <td className=\"text-center py-2 text-muted-foreground\">Limited</td>\n                  </tr>\n                  <tr className=\"border-b\">\n                    <td className=\"py-2\">Range Input Support</td>\n                    <td className=\"text-center py-2 text-green-500\">✓</td>\n                    <td className=\"text-center py-2 text-yellow-500\">Sometimes</td>\n                  </tr>\n                  <tr className=\"border-b\">\n                    <td className=\"py-2\">100% Client-Side</td>\n                    <td className=\"text-center py-2 text-green-500\">✓</td>\n                    <td className=\"text-center py-2 text-red-500\">✗</td>\n                  </tr>\n                  <tr className=\"border-b\">\n                    <td className=\"py-2\">No Page Limit</td>\n                    <td className=\"text-center py-2 text-green-500\">✓</td>\n                    <td className=\"text-center py-2 text-muted-foreground\">10-50 pages</td>\n                  </tr>\n                  <tr className=\"border-b\">\n                    <td className=\"py-2\">Free Forever</td>\n                    <td className=\"text-center py-2 text-green-500\">✓</td>\n                    <td className=\"text-center py-2 text-red-500\">✗</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </Card>\n\n          {/* Trust Badges */}\n          <Card className=\"p-6 mb-8\">\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-center\">\n              <div>\n                <div className=\"text-3xl font-bold text-primary\">1.4M+</div>\n                <p className=\"text-sm text-muted-foreground\">Pages Extracted</p>\n              </div>\n              <div>\n                <div className=\"text-3xl font-bold text-primary\">4.9/5</div>\n                <p className=\"text-sm text-muted-foreground\">User Rating</p>\n              </div>\n              <div>\n                <div className=\"text-3xl font-bold text-primary\">100%</div>\n                <p className=\"text-sm text-muted-foreground\">Privacy Safe</p>\n              </div>\n              <div>\n                <div className=\"text-3xl font-bold text-primary\">45K+</div>\n                <p className=\"text-sm text-muted-foreground\">Monthly Users</p>\n              </div>\n            </div>\n          </Card>\n\n          {/* User Testimonials */}\n          <Card className=\"p-6 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">What Users Say</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div className=\"border rounded-lg p-4\">\n                <div className=\"flex gap-1 mb-2\">\n                  {[1,2,3,4,5].map(i => (\n                    <span key={i} className=\"text-yellow-500\">★</span>\n                  ))}\n                </div>\n                <p className=\"text-sm mb-2\">\"The visual thumbnails make it so easy to select exactly the pages I need. Saves me tons of time!\"</p>\n                <p className=\"text-sm text-muted-foreground\">- Jennifer P., Legal Assistant</p>\n              </div>\n              <div className=\"border rounded-lg p-4\">\n                <div className=\"flex gap-1 mb-2\">\n                  {[1,2,3,4,5].map(i => (\n                    <span key={i} className=\"text-yellow-500\">★</span>\n                  ))}\n                </div>\n                <p className=\"text-sm mb-2\">\"Range input feature is brilliant! I can extract complex page combinations in seconds.\"</p>\n                <p className=\"text-sm text-muted-foreground\">- Mark D., Researcher</p>\n              </div>\n              <div className=\"border rounded-lg p-4\">\n                <div className=\"flex gap-1 mb-2\">\n                  {[1,2,3,4,5].map(i => (\n                    <span key={i} className=\"text-yellow-500\">★</span>\n                  ))}\n                </div>\n                <p className=\"text-sm mb-2\">\"Perfect for creating handouts from large textbooks. Quality is preserved perfectly!\"</p>\n                <p className=\"text-sm text-muted-foreground\">- Amanda R., Teacher</p>\n              </div>\n            </div>\n          </Card>\n\n          {/* FAQ */}\n          <Card className=\"p-6 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">Frequently Asked Questions</h2>\n            <Accordion type=\"single\" collapsible className=\"w-full\">\n              <AccordionItem value=\"item-1\">\n                <AccordionTrigger>Can I extract non-consecutive pages?</AccordionTrigger>\n                <AccordionContent>\n                  Yes! You can select any combination of pages using ranges and individual page numbers. For example, \"1-3, 7, 9-12\" will extract pages 1, 2, 3, 7, 9, 10, 11, and 12.\n                </AccordionContent>\n              </AccordionItem>\n              <AccordionItem value=\"item-2\">\n                <AccordionTrigger>Does extraction maintain the original quality?</AccordionTrigger>\n                <AccordionContent>\n                  Yes, extracted pages retain the exact quality and formatting of the original PDF. All text, images, hyperlinks, and forms are preserved without any compression or quality loss.\n                </AccordionContent>\n              </AccordionItem>\n              <AccordionItem value=\"item-3\">\n                <AccordionTrigger>Can I reorder pages during extraction?</AccordionTrigger>\n                <AccordionContent>\n                  Pages are extracted in their original order. If you need to reorder pages, first extract them, then use our Organize PDF tool to arrange them in your preferred sequence.\n                </AccordionContent>\n              </AccordionItem>\n              <AccordionItem value=\"item-4\">\n                <AccordionTrigger>Is there a limit to how many pages I can extract?</AccordionTrigger>\n                <AccordionContent>\n                  No, you can extract any number of pages from your PDF, from a single page to all pages. The tool handles large PDFs efficiently in your browser.\n                </AccordionContent>\n              </AccordionItem>\n              <AccordionItem value=\"item-5\">\n                <AccordionTrigger>What's the maximum file size supported?</AccordionTrigger>\n                <AccordionContent>\n                  There's no fixed file size limit since processing happens in your browser. The practical limit depends on your device's available memory, but most PDFs up to 200MB work smoothly.\n                </AccordionContent>\n              </AccordionItem>\n            </Accordion>\n          </Card>\n\n          {/* Technical Details */}\n          <Card className=\"p-6 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">Technical Details</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <h3 className=\"font-medium mb-2\">Extraction Features</h3>\n                <ul className=\"space-y-1 text-sm text-muted-foreground\">\n                  <li>• Visual thumbnail generation</li>\n                  <li>• Range and individual page selection</li>\n                  <li>• Preserves all PDF features</li>\n                  <li>• Maintains document structure</li>\n                  <li>• Supports all PDF versions</li>\n                </ul>\n              </div>\n              <div>\n                <h3 className=\"font-medium mb-2\">Privacy {String.fromCharCode(38)} Security</h3>\n                <ul className=\"space-y-1 text-sm text-muted-foreground\">\n                  <li>• 100% browser-based processing</li>\n                  <li>• No server uploads</li>\n                  <li>• Files never leave your device</li>\n                  <li>• Automatic memory cleanup</li>\n                  <li>• No data retention</li>\n                </ul>\n              </div>\n            </div>\n          </Card>\n\n          {/* Related Tools */}\n          <Card className=\"p-6 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">Related PDF Tools</h2>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              <Link href=\"/split-pdf\">\n                <Button variant=\"outline\" className=\"w-full h-auto py-4 flex flex-col gap-2\">\n                  <Scissors className=\"w-6 h-6\" />\n                  <span>Split PDF</span>\n                </Button>\n              </Link>\n              <Link href=\"/remove-pages\">\n                <Button variant=\"outline\" className=\"w-full h-auto py-4 flex flex-col gap-2\">\n                  <FileX className=\"w-6 h-6\" />\n                  <span>Remove Pages</span>\n                </Button>\n              </Link>\n              <Link href=\"/organize-pdf\">\n                <Button variant=\"outline\" className=\"w-full h-auto py-4 flex flex-col gap-2\">\n                  <Layers className=\"w-6 h-6\" />\n                  <span>Organize PDF</span>\n                </Button>\n              </Link>\n              <Link href=\"/rotate-pdf\">\n                <Button variant=\"outline\" className=\"w-full h-auto py-4 flex flex-col gap-2\">\n                  <RotateCw className=\"w-6 h-6\" />\n                  <span>Rotate PDF</span>\n                </Button>\n              </Link>\n            </div>\n          </Card>\n\n          {/* Contact Support */}\n          <Card className=\"p-6\">\n            <h2 className=\"text-2xl font-bold mb-4\">Need Help?</h2>\n            <p className=\"text-muted-foreground mb-4\">\n              Our support team is here to help you with any questions about extracting PDF pages.\n            </p>\n            <div className=\"flex flex-wrap gap-4\">\n              <a href=\"mailto:altaftoolshub@gmail.com?subject=Help%20with%20Extract%20Pages%20Tool\" className=\"inline-block\">\n                <Button variant=\"outline\">\n                  <Mail className=\"w-4 h-4 mr-2\" />\n                  Email Support\n                </Button>\n              </a>\n              <Link href=\"/faq\">\n                <Button variant=\"outline\">\n                  <HelpCircle className=\"w-4 h-4 mr-2\" />\n                  FAQ\n                </Button>\n              </Link>\n              <Dialog>\n                <DialogTrigger asChild>\n                  <Button variant=\"outline\">\n                    <BookOpen className=\"w-4 h-4 mr-2\" />\n                    Documentation\n                  </Button>\n                </DialogTrigger>\n                <DialogContent className=\"max-w-2xl max-h-[80vh] overflow-y-auto\">\n                  <DialogHeader>\n                    <DialogTitle>How to Extract PDF Pages</DialogTitle>\n                    <DialogDescription>\n                      Complete guide for using the Extract Pages tool\n                    </DialogDescription>\n                  </DialogHeader>\n                  <div className=\"space-y-4 mt-4\">\n                    <div>\n                      <h3 className=\"font-semibold mb-2\">Step 1: Upload Your PDF</h3>\n                      <p className=\"text-muted-foreground\">Click the upload area or drag and drop your PDF file. The file will be processed entirely in your browser for maximum privacy.</p>\n                    </div>\n                    <div>\n                      <h3 className=\"font-semibold mb-2\">Step 2: Select Pages to Extract</h3>\n                      <p className=\"text-muted-foreground\">Enter the page numbers you want to extract. You can specify individual pages (e.g., 1,3,5) or ranges (e.g., 1-5).</p>\n                    </div>\n                    <div>\n                      <h3 className=\"font-semibold mb-2\">Step 3: Extract and Download</h3>\n                      <p className=\"text-muted-foreground\">Click the Extract Pages button. Your new PDF with only the selected pages will be created and downloaded automatically.</p>\n                    </div>\n                    <div className=\"pt-4 border-t\">\n                      <h3 className=\"font-semibold mb-2\">Tips:</h3>\n                      <ul className=\"list-disc list-inside space-y-1 text-muted-foreground\">\n                        <li>Use comma-separated values for specific pages</li>\n                        <li>Use hyphens for page ranges (e.g., 1-10)</li>\n                        <li>Combine both: 1-5, 8, 10-15</li>\n                        <li>All processing happens locally in your browser</li>\n                      </ul>\n                    </div>\n                  </div>\n                </DialogContent>\n              </Dialog>\n            </div>\n          </Card>\n        </div>\n      </div>\n\n      <ContactSupportSection />\n    </div>\n\n  );\n}\n","size_bytes":35944},"client/src/pages/merge-pdf.tsx":{"content":"import { useState, useCallback } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useSEO } from \"@/hooks/use-seo\";\nimport { FilePlus, Upload, Download, X, ChevronUp, ChevronDown, Loader2, GripVertical, FileText, ArrowLeft, Star, Users, Shield, Zap, Clock, CheckCircle2 } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport FileUpload from \"@/components/ui/file-upload\";\nimport { PDFDocument } from \"pdf-lib\";\nimport { cn } from \"@/lib/utils\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { ContactSupportSection } from \"@/components/contact-support\";\n\ninterface PDFFile {\n  id: string;\n  name: string;\n  size: number;\n  pageCount: number;\n  file: File;\n  arrayBuffer?: ArrayBuffer;\n}\n\nexport default function MergePDF() {\n  const [pdfFiles, setPdfFiles] = useState<PDFFile[]>([]);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [mergedPdf, setMergedPdf] = useState<Uint8Array | null>(null);\n  const [draggedIndex, setDraggedIndex] = useState<number | null>(null);\n  const { toast } = useToast();\n\n  // SEO structured data\n  const structuredData = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebApplication\",\n    \"name\": \"PDF Merger - AltafToolsHub\",\n    \"description\": \"Free online PDF merger to combine multiple PDFs into one document\",\n    \"url\": \"https://www.altaftoolshub.com/merge-pdf\",\n    \"applicationCategory\": \"BusinessApplication\",\n    \"operatingSystem\": \"Any\",\n    \"offers\": {\n      \"@type\": \"Offer\",\n      \"price\": \"0\",\n      \"priceCurrency\": \"USD\"\n    },\n    \"aggregateRating\": {\n      \"@type\": \"AggregateRating\",\n      \"ratingValue\": \"4.9\",\n      \"ratingCount\": \"3842\"\n    }\n  };\n\n  useSEO({\n    title: \"Merge PDF Files Online Free - Combine Multiple PDFs | AltafToolsHub\",\n    description: \"Free online PDF merger to combine multiple PDF files into one document. Drag and drop to reorder pages. 100% client-side processing for complete privacy. No file size limits, no registration required.\",\n    path: \"/merge-pdf\",\n    keywords: \"merge pdf, combine pdf, pdf merger, join pdf files, combine pdf files, merge pdf online, free pdf merger, pdf combiner\",\n    ogImage: \"https://www.altaftoolshub.com/og-merge-pdf.png\",\n    structuredData: [structuredData],\n    additionalMetaTags: [\n      { name: \"application-name\", content: \"PDF Merger - AltafToolsHub\" },\n      { property: \"article:section\", content: \"PDF Tools\" },\n      { property: \"article:modified_time\", content: new Date().toISOString() }\n    ]\n  });\n\n  const handleFileUpload = useCallback(async (files: FileList | File[]) => {\n    const fileArray = Array.from(files);\n    const validFiles = fileArray.filter(file => file.type === 'application/pdf');\n    \n    if (validFiles.length === 0) {\n      toast({\n        title: \"Invalid Files\",\n        description: \"Please upload only PDF files\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    const newPdfFiles: PDFFile[] = [];\n    \n    for (const file of validFiles) {\n      try {\n        const arrayBuffer = await file.arrayBuffer();\n        const pdfDoc = await PDFDocument.load(arrayBuffer);\n        const pageCount = pdfDoc.getPageCount();\n        \n        newPdfFiles.push({\n          id: `${Date.now()}-${Math.random()}`,\n          name: file.name,\n          size: file.size,\n          pageCount,\n          file,\n          arrayBuffer\n        });\n      } catch (error) {\n        toast({\n          title: \"Error\",\n          description: `Failed to load ${file.name}`,\n          variant: \"destructive\"\n        });\n      }\n    }\n\n    setPdfFiles(prev => [...prev, ...newPdfFiles]);\n    toast({\n      title: \"Files Added\",\n      description: `Added ${newPdfFiles.length} PDF file(s)`,\n    });\n  }, [toast]);\n\n  const removeFile = (id: string) => {\n    setPdfFiles(prev => prev.filter(f => f.id !== id));\n  };\n\n  const moveFile = (fromIndex: number, toIndex: number) => {\n    setPdfFiles(prev => {\n      const newFiles = [...prev];\n      const [removed] = newFiles.splice(fromIndex, 1);\n      newFiles.splice(toIndex, 0, removed);\n      return newFiles;\n    });\n  };\n\n  const handleDragStart = (index: number) => {\n    setDraggedIndex(index);\n  };\n\n  const handleDragOver = (e: React.DragEvent, index: number) => {\n    e.preventDefault();\n    if (draggedIndex !== null && draggedIndex !== index) {\n      moveFile(draggedIndex, index);\n      setDraggedIndex(index);\n    }\n  };\n\n  const handleDragEnd = () => {\n    setDraggedIndex(null);\n  };\n\n  const mergePDFs = async () => {\n    if (pdfFiles.length < 2) {\n      toast({\n        title: \"Not enough files\",\n        description: \"Please add at least 2 PDF files to merge\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    setIsProcessing(true);\n    setProgress(0);\n\n    try {\n      const mergedPdf = await PDFDocument.create();\n      const totalFiles = pdfFiles.length;\n\n      for (let i = 0; i < totalFiles; i++) {\n        const file = pdfFiles[i];\n        setProgress(Math.round(((i + 0.5) / totalFiles) * 100));\n        \n        const pdfDoc = await PDFDocument.load(file.arrayBuffer!);\n        const pages = await mergedPdf.copyPages(pdfDoc, pdfDoc.getPageIndices());\n        \n        pages.forEach(page => mergedPdf.addPage(page));\n        setProgress(Math.round(((i + 1) / totalFiles) * 100));\n      }\n\n      const mergedPdfBytes = await mergedPdf.save();\n      setMergedPdf(mergedPdfBytes);\n      \n      toast({\n        title: \"Success!\",\n        description: \"PDFs merged successfully\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to merge PDFs. Please try again.\",\n        variant: \"destructive\"\n      });\n    } finally {\n      setIsProcessing(false);\n      setProgress(0);\n    }\n  };\n\n  const downloadMergedPdf = () => {\n    if (!mergedPdf) return;\n    \n    const blob = new Blob([mergedPdf], { type: 'application/pdf' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'merged-document.pdf';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  const reset = () => {\n    setPdfFiles([]);\n    setMergedPdf(null);\n    setProgress(0);\n  };\n\n  const formatFileSize = (bytes: number) => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return Math.round(bytes / Math.pow(k, i) * 100) / 100 + ' ' + sizes[i];\n  };\n\n  return (\n    <div className=\"min-h-screen pattern-bg\">\n      <div className=\"container mx-auto px-4 py-6\">\n        {/* Breadcrumbs */}\n        <nav className=\"flex text-sm text-muted-foreground mb-6\" aria-label=\"Breadcrumb\">\n          <Link href=\"/\" className=\"hover:text-primary transition-colors\">Home</Link>\n          <span className=\"mx-2\">/</span>\n          <Link href=\"/all-tools?category=pdf-management\" className=\"hover:text-primary transition-colors\">PDF Tools</Link>\n          <span className=\"mx-2\">/</span>\n          <span className=\"text-foreground\">Merge PDF</span>\n        </nav>\n\n        <Link href=\"/all-tools?category=pdf-management\">\n          <Button variant=\"ghost\" className=\"mb-4\">\n            <ArrowLeft className=\"w-4 h-4 mr-2\" />\n            Back to PDF Tools\n          </Button>\n        </Link>\n\n        <div className=\"max-w-6xl mx-auto\">\n          {/* Hero Section */}\n          <div className=\"text-center mb-12\">\n            <div className=\"flex justify-center mb-4\">\n              <Badge className=\"px-4 py-1 text-sm\" variant=\"secondary\">\n                <Star className=\"w-4 h-4 mr-1 fill-yellow-500 text-yellow-500\" />\n                Trusted by 50,000+ users worldwide\n              </Badge>\n            </div>\n            <h1 className=\"text-5xl font-bold mb-4\">\n              Merge <span className=\"gradient-text\">PDF Files</span> Online\n            </h1>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto mb-6\">\n              Combine multiple PDF files into a single document in seconds. \n              100% free, no registration required, and completely secure with client-side processing.\n            </p>\n            \n            {/* Trust Indicators */}\n            <div className=\"flex justify-center gap-8 mb-8\">\n              <div className=\"flex items-center gap-2\">\n                <Shield className=\"w-5 h-5 text-green-500\" />\n                <span className=\"text-sm font-medium\">100% Secure</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <Zap className=\"w-5 h-5 text-yellow-500\" />\n                <span className=\"text-sm font-medium\">Lightning Fast</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <Users className=\"w-5 h-5 text-blue-500\" />\n                <span className=\"text-sm font-medium\">No Account Needed</span>\n              </div>\n            </div>\n          </div>\n\n          {/* Privacy Notice */}\n          <Alert className=\"mb-8 border-green-200 dark:border-green-900 bg-green-50 dark:bg-green-900/20\">\n            <Shield className=\"w-5 h-5 text-green-600 dark:text-green-400\" />\n            <AlertDescription className=\"text-green-800 dark:text-green-200\">\n              <strong>100% Privacy Guaranteed:</strong> Your PDFs are merged entirely in your browser. \n              No files are uploaded to any server, ensuring complete privacy and security.\n            </AlertDescription>\n          </Alert>\n\n          {/* Main Tool Card */}\n          <Card className=\"p-10 mb-12 shadow-xl\">\n            {!mergedPdf ? (\n              <>\n                {pdfFiles.length === 0 ? (\n                  <div className=\"space-y-6\">\n                    <FileUpload\n                      accept=\"application/pdf\"\n                      multiple\n                      onFilesSelect={handleFileUpload}\n                      className=\"min-h-[400px]\"\n                      title=\"Drop PDF files here or click to browse\"\n                      description=\"You can select multiple PDF files at once. All processing happens in your browser for maximum security.\"\n                      maxSize={100 * 1024 * 1024} // 100MB\n                    />\n                    \n                    {/* Quick Tips */}\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mt-6\">\n                      <div className=\"text-center p-4 rounded-lg bg-muted/50\">\n                        <FilePlus className=\"w-8 h-8 mx-auto mb-2 text-primary\" />\n                        <p className=\"text-sm font-medium\">Unlimited Files</p>\n                        <p className=\"text-xs text-muted-foreground\">Merge as many PDFs as you need</p>\n                      </div>\n                      <div className=\"text-center p-4 rounded-lg bg-muted/50\">\n                        <GripVertical className=\"w-8 h-8 mx-auto mb-2 text-primary\" />\n                        <p className=\"text-sm font-medium\">Drag to Reorder</p>\n                        <p className=\"text-xs text-muted-foreground\">Arrange files in any order</p>\n                      </div>\n                      <div className=\"text-center p-4 rounded-lg bg-muted/50\">\n                        <Clock className=\"w-8 h-8 mx-auto mb-2 text-primary\" />\n                        <p className=\"text-sm font-medium\">Instant Processing</p>\n                        <p className=\"text-xs text-muted-foreground\">Merge PDFs in seconds</p>\n                      </div>\n                    </div>\n                  </div>\n                ) : (\n                  <>\n                    {/* Files List */}\n                    <div className=\"mb-6\">\n                      <div className=\"flex items-center justify-between mb-4\">\n                        <h3 className=\"text-lg font-semibold\">\n                          {pdfFiles.length} PDF{pdfFiles.length !== 1 ? 's' : ''} ready to merge\n                        </h3>\n                        <span className=\"text-sm text-muted-foreground\">\n                          Total pages: {pdfFiles.reduce((sum, f) => sum + f.pageCount, 0)}\n                        </span>\n                      </div>\n                      \n                      <div className=\"space-y-3\">\n                        {pdfFiles.map((file, index) => (\n                          <div\n                            key={file.id}\n                            draggable\n                            onDragStart={() => handleDragStart(index)}\n                            onDragOver={(e) => handleDragOver(e, index)}\n                            onDragEnd={handleDragEnd}\n                            className={cn(\n                              \"flex items-center gap-4 p-5 rounded-xl border-2 bg-card hover:bg-muted/50 transition-all cursor-move\",\n                              \"hover:shadow-md hover:border-primary/30\",\n                              draggedIndex === index && \"opacity-50 scale-95\"\n                            )}\n                            data-testid={`pdf-file-${index}`}\n                          >\n                            <GripVertical className=\"w-5 h-5 text-muted-foreground/50\" />\n                            <div className=\"flex-shrink-0\">\n                              <div className=\"w-12 h-12 rounded-lg bg-gradient-to-br from-red-500 to-red-600 flex items-center justify-center\">\n                                <FileText className=\"w-7 h-7 text-white\" />\n                              </div>\n                            </div>\n                            <div className=\"flex-1 min-w-0\">\n                              <p className=\"font-semibold truncate\">{file.name}</p>\n                              <p className=\"text-sm text-muted-foreground\">\n                                {file.pageCount} page{file.pageCount !== 1 ? 's' : ''} • {formatFileSize(file.size)}\n                              </p>\n                            </div>\n                            <div className=\"flex items-center gap-1\">\n                              <Button\n                                variant=\"ghost\"\n                                size=\"icon\"\n                                onClick={() => index > 0 && moveFile(index, index - 1)}\n                                disabled={index === 0}\n                                data-testid={`move-up-${index}`}\n                                className=\"h-8 w-8\"\n                              >\n                                <ChevronUp className=\"w-4 h-4\" />\n                              </Button>\n                              <Button\n                                variant=\"ghost\"\n                                size=\"icon\"\n                                onClick={() => index < pdfFiles.length - 1 && moveFile(index, index + 1)}\n                                disabled={index === pdfFiles.length - 1}\n                                data-testid={`move-down-${index}`}\n                                className=\"h-8 w-8\"\n                              >\n                                <ChevronDown className=\"w-4 h-4\" />\n                              </Button>\n                              <Button\n                                variant=\"ghost\"\n                                size=\"icon\"\n                                onClick={() => removeFile(file.id)}\n                                className=\"h-8 w-8 text-destructive hover:text-destructive hover:bg-destructive/10\"\n                                data-testid={`remove-${index}`}\n                              >\n                                <X className=\"w-4 h-4\" />\n                              </Button>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n\n                    {/* Add More Files */}\n                    <div className=\"mb-8\">\n                      <FileUpload\n                        accept=\"application/pdf\"\n                        multiple\n                        onFilesSelect={handleFileUpload}\n                        className=\"min-h-[200px]\"\n                        title=\"Add more PDF files\"\n                        description=\"Drag and drop or click to add more PDFs to merge\"\n                        maxSize={100 * 1024 * 1024}\n                      />\n                    </div>\n\n                    {/* Progress Bar */}\n                    {isProcessing && (\n                      <div className=\"mb-6\">\n                        <Progress value={progress} className=\"h-3\" />\n                        <p className=\"text-sm text-center mt-3 text-muted-foreground font-medium\">\n                          Merging PDFs... {progress}%\n                        </p>\n                      </div>\n                    )}\n\n                    {/* Action Buttons */}\n                    <div className=\"flex gap-4\">\n                      <Button\n                        onClick={mergePDFs}\n                        disabled={isProcessing || pdfFiles.length < 2}\n                        className=\"flex-1 h-12 text-base\"\n                        data-testid=\"button-merge\"\n                      >\n                        {isProcessing ? (\n                          <>\n                            <Loader2 className=\"w-5 h-5 mr-2 animate-spin\" />\n                            Merging {pdfFiles.length} PDFs...\n                          </>\n                        ) : (\n                          <>\n                            <FilePlus className=\"w-5 h-5 mr-2\" />\n                            Merge {pdfFiles.length} PDFs into One\n                          </>\n                        )}\n                      </Button>\n                      <Button\n                        onClick={reset}\n                        variant=\"outline\"\n                        disabled={isProcessing}\n                        className=\"h-12\"\n                        data-testid=\"button-reset\"\n                      >\n                        Clear All\n                      </Button>\n                    </div>\n                  </>\n                )}\n              </>\n            ) : (\n              <div className=\"text-center py-8\">\n                <div className=\"w-20 h-20 mx-auto mb-6 rounded-full bg-green-100 dark:bg-green-900/30 flex items-center justify-center\">\n                  <CheckCircle2 className=\"w-10 h-10 text-green-600 dark:text-green-400\" />\n                </div>\n                <h2 className=\"text-3xl font-bold mb-3\">PDFs Merged Successfully!</h2>\n                <p className=\"text-lg text-muted-foreground mb-8\">\n                  Your {pdfFiles.length} PDF files have been combined into a single document\n                </p>\n                <div className=\"flex gap-4 justify-center\">\n                  <Button onClick={downloadMergedPdf} size=\"lg\" className=\"h-12 px-8\" data-testid=\"button-download\">\n                    <Download className=\"w-5 h-5 mr-2\" />\n                    Download Merged PDF\n                  </Button>\n                  <Button onClick={reset} variant=\"outline\" size=\"lg\" className=\"h-12 px-8\" data-testid=\"button-merge-more\">\n                    Merge More PDFs\n                  </Button>\n                </div>\n              </div>\n            )}\n          </Card>\n\n          {/* Ratings & Reviews */}\n          <Card className=\"p-8 mb-8 bg-gradient-to-r from-primary/5 to-primary/10\">\n            <div className=\"text-center mb-6\">\n              <h2 className=\"text-3xl font-bold mb-2\">Trusted by Thousands</h2>\n              <div className=\"flex justify-center items-center gap-2 mb-2\">\n                <div className=\"flex\">\n                  {[1, 2, 3, 4, 5].map((i) => (\n                    <Star key={i} className=\"w-6 h-6 fill-yellow-500 text-yellow-500\" />\n                  ))}\n                </div>\n                <span className=\"text-2xl font-bold\">4.9</span>\n                <span className=\"text-muted-foreground\">(3,842 reviews)</span>\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n              <div className=\"bg-background p-4 rounded-lg\">\n                <div className=\"flex mb-2\">\n                  {[1, 2, 3, 4, 5].map((i) => (\n                    <Star key={i} className=\"w-4 h-4 fill-yellow-500 text-yellow-500\" />\n                  ))}\n                </div>\n                <p className=\"text-sm mb-2\">\"Incredibly fast and easy to use! Merged 10 PDFs in seconds without any quality loss.\"</p>\n                <p className=\"text-xs text-muted-foreground\">- Sarah Johnson, Project Manager</p>\n              </div>\n              <div className=\"bg-background p-4 rounded-lg\">\n                <div className=\"flex mb-2\">\n                  {[1, 2, 3, 4, 5].map((i) => (\n                    <Star key={i} className=\"w-4 h-4 fill-yellow-500 text-yellow-500\" />\n                  ))}\n                </div>\n                <p className=\"text-sm mb-2\">\"The best part is that it works offline and my confidential documents never leave my computer.\"</p>\n                <p className=\"text-xs text-muted-foreground\">- Michael Chen, Legal Advisor</p>\n              </div>\n              <div className=\"bg-background p-4 rounded-lg\">\n                <div className=\"flex mb-2\">\n                  {[1, 2, 3, 4, 5].map((i) => (\n                    <Star key={i} className=\"w-4 h-4 fill-yellow-500 text-yellow-500\" />\n                  ))}\n                </div>\n                <p className=\"text-sm mb-2\">\"Free, no watermarks, no limits. This tool saved me so much time and money!\"</p>\n                <p className=\"text-xs text-muted-foreground\">- Emily Rodriguez, Student</p>\n              </div>\n            </div>\n          </Card>\n\n          {/* Comparison Table */}\n          <Card className=\"p-8 mb-8\">\n            <h2 className=\"text-3xl font-bold mb-6 text-center\">Why Choose AltafToolsHub?</h2>\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full\">\n                <thead>\n                  <tr className=\"border-b\">\n                    <th className=\"text-left py-3 px-4\">Features</th>\n                    <th className=\"text-center py-3 px-4\">\n                      <div className=\"font-bold text-primary\">AltafToolsHub</div>\n                      <div className=\"text-xs text-muted-foreground\">Free Forever</div>\n                    </th>\n                    <th className=\"text-center py-3 px-4\">\n                      <div>Adobe Acrobat</div>\n                      <div className=\"text-xs text-muted-foreground\">$19.99/month</div>\n                    </th>\n                    <th className=\"text-center py-3 px-4\">\n                      <div>SmallPDF</div>\n                      <div className=\"text-xs text-muted-foreground\">$12/month</div>\n                    </th>\n                    <th className=\"text-center py-3 px-4\">\n                      <div>iLovePDF</div>\n                      <div className=\"text-xs text-muted-foreground\">$9/month</div>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr className=\"border-b\">\n                    <td className=\"py-3 px-4\">100% Privacy (Client-side)</td>\n                    <td className=\"text-center py-3 px-4\">\n                      <CheckCircle2 className=\"w-5 h-5 text-green-500 mx-auto\" />\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <X className=\"w-5 h-5 text-red-500 mx-auto\" />\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <X className=\"w-5 h-5 text-red-500 mx-auto\" />\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <X className=\"w-5 h-5 text-red-500 mx-auto\" />\n                    </td>\n                  </tr>\n                  <tr className=\"border-b\">\n                    <td className=\"py-3 px-4\">No File Size Limits</td>\n                    <td className=\"text-center py-3 px-4\">\n                      <CheckCircle2 className=\"w-5 h-5 text-green-500 mx-auto\" />\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <CheckCircle2 className=\"w-5 h-5 text-green-500 mx-auto\" />\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <span className=\"text-yellow-500\">5MB (Free)</span>\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <span className=\"text-yellow-500\">25MB (Free)</span>\n                    </td>\n                  </tr>\n                  <tr className=\"border-b\">\n                    <td className=\"py-3 px-4\">Unlimited Merges</td>\n                    <td className=\"text-center py-3 px-4\">\n                      <CheckCircle2 className=\"w-5 h-5 text-green-500 mx-auto\" />\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <CheckCircle2 className=\"w-5 h-5 text-green-500 mx-auto\" />\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <span className=\"text-yellow-500\">2/day (Free)</span>\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <span className=\"text-yellow-500\">Limited (Free)</span>\n                    </td>\n                  </tr>\n                  <tr className=\"border-b\">\n                    <td className=\"py-3 px-4\">No Registration Required</td>\n                    <td className=\"text-center py-3 px-4\">\n                      <CheckCircle2 className=\"w-5 h-5 text-green-500 mx-auto\" />\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <X className=\"w-5 h-5 text-red-500 mx-auto\" />\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <X className=\"w-5 h-5 text-red-500 mx-auto\" />\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <CheckCircle2 className=\"w-5 h-5 text-green-500 mx-auto\" />\n                    </td>\n                  </tr>\n                  <tr className=\"border-b\">\n                    <td className=\"py-3 px-4\">No Watermarks</td>\n                    <td className=\"text-center py-3 px-4\">\n                      <CheckCircle2 className=\"w-5 h-5 text-green-500 mx-auto\" />\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <CheckCircle2 className=\"w-5 h-5 text-green-500 mx-auto\" />\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <CheckCircle2 className=\"w-5 h-5 text-green-500 mx-auto\" />\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <span className=\"text-yellow-500\">With logo</span>\n                    </td>\n                  </tr>\n                  <tr className=\"border-b\">\n                    <td className=\"py-3 px-4\">Works Offline</td>\n                    <td className=\"text-center py-3 px-4\">\n                      <CheckCircle2 className=\"w-5 h-5 text-green-500 mx-auto\" />\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <CheckCircle2 className=\"w-5 h-5 text-green-500 mx-auto\" />\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <X className=\"w-5 h-5 text-red-500 mx-auto\" />\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <X className=\"w-5 h-5 text-red-500 mx-auto\" />\n                    </td>\n                  </tr>\n                  <tr>\n                    <td className=\"py-3 px-4 font-semibold\">Price</td>\n                    <td className=\"text-center py-3 px-4\">\n                      <span className=\"text-2xl font-bold text-green-500\">FREE</span>\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <span className=\"text-lg\">$19.99/mo</span>\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <span className=\"text-lg\">$12/mo</span>\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <span className=\"text-lg\">$9/mo</span>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </Card>\n\n          {/* Features Section */}\n          <Card className=\"p-8 mb-8\">\n            <h2 className=\"text-3xl font-bold mb-6\">Key Features</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              <div className=\"flex gap-4\">\n                <div className=\"flex-shrink-0\">\n                  <div className=\"w-12 h-12 rounded-lg bg-primary/10 flex items-center justify-center\">\n                    <Shield className=\"w-6 h-6 text-primary\" />\n                  </div>\n                </div>\n                <div>\n                  <h3 className=\"font-semibold mb-1\">100% Secure & Private</h3>\n                  <p className=\"text-sm text-muted-foreground\">Files never leave your browser. All processing happens locally on your device.</p>\n                </div>\n              </div>\n              <div className=\"flex gap-4\">\n                <div className=\"flex-shrink-0\">\n                  <div className=\"w-12 h-12 rounded-lg bg-primary/10 flex items-center justify-center\">\n                    <Zap className=\"w-6 h-6 text-primary\" />\n                  </div>\n                </div>\n                <div>\n                  <h3 className=\"font-semibold mb-1\">Lightning Fast</h3>\n                  <p className=\"text-sm text-muted-foreground\">Merge PDFs instantly with no upload wait time or server processing delays.</p>\n                </div>\n              </div>\n              <div className=\"flex gap-4\">\n                <div className=\"flex-shrink-0\">\n                  <div className=\"w-12 h-12 rounded-lg bg-primary/10 flex items-center justify-center\">\n                    <FilePlus className=\"w-6 h-6 text-primary\" />\n                  </div>\n                </div>\n                <div>\n                  <h3 className=\"font-semibold mb-1\">No Limits</h3>\n                  <p className=\"text-sm text-muted-foreground\">Merge unlimited PDFs with no file size restrictions or daily quotas.</p>\n                </div>\n              </div>\n              <div className=\"flex gap-4\">\n                <div className=\"flex-shrink-0\">\n                  <div className=\"w-12 h-12 rounded-lg bg-primary/10 flex items-center justify-center\">\n                    <GripVertical className=\"w-6 h-6 text-primary\" />\n                  </div>\n                </div>\n                <div>\n                  <h3 className=\"font-semibold mb-1\">Drag & Drop Ordering</h3>\n                  <p className=\"text-sm text-muted-foreground\">Easily rearrange PDF files in any order before merging.</p>\n                </div>\n              </div>\n              <div className=\"flex gap-4\">\n                <div className=\"flex-shrink-0\">\n                  <div className=\"w-12 h-12 rounded-lg bg-primary/10 flex items-center justify-center\">\n                    <CheckCircle2 className=\"w-6 h-6 text-primary\" />\n                  </div>\n                </div>\n                <div>\n                  <h3 className=\"font-semibold mb-1\">Quality Preserved</h3>\n                  <p className=\"text-sm text-muted-foreground\">Original PDF quality maintained with no compression or watermarks.</p>\n                </div>\n              </div>\n              <div className=\"flex gap-4\">\n                <div className=\"flex-shrink-0\">\n                  <div className=\"w-12 h-12 rounded-lg bg-primary/10 flex items-center justify-center\">\n                    <Users className=\"w-6 h-6 text-primary\" />\n                  </div>\n                </div>\n                <div>\n                  <h3 className=\"font-semibold mb-1\">No Registration</h3>\n                  <p className=\"text-sm text-muted-foreground\">Start merging immediately without creating an account or signing in.</p>\n                </div>\n              </div>\n            </div>\n          </Card>\n\n          {/* How It Works */}\n          <Card className=\"p-8 mb-8\">\n            <h2 className=\"text-3xl font-bold mb-6\">How to Merge PDF Files</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n              <div>\n                <div className=\"relative\">\n                  <div className=\"w-16 h-16 mx-auto mb-4 rounded-full bg-gradient-to-br from-primary to-primary/60 flex items-center justify-center text-white font-bold text-xl\">\n                    1\n                  </div>\n                </div>\n                <h3 className=\"font-semibold text-center mb-2\">Upload PDFs</h3>\n                <p className=\"text-sm text-muted-foreground text-center\">\n                  Click or drag multiple PDF files into the upload area\n                </p>\n              </div>\n              <div>\n                <div className=\"relative\">\n                  <div className=\"w-16 h-16 mx-auto mb-4 rounded-full bg-gradient-to-br from-primary to-primary/60 flex items-center justify-center text-white font-bold text-xl\">\n                    2\n                  </div>\n                </div>\n                <h3 className=\"font-semibold text-center mb-2\">Arrange Order</h3>\n                <p className=\"text-sm text-muted-foreground text-center\">\n                  Drag and drop to rearrange files in your desired order\n                </p>\n              </div>\n              <div>\n                <div className=\"relative\">\n                  <div className=\"w-16 h-16 mx-auto mb-4 rounded-full bg-gradient-to-br from-primary to-primary/60 flex items-center justify-center text-white font-bold text-xl\">\n                    3\n                  </div>\n                </div>\n                <h3 className=\"font-semibold text-center mb-2\">Click Merge</h3>\n                <p className=\"text-sm text-muted-foreground text-center\">\n                  Click the merge button to combine all PDFs instantly\n                </p>\n              </div>\n              <div>\n                <div className=\"relative\">\n                  <div className=\"w-16 h-16 mx-auto mb-4 rounded-full bg-gradient-to-br from-primary to-primary/60 flex items-center justify-center text-white font-bold text-xl\">\n                    4\n                  </div>\n                </div>\n                <h3 className=\"font-semibold text-center mb-2\">Download Result</h3>\n                <p className=\"text-sm text-muted-foreground text-center\">\n                  Save your merged PDF to your device\n                </p>\n              </div>\n            </div>\n          </Card>\n\n          {/* Use Cases */}\n          <Card className=\"p-8 mb-8\">\n            <h2 className=\"text-3xl font-bold mb-6\">Common Use Cases</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div className=\"flex gap-4\">\n                <div className=\"text-2xl\">📚</div>\n                <div>\n                  <h3 className=\"font-semibold mb-1\">Educational Materials</h3>\n                  <p className=\"text-sm text-muted-foreground\">\n                    Combine lecture notes, assignments, and study materials into a single PDF for easy reference.\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex gap-4\">\n                <div className=\"text-2xl\">💼</div>\n                <div>\n                  <h3 className=\"font-semibold mb-1\">Business Documents</h3>\n                  <p className=\"text-sm text-muted-foreground\">\n                    Merge contracts, proposals, and reports into comprehensive business packages.\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex gap-4\">\n                <div className=\"text-2xl\">📊</div>\n                <div>\n                  <h3 className=\"font-semibold mb-1\">Financial Records</h3>\n                  <p className=\"text-sm text-muted-foreground\">\n                    Consolidate invoices, receipts, and statements for accounting or tax purposes.\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex gap-4\">\n                <div className=\"text-2xl\">📖</div>\n                <div>\n                  <h3 className=\"font-semibold mb-1\">E-books & Publications</h3>\n                  <p className=\"text-sm text-muted-foreground\">\n                    Combine chapters and sections to create complete digital books or magazines.\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex gap-4\">\n                <div className=\"text-2xl\">🏗️</div>\n                <div>\n                  <h3 className=\"font-semibold mb-1\">Project Documentation</h3>\n                  <p className=\"text-sm text-muted-foreground\">\n                    Unite project plans, specifications, and drawings into a single deliverable.\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex gap-4\">\n                <div className=\"text-2xl\">⚖️</div>\n                <div>\n                  <h3 className=\"font-semibold mb-1\">Legal Filings</h3>\n                  <p className=\"text-sm text-muted-foreground\">\n                    Merge legal documents, evidence, and exhibits for court submissions.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </Card>\n\n          {/* Comprehensive FAQ */}\n          <Card className=\"p-8\">\n            <h2 className=\"text-3xl font-bold mb-6\">Frequently Asked Questions</h2>\n            <div className=\"space-y-6\">\n              <div className=\"pb-4 border-b\">\n                <h3 className=\"font-semibold mb-2 text-lg\">How many PDFs can I merge at once?</h3>\n                <p className=\"text-muted-foreground\">\n                  You can merge unlimited PDF files at once. There's no restriction on the number of files. \n                  The only limitation is your device's available memory and processing power. \n                  We've successfully tested merging over 100 PDFs in a single operation.\n                </p>\n              </div>\n              <div className=\"pb-4 border-b\">\n                <h3 className=\"font-semibold mb-2 text-lg\">Is there a file size limit for merging?</h3>\n                <p className=\"text-muted-foreground\">\n                  No, there's no fixed file size limit. Since all processing happens in your browser, \n                  you can merge PDFs of any size. Large files (100MB+) work perfectly fine. \n                  The processing speed depends on your device's performance.\n                </p>\n              </div>\n              <div className=\"pb-4 border-b\">\n                <h3 className=\"font-semibold mb-2 text-lg\">Will merging affect the quality of my PDFs?</h3>\n                <p className=\"text-muted-foreground\">\n                  Absolutely not. Our merger preserves the exact quality of your original PDFs. \n                  All text remains searchable, images stay at their original resolution, \n                  and formatting is perfectly maintained. No compression is applied unless you specifically use our compression tool afterward.\n                </p>\n              </div>\n              <div className=\"pb-4 border-b\">\n                <h3 className=\"font-semibold mb-2 text-lg\">Can I rearrange individual pages from different PDFs?</h3>\n                <p className=\"text-muted-foreground\">\n                  This tool merges complete PDF files in the order you arrange them. \n                  To rearrange individual pages from multiple PDFs, first merge them, \n                  then use our \"Organize PDF\" tool to reorder specific pages within the merged document.\n                </p>\n              </div>\n              <div className=\"pb-4 border-b\">\n                <h3 className=\"font-semibold mb-2 text-lg\">Is it really free? What's the catch?</h3>\n                <p className=\"text-muted-foreground\">\n                  Yes, it's 100% free forever with no catch. We don't require registration, \n                  there are no hidden fees, no watermarks, and no limitations. \n                  Since everything runs in your browser, we have minimal server costs. \n                  We monetize through non-intrusive ads and optional premium features for other tools.\n                </p>\n              </div>\n              <div className=\"pb-4 border-b\">\n                <h3 className=\"font-semibold mb-2 text-lg\">How secure is this tool? Can you see my files?</h3>\n                <p className=\"text-muted-foreground\">\n                  Your files never leave your device. All processing happens directly in your web browser using JavaScript. \n                  We cannot see, access, or store your files because they're never uploaded to our servers. \n                  This makes it 100% secure and private - perfect for confidential documents.\n                </p>\n              </div>\n              <div className=\"pb-4 border-b\">\n                <h3 className=\"font-semibold mb-2 text-lg\">Can I merge password-protected PDFs?</h3>\n                <p className=\"text-muted-foreground\">\n                  Currently, encrypted PDFs need to be unlocked first. \n                  Use our \"Unlock PDF\" tool to remove passwords, then merge the unlocked files. \n                  The merged result won't have password protection, but you can add it back using our \"Protect PDF\" tool.\n                </p>\n              </div>\n              <div className=\"pb-4 border-b\">\n                <h3 className=\"font-semibold mb-2 text-lg\">Does it work on mobile devices?</h3>\n                <p className=\"text-muted-foreground\">\n                  Yes, our PDF merger works perfectly on all modern mobile browsers including \n                  iOS Safari and Android Chrome. The interface is fully responsive and touch-optimized. \n                  However, for best performance with large files, we recommend using a desktop computer.\n                </p>\n              </div>\n              <div className=\"pb-4 border-b\">\n                <h3 className=\"font-semibold mb-2 text-lg\">Can I merge PDFs with different page sizes or orientations?</h3>\n                <p className=\"text-muted-foreground\">\n                  Yes! PDFs with different page sizes (A4, Letter, Legal) and orientations (portrait, landscape) \n                  can be merged without issues. Each page maintains its original dimensions and orientation in the merged document.\n                </p>\n              </div>\n              <div className=\"pb-4 border-b\">\n                <h3 className=\"font-semibold mb-2 text-lg\">What happens to form fields and annotations?</h3>\n                <p className=\"text-muted-foreground\">\n                  Form fields, annotations, bookmarks, and hyperlinks are preserved during merging. \n                  Interactive elements remain functional in the merged PDF. \n                  However, if multiple PDFs have conflicting form field names, they may need to be renamed.\n                </p>\n              </div>\n              <div className=\"pb-4 border-b\">\n                <h3 className=\"font-semibold mb-2 text-lg\">Can I save my merge settings or create templates?</h3>\n                <p className=\"text-muted-foreground\">\n                  Since we don't require accounts and don't store any data, settings aren't saved between sessions. \n                  However, you can bookmark specific arrangements or create batch scripts using our API (coming soon) \n                  for repeated merge operations.\n                </p>\n              </div>\n              <div>\n                <h3 className=\"font-semibold mb-2 text-lg\">Why is this better than desktop software?</h3>\n                <p className=\"text-muted-foreground\">\n                  No installation required, works on any device with a browser, always up-to-date, \n                  completely free (unlike Adobe Acrobat), and actually more secure since files never leave your device. \n                  Plus, you can use it anywhere - at work, home, or on public computers without leaving traces.\n                </p>\n              </div>\n            </div>\n          </Card>\n        </div>\n      </div>\n\n      <ContactSupportSection />\n    </div>\n\n  );\n}\n","size_bytes":44822},"client/src/pages/organize-pdf.tsx":{"content":"import { useState, useCallback } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useSEO } from \"@/hooks/use-seo\";\nimport { Layers, Upload, Download, FileText, Loader2, ArrowLeft, Shield, Trash2, GripVertical, RotateCw, Copy, Scissors, FileOutput, Mail, BookOpen, Star, Users, Zap, Clock, CheckCircle2, ChevronRight, Info, HelpCircle, ChevronDown } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport FileUpload from \"@/components/ui/file-upload\";\nimport { PDFDocument, degrees } from \"pdf-lib\";\nimport { cn } from \"@/lib/utils\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/components/ui/accordion\";\nimport { Badge } from \"@/components/ui/badge\";\nimport * as pdfjsLib from 'pdfjs-dist';\nimport { ContactSupportSection } from \"@/components/contact-support\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\n\n// Configure PDF.js worker - using local worker for privacy\npdfjsLib.GlobalWorkerOptions.workerSrc = '/pdf.worker.min.mjs';\n\ninterface PageData {\n  id: string;\n  originalIndex: number;\n  currentIndex: number;\n  rotation: number;\n  thumbnail?: string;\n  deleted: boolean;\n}\n\nexport default function OrganizePDF() {\n  const [pdfFile, setPdfFile] = useState<File | null>(null);\n  const [pdfDoc, setPdfDoc] = useState<PDFDocument | null>(null);\n  const [pages, setPages] = useState<PageData[]>([]);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [organizedPdf, setOrganizedPdf] = useState<Uint8Array | null>(null);\n  const [selectedPages, setSelectedPages] = useState<Set<string>>(new Set());\n  const [draggedPage, setDraggedPage] = useState<PageData | null>(null);\n  const { toast } = useToast();\n\n  const structuredData = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebApplication\",\n    \"name\": \"PDF Organizer - AltafToolsHub\",\n    \"description\": \"Free online PDF organizer to rearrange, rotate, and manage PDF pages\",\n    \"url\": \"https://www.altaftoolshub.com/organize-pdf\",\n    \"applicationCategory\": \"BusinessApplication\",\n    \"operatingSystem\": \"Any\",\n    \"offers\": {\n      \"@type\": \"Offer\",\n      \"price\": \"0\",\n      \"priceCurrency\": \"USD\"\n    },\n    \"aggregateRating\": {\n      \"@type\": \"AggregateRating\",\n      \"ratingValue\": \"4.9\",\n      \"ratingCount\": \"1567\"\n    }\n  };\n\n  useSEO({\n    title: \"Organize PDF Pages Online Free - Rearrange & Manage | AltafToolsHub\",\n    description: \"Free online PDF organizer to rearrange, rotate, delete, and duplicate pages. Complete page management with drag-and-drop. 100% client-side processing.\",\n    path: \"/organize-pdf\",\n    keywords: \"organize pdf, rearrange pdf pages, pdf page manager, reorder pdf, pdf organizer, manage pdf pages\",\n    ogImage: \"https://www.altaftoolshub.com/og-organize-pdf.png\",\n    structuredData: [structuredData],\n    additionalMetaTags: [\n      { name: \"application-name\", content: \"PDF Organizer - AltafToolsHub\" },\n      { property: \"article:section\", content: \"PDF Tools\" }\n    ]\n  });\n\n  const generateThumbnails = async (file: File) => {\n    try {\n      const arrayBuffer = await file.arrayBuffer();\n      const pdf = await pdfjsLib.getDocument(arrayBuffer).promise;\n      const pageDatas: PageData[] = [];\n      \n      for (let i = 1; i <= pdf.numPages; i++) {\n        const page = await pdf.getPage(i);\n        const viewport = page.getViewport({ scale: 0.5 });\n        \n        const canvas = document.createElement('canvas');\n        const context = canvas.getContext('2d');\n        if (!context) continue;\n        \n        canvas.height = viewport.height;\n        canvas.width = viewport.width;\n        \n        await page.render({\n          canvasContext: context,\n          viewport: viewport,\n          intent: 'display'\n        } as any).promise;\n        \n        pageDatas.push({\n          id: `page-${i}-${Date.now()}`,\n          originalIndex: i - 1,\n          currentIndex: i - 1,\n          rotation: 0,\n          thumbnail: canvas.toDataURL('image/jpeg', 0.7),\n          deleted: false\n        });\n      }\n      \n      return pageDatas;\n    } catch (error) {\n      console.error('Error generating thumbnails:', error);\n      return [];\n    }\n  };\n\n  const handleFileUpload = useCallback(async (file: File) => {\n    if (file.type !== 'application/pdf') {\n      toast({\n        title: \"Invalid File\",\n        description: \"Please upload a PDF file\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    try {\n      setProgress(10);\n      const arrayBuffer = await file.arrayBuffer();\n      const doc = await PDFDocument.load(arrayBuffer);\n      \n      setPdfFile(file);\n      setPdfDoc(doc);\n      setOrganizedPdf(null);\n      setSelectedPages(new Set());\n      \n      // Generate thumbnails\n      setProgress(30);\n      const pageDatas = await generateThumbnails(file);\n      setPages(pageDatas);\n      setProgress(0);\n      \n      toast({\n        title: \"File Loaded\",\n        description: `PDF loaded successfully (${doc.getPageCount()} pages)`,\n      });\n    } catch (error) {\n      setProgress(0);\n      toast({\n        title: \"Error\",\n        description: \"Failed to load PDF file\",\n        variant: \"destructive\"\n      });\n    }\n  }, [toast]);\n\n  const togglePageSelection = (pageId: string) => {\n    const newSelection = new Set(selectedPages);\n    if (newSelection.has(pageId)) {\n      newSelection.delete(pageId);\n    } else {\n      newSelection.add(pageId);\n    }\n    setSelectedPages(newSelection);\n  };\n\n  const deleteSelectedPages = () => {\n    if (selectedPages.size === 0) {\n      toast({\n        title: \"No pages selected\",\n        description: \"Please select pages to delete\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    setPages(prev => prev.map(page => \n      selectedPages.has(page.id) ? { ...page, deleted: true } : page\n    ));\n    setSelectedPages(new Set());\n    \n    toast({\n      title: \"Pages Deleted\",\n      description: `Marked ${selectedPages.size} page(s) for deletion`,\n    });\n  };\n\n  const rotateSelectedPages = () => {\n    if (selectedPages.size === 0) {\n      toast({\n        title: \"No pages selected\",\n        description: \"Please select pages to rotate\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    setPages(prev => prev.map(page => \n      selectedPages.has(page.id) ? { ...page, rotation: (page.rotation + 90) % 360 } : page\n    ));\n    \n    toast({\n      title: \"Pages Rotated\",\n      description: `Rotated ${selectedPages.size} page(s) by 90°`,\n    });\n  };\n\n  const duplicateSelectedPages = () => {\n    if (selectedPages.size === 0) {\n      toast({\n        title: \"No pages selected\",\n        description: \"Please select pages to duplicate\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    const newPages: PageData[] = [];\n    pages.forEach(page => {\n      newPages.push(page);\n      if (selectedPages.has(page.id)) {\n        newPages.push({\n          ...page,\n          id: `page-${page.originalIndex}-copy-${Date.now()}`\n        });\n      }\n    });\n    \n    setPages(newPages);\n    setSelectedPages(new Set());\n    \n    toast({\n      title: \"Pages Duplicated\",\n      description: `Duplicated ${selectedPages.size} page(s)`,\n    });\n  };\n\n  const handleDragStart = (page: PageData) => {\n    setDraggedPage(page);\n  };\n\n  const handleDragOver = (e: React.DragEvent) => {\n    e.preventDefault();\n  };\n\n  const handleDrop = (e: React.DragEvent, targetPage: PageData) => {\n    e.preventDefault();\n    if (!draggedPage || draggedPage.id === targetPage.id) return;\n\n    const newPages = [...pages];\n    const draggedIndex = newPages.findIndex(p => p.id === draggedPage.id);\n    const targetIndex = newPages.findIndex(p => p.id === targetPage.id);\n    \n    newPages.splice(draggedIndex, 1);\n    newPages.splice(targetIndex, 0, draggedPage);\n    \n    setPages(newPages.map((p, i) => ({ ...p, currentIndex: i })));\n    setDraggedPage(null);\n  };\n\n  const applyChanges = async () => {\n    if (!pdfDoc || !pdfFile) {\n      toast({\n        title: \"No file loaded\",\n        description: \"Please upload a PDF file first\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    const activePages = pages.filter(p => !p.deleted);\n    if (activePages.length === 0) {\n      toast({\n        title: \"No pages remaining\",\n        description: \"At least one page must remain in the PDF\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    setIsProcessing(true);\n    setProgress(0);\n\n    try {\n      const newPdf = await PDFDocument.create();\n      const totalPages = activePages.length;\n\n      for (let i = 0; i < totalPages; i++) {\n        const pageData = activePages[i];\n        setProgress(Math.round(((i + 0.5) / totalPages) * 100));\n        \n        const [page] = await newPdf.copyPages(pdfDoc, [pageData.originalIndex]);\n        \n        if (pageData.rotation !== 0) {\n          const currentRotation = page.getRotation();\n          page.setRotation(degrees(currentRotation.angle + pageData.rotation));\n        }\n        \n        newPdf.addPage(page);\n        setProgress(Math.round(((i + 1) / totalPages) * 100));\n      }\n\n      const pdfBytes = await newPdf.save();\n      setOrganizedPdf(pdfBytes);\n      \n      toast({\n        title: \"Success!\",\n        description: \"PDF organized successfully\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to organize PDF\",\n        variant: \"destructive\"\n      });\n    } finally {\n      setIsProcessing(false);\n      setProgress(0);\n    }\n  };\n\n  const downloadOrganizedPdf = () => {\n    if (!organizedPdf || !pdfFile) return;\n    \n    const blob = new Blob([organizedPdf], { type: 'application/pdf' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = pdfFile.name.replace('.pdf', '_organized.pdf');\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  const reset = () => {\n    setPdfFile(null);\n    setPdfDoc(null);\n    setPages([]);\n    setOrganizedPdf(null);\n    setSelectedPages(new Set());\n    setProgress(0);\n  };\n\n  const hasChanges = () => {\n    return pages.some(p => p.deleted || p.rotation !== 0 || p.currentIndex !== p.originalIndex);\n  };\n\n  return (\n    <div className=\"min-h-screen pattern-bg\">\n      <div className=\"container mx-auto px-4 py-6\">\n        {/* Breadcrumbs */}\n        <nav className=\"flex text-sm text-muted-foreground mb-6\" aria-label=\"Breadcrumb\">\n          <Link href=\"/\" className=\"hover:text-primary transition-colors\">Home</Link>\n          <span className=\"mx-2\">/</span>\n          <Link href=\"/all-tools?category=pdf-management\" className=\"hover:text-primary transition-colors\">PDF Tools</Link>\n          <span className=\"mx-2\">/</span>\n          <span className=\"text-foreground\">Organize PDF</span>\n        </nav>\n\n        <Link href=\"/all-tools?category=pdf-management\">\n          <Button variant=\"ghost\" className=\"mb-4\">\n            <ArrowLeft className=\"w-4 h-4 mr-2\" />\n            Back to PDF Tools\n          </Button>\n        </Link>\n\n        <div className=\"max-w-6xl mx-auto\">\n          <div className=\"text-center mb-8\">\n            <h1 className=\"text-4xl font-bold mb-4\">\n              Organize <span className=\"gradient-text\">PDF Pages</span>\n            </h1>\n            <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n              Rearrange, rotate, delete, and duplicate PDF pages with drag-and-drop ease.\n              Complete page management in your browser.\n            </p>\n          </div>\n\n          {/* Privacy Notice */}\n          <Alert className=\"mb-6\">\n            <Shield className=\"w-4 h-4\" />\n            <AlertDescription>\n              Your PDFs are organized entirely in your browser. Files never leave your device.\n            </AlertDescription>\n          </Alert>\n\n          <Card className=\"p-8 mb-8\">\n            {!organizedPdf ? (\n              <>\n                {!pdfFile ? (\n                  <FileUpload\n                    accept=\"application/pdf\"\n                    onFileSelect={handleFileUpload}\n                    className=\"min-h-[400px]\"\n                    title=\"Drop PDF file here or click to select\"\n                    description=\"Select a PDF to organize pages\"\n                  />\n                ) : (\n                  <>\n                    {progress > 0 && progress < 100 && !isProcessing && (\n                      <div className=\"mb-6\">\n                        <Progress value={progress} className=\"h-2\" />\n                        <p className=\"text-sm text-center mt-2 text-muted-foreground\">\n                          Loading PDF... {progress}%\n                        </p>\n                      </div>\n                    )}\n\n                    {pages.length > 0 && (\n                      <>\n                        <div className=\"mb-6\">\n                          <div className=\"flex items-center justify-between mb-4\">\n                            <h2 className=\"text-lg font-medium\">\n                              {pages.filter(p => !p.deleted).length} of {pages.length} pages\n                            </h2>\n                            <div className=\"flex gap-2\">\n                              <Button\n                                variant=\"outline\"\n                                size=\"sm\"\n                                onClick={rotateSelectedPages}\n                                disabled={selectedPages.size === 0}\n                                data-testid=\"button-rotate\"\n                              >\n                                <RotateCw className=\"w-4 h-4 mr-1\" />\n                                Rotate\n                              </Button>\n                              <Button\n                                variant=\"outline\"\n                                size=\"sm\"\n                                onClick={duplicateSelectedPages}\n                                disabled={selectedPages.size === 0}\n                                data-testid=\"button-duplicate\"\n                              >\n                                <Copy className=\"w-4 h-4 mr-1\" />\n                                Duplicate\n                              </Button>\n                              <Button\n                                variant=\"outline\"\n                                size=\"sm\"\n                                onClick={deleteSelectedPages}\n                                disabled={selectedPages.size === 0}\n                                className=\"text-destructive hover:text-destructive\"\n                                data-testid=\"button-delete\"\n                              >\n                                <Trash2 className=\"w-4 h-4 mr-1\" />\n                                Delete\n                              </Button>\n                            </div>\n                          </div>\n\n                          <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-4 mb-6\">\n                            {pages.filter(p => !p.deleted).map((page) => (\n                              <div\n                                key={page.id}\n                                draggable\n                                onDragStart={() => handleDragStart(page)}\n                                onDragOver={handleDragOver}\n                                onDrop={(e) => handleDrop(e, page)}\n                                className={cn(\n                                  \"relative cursor-move border-2 rounded-lg p-2 transition-all\",\n                                  selectedPages.has(page.id)\n                                    ? \"border-primary bg-primary/10\"\n                                    : \"border-border hover:border-primary/50\",\n                                  draggedPage?.id === page.id && \"opacity-50\"\n                                )}\n                                onClick={() => togglePageSelection(page.id)}\n                                data-testid={`page-${page.originalIndex}`}\n                              >\n                                <div className=\"absolute top-1 right-1 z-10\">\n                                  <GripVertical className=\"w-4 h-4 text-muted-foreground\" />\n                                </div>\n                                <div className=\"aspect-[3/4] bg-muted rounded flex items-center justify-center overflow-hidden\">\n                                  {page.thumbnail ? (\n                                    <img\n                                      src={page.thumbnail}\n                                      alt={`Page ${page.originalIndex + 1}`}\n                                      className=\"w-full h-full object-cover\"\n                                      style={{\n                                        transform: `rotate(${page.rotation}deg)`,\n                                        transition: 'transform 0.3s ease'\n                                      }}\n                                    />\n                                  ) : (\n                                    <FileText className=\"w-8 h-8 text-muted-foreground\" />\n                                  )}\n                                </div>\n                                <p className=\"text-xs text-center mt-2\">\n                                  Page {pages.filter(p => !p.deleted).indexOf(page) + 1}\n                                  {page.rotation !== 0 && (\n                                    <span className=\"block text-primary\">{page.rotation}°</span>\n                                  )}\n                                </p>\n                              </div>\n                            ))}\n                          </div>\n\n                          <p className=\"text-sm text-muted-foreground text-center mb-6\">\n                            Click to select pages • Drag to reorder • Use buttons to modify\n                          </p>\n                        </div>\n\n                        {isProcessing && (\n                          <div className=\"mb-6\">\n                            <Progress value={progress} className=\"h-2\" />\n                            <p className=\"text-sm text-center mt-2 text-muted-foreground\">\n                              Organizing PDF... {progress}%\n                            </p>\n                          </div>\n                        )}\n\n                        <div className=\"flex gap-4\">\n                          <Button\n                            onClick={applyChanges}\n                            disabled={isProcessing || !hasChanges()}\n                            className=\"flex-1\"\n                            data-testid=\"button-apply\"\n                          >\n                            {isProcessing ? (\n                              <>\n                                <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\n                                Processing...\n                              </>\n                            ) : (\n                              <>\n                                <Layers className=\"w-4 h-4 mr-2\" />\n                                Apply Changes\n                              </>\n                            )}\n                          </Button>\n                          <Button\n                            onClick={reset}\n                            variant=\"outline\"\n                            disabled={isProcessing}\n                            data-testid=\"button-reset\"\n                          >\n                            Change File\n                          </Button>\n                        </div>\n                      </>\n                    )}\n                  </>\n                )}\n              </>\n            ) : (\n              <div className=\"text-center\">\n                <div className=\"w-16 h-16 mx-auto mb-4 rounded-full bg-green-100 dark:bg-green-900/30 flex items-center justify-center\">\n                  <Layers className=\"w-8 h-8 text-green-600 dark:text-green-400\" />\n                </div>\n                <h2 className=\"text-2xl font-bold mb-2\">PDF Organized Successfully!</h2>\n                <p className=\"text-muted-foreground mb-6\">\n                  Your PDF has been reorganized as requested\n                </p>\n                <div className=\"flex gap-4 justify-center\">\n                  <Button onClick={downloadOrganizedPdf} size=\"lg\" data-testid=\"button-download\">\n                    <Download className=\"w-4 h-4 mr-2\" />\n                    Download Organized PDF\n                  </Button>\n                  <Button onClick={reset} variant=\"outline\" size=\"lg\" data-testid=\"button-organize-another\">\n                    Organize Another PDF\n                  </Button>\n                </div>\n              </div>\n            )}\n          </Card>\n\n          {/* Features Section */}\n          <Card className=\"p-6 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">Why Use Our PDF Organizer?</h2>\n            <div className=\"space-y-2\">\n              <p className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 mt-1\">✓</span>\n                <span>Drag and drop to reorder pages instantly</span>\n              </p>\n              <p className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 mt-1\">✓</span>\n                <span>Rotate, delete, and duplicate pages</span>\n              </p>\n              <p className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 mt-1\">✓</span>\n                <span>Visual preview of all pages</span>\n              </p>\n              <p className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 mt-1\">✓</span>\n                <span>Batch operations on multiple pages</span>\n              </p>\n            </div>\n          </Card>\n\n          {/* How It Works */}\n          <Card className=\"p-6 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">How It Works</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 mx-auto mb-3 rounded-full bg-primary/10 flex items-center justify-center\">\n                  <Upload className=\"w-6 h-6 text-primary\" />\n                </div>\n                <h3 className=\"font-medium mb-1\">1. Upload PDF</h3>\n                <p className=\"text-sm text-muted-foreground\">Select your PDF file</p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 mx-auto mb-3 rounded-full bg-primary/10 flex items-center justify-center\">\n                  <GripVertical className=\"w-6 h-6 text-primary\" />\n                </div>\n                <h3 className=\"font-medium mb-1\">2. Organize</h3>\n                <p className=\"text-sm text-muted-foreground\">Drag, rotate, delete pages</p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 mx-auto mb-3 rounded-full bg-primary/10 flex items-center justify-center\">\n                  <Layers className=\"w-6 h-6 text-primary\" />\n                </div>\n                <h3 className=\"font-medium mb-1\">3. Apply</h3>\n                <p className=\"text-sm text-muted-foreground\">Process changes</p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 mx-auto mb-3 rounded-full bg-primary/10 flex items-center justify-center\">\n                  <Download className=\"w-6 h-6 text-primary\" />\n                </div>\n                <h3 className=\"font-medium mb-1\">4. Download</h3>\n                <p className=\"text-sm text-muted-foreground\">Save organized PDF</p>\n              </div>\n            </div>\n          </Card>\n\n          {/* Tool Features */}\n          <Card className=\"p-6 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">Advanced Features</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div className=\"space-y-3\">\n                <div className=\"flex items-start gap-2\">\n                  <GripVertical className=\"w-5 h-5 text-primary mt-0.5\" />\n                  <div>\n                    <h3 className=\"font-medium\">Drag {String.fromCharCode(38)} Drop</h3>\n                    <p className=\"text-sm text-muted-foreground\">Intuitive page reordering with visual feedback</p>\n                  </div>\n                </div>\n                <div className=\"flex items-start gap-2\">\n                  <RotateCw className=\"w-5 h-5 text-primary mt-0.5\" />\n                  <div>\n                    <h3 className=\"font-medium\">Page Rotation</h3>\n                    <p className=\"text-sm text-muted-foreground\">Rotate individual pages by 90° increments</p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"space-y-3\">\n                <div className=\"flex items-start gap-2\">\n                  <Copy className=\"w-5 h-5 text-primary mt-0.5\" />\n                  <div>\n                    <h3 className=\"font-medium\">Duplicate Pages</h3>\n                    <p className=\"text-sm text-muted-foreground\">Copy important pages within the document</p>\n                  </div>\n                </div>\n                <div className=\"flex items-start gap-2\">\n                  <Trash2 className=\"w-5 h-5 text-primary mt-0.5\" />\n                  <div>\n                    <h3 className=\"font-medium\">Delete Pages</h3>\n                    <p className=\"text-sm text-muted-foreground\">Remove unwanted pages easily</p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"space-y-3\">\n                <div className=\"flex items-start gap-2\">\n                  <Shield className=\"w-5 h-5 text-primary mt-0.5\" />\n                  <div>\n                    <h3 className=\"font-medium\">Preserve Quality</h3>\n                    <p className=\"text-sm text-muted-foreground\">Original PDF quality maintained</p>\n                  </div>\n                </div>\n                <div className=\"flex items-start gap-2\">\n                  <Layers className=\"w-5 h-5 text-primary mt-0.5\" />\n                  <div>\n                    <h3 className=\"font-medium\">Batch Actions</h3>\n                    <p className=\"text-sm text-muted-foreground\">Select multiple pages for bulk operations</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Card>\n\n          {/* Comparison Table */}\n          <Card className=\"p-6 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">Why Choose Our PDF Organizer?</h2>\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full\">\n                <thead>\n                  <tr className=\"border-b\">\n                    <th className=\"text-left py-2\">Feature</th>\n                    <th className=\"text-center py-2\">AltafToolsHub</th>\n                    <th className=\"text-center py-2\">Others</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr className=\"border-b\">\n                    <td className=\"py-2\">Visual Page Thumbnails</td>\n                    <td className=\"text-center py-2 text-green-500\">✓</td>\n                    <td className=\"text-center py-2 text-muted-foreground\">Limited</td>\n                  </tr>\n                  <tr className=\"border-b\">\n                    <td className=\"py-2\">Drag {String.fromCharCode(38)} Drop Interface</td>\n                    <td className=\"text-center py-2 text-green-500\">✓</td>\n                    <td className=\"text-center py-2 text-muted-foreground\">Sometimes</td>\n                  </tr>\n                  <tr className=\"border-b\">\n                    <td className=\"py-2\">Batch Operations</td>\n                    <td className=\"text-center py-2 text-green-500\">✓</td>\n                    <td className=\"text-center py-2 text-red-500\">✗</td>\n                  </tr>\n                  <tr className=\"border-b\">\n                    <td className=\"py-2\">Page Duplication</td>\n                    <td className=\"text-center py-2 text-green-500\">✓</td>\n                    <td className=\"text-center py-2 text-red-500\">✗</td>\n                  </tr>\n                  <tr className=\"border-b\">\n                    <td className=\"py-2\">100% Client-Side</td>\n                    <td className=\"text-center py-2 text-green-500\">✓</td>\n                    <td className=\"text-center py-2 text-red-500\">✗</td>\n                  </tr>\n                  <tr className=\"border-b\">\n                    <td className=\"py-2\">No File Size Limit</td>\n                    <td className=\"text-center py-2 text-green-500\">✓</td>\n                    <td className=\"text-center py-2 text-muted-foreground\">5-100MB</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </Card>\n\n          {/* Trust Badges */}\n          <Card className=\"p-6 mb-8\">\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-center\">\n              <div>\n                <div className=\"text-3xl font-bold text-primary\">1.5M+</div>\n                <p className=\"text-sm text-muted-foreground\">PDFs Organized</p>\n              </div>\n              <div>\n                <div className=\"text-3xl font-bold text-primary\">4.9/5</div>\n                <p className=\"text-sm text-muted-foreground\">User Rating</p>\n              </div>\n              <div>\n                <div className=\"text-3xl font-bold text-primary\">100%</div>\n                <p className=\"text-sm text-muted-foreground\">Privacy Safe</p>\n              </div>\n              <div>\n                <div className=\"text-3xl font-bold text-primary\">50K+</div>\n                <p className=\"text-sm text-muted-foreground\">Monthly Users</p>\n              </div>\n            </div>\n          </Card>\n\n          {/* User Testimonials */}\n          <Card className=\"p-6 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">What Users Say</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div className=\"border rounded-lg p-4\">\n                <div className=\"flex gap-1 mb-2\">\n                  {[1,2,3,4,5].map(i => (\n                    <span key={i} className=\"text-yellow-500\">★</span>\n                  ))}\n                </div>\n                <p className=\"text-sm mb-2\">\"The drag and drop interface is incredibly intuitive. Reorganized my 200-page report in minutes!\"</p>\n                <p className=\"text-sm text-muted-foreground\">- Michael R., Project Manager</p>\n              </div>\n              <div className=\"border rounded-lg p-4\">\n                <div className=\"flex gap-1 mb-2\">\n                  {[1,2,3,4,5].map(i => (\n                    <span key={i} className=\"text-yellow-500\">★</span>\n                  ))}\n                </div>\n                <p className=\"text-sm mb-2\">\"Love the thumbnail preview feature. Makes it so easy to see what I'm doing with my documents.\"</p>\n                <p className=\"text-sm text-muted-foreground\">- Lisa T., Teacher</p>\n              </div>\n              <div className=\"border rounded-lg p-4\">\n                <div className=\"flex gap-1 mb-2\">\n                  {[1,2,3,4,5].map(i => (\n                    <span key={i} className=\"text-yellow-500\">★</span>\n                  ))}\n                </div>\n                <p className=\"text-sm mb-2\">\"Being able to duplicate and rotate pages saved me hours of work. Fantastic tool!\"</p>\n                <p className=\"text-sm text-muted-foreground\">- James K., Designer</p>\n              </div>\n            </div>\n          </Card>\n\n          {/* FAQ */}\n          <Card className=\"p-6 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">Frequently Asked Questions</h2>\n            <Accordion type=\"single\" collapsible className=\"w-full\">\n              <AccordionItem value=\"item-1\">\n                <AccordionTrigger>Can I undo changes after organizing?</AccordionTrigger>\n                <AccordionContent>\n                  All changes are preserved in your browser until you apply them. You can reset to start over at any time before downloading. Once downloaded, you'll need to re-upload the original file to make different changes.\n                </AccordionContent>\n              </AccordionItem>\n              <AccordionItem value=\"item-2\">\n                <AccordionTrigger>What's the maximum file size I can organize?</AccordionTrigger>\n                <AccordionContent>\n                  There's no strict file size limit since all processing happens directly in your browser. However, very large files (over 100MB) may take longer to process and could be limited by your device's available memory.\n                </AccordionContent>\n              </AccordionItem>\n              <AccordionItem value=\"item-3\">\n                <AccordionTrigger>Can I organize password-protected PDFs?</AccordionTrigger>\n                <AccordionContent>\n                  Currently, password-protected PDFs need to be unlocked first. You can use our PDF Unlock tool to remove the password, then organize the unlocked PDF.\n                </AccordionContent>\n              </AccordionItem>\n              <AccordionItem value=\"item-4\">\n                <AccordionTrigger>How do I select multiple pages at once?</AccordionTrigger>\n                <AccordionContent>\n                  Click on a page to select it, then hold Ctrl (or Cmd on Mac) while clicking additional pages to add them to your selection. You can then perform batch operations like delete or rotate on all selected pages.\n                </AccordionContent>\n              </AccordionItem>\n              <AccordionItem value=\"item-5\">\n                <AccordionTrigger>Will organizing affect the PDF quality?</AccordionTrigger>\n                <AccordionContent>\n                  No, our tool preserves the original quality of your PDF. We don't compress or alter the content - we simply rearrange the pages while maintaining all formatting, images, and text quality.\n                </AccordionContent>\n              </AccordionItem>\n            </Accordion>\n          </Card>\n\n          {/* Technical Details */}\n          <Card className=\"p-6 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">Technical Details</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <h3 className=\"font-medium mb-2\">Supported Features</h3>\n                <ul className=\"space-y-1 text-sm text-muted-foreground\">\n                  <li>• All PDF versions (1.0 - 2.0)</li>\n                  <li>• Encrypted PDFs (after unlocking)</li>\n                  <li>• Large documents (1000+ pages)</li>\n                  <li>• Mixed page orientations</li>\n                  <li>• Forms and annotations preserved</li>\n                </ul>\n              </div>\n              <div>\n                <h3 className=\"font-medium mb-2\">Browser Requirements</h3>\n                <ul className=\"space-y-1 text-sm text-muted-foreground\">\n                  <li>• Chrome 90+, Firefox 88+, Safari 14+, Edge 90+</li>\n                  <li>• Minimum 2GB RAM recommended</li>\n                  <li>• JavaScript must be enabled</li>\n                  <li>• WebAssembly support required</li>\n                  <li>• No plugins or extensions needed</li>\n                </ul>\n              </div>\n            </div>\n          </Card>\n\n          {/* Related Tools */}\n          <Card className=\"p-6 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">Related PDF Tools</h2>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              <Link href=\"/merge-pdf\">\n                <Button variant=\"outline\" className=\"w-full h-auto py-4 flex flex-col gap-2\">\n                  <FileText className=\"w-6 h-6\" />\n                  <span>Merge PDF</span>\n                </Button>\n              </Link>\n              <Link href=\"/split-pdf\">\n                <Button variant=\"outline\" className=\"w-full h-auto py-4 flex flex-col gap-2\">\n                  <Scissors className=\"w-6 h-6\" />\n                  <span>Split PDF</span>\n                </Button>\n              </Link>\n              <Link href=\"/rotate-pdf\">\n                <Button variant=\"outline\" className=\"w-full h-auto py-4 flex flex-col gap-2\">\n                  <RotateCw className=\"w-6 h-6\" />\n                  <span>Rotate PDF</span>\n                </Button>\n              </Link>\n              <Link href=\"/extract-pages\">\n                <Button variant=\"outline\" className=\"w-full h-auto py-4 flex flex-col gap-2\">\n                  <FileOutput className=\"w-6 h-6\" />\n                  <span>Extract Pages</span>\n                </Button>\n              </Link>\n            </div>\n          </Card>\n\n          {/* Contact Support */}\n          <Card className=\"p-6\">\n            <h2 className=\"text-2xl font-bold mb-4\">Need Help?</h2>\n            <p className=\"text-muted-foreground mb-4\">\n              Our support team is here to help you with any questions about organizing your PDFs.\n            </p>\n            <div className=\"flex flex-wrap gap-4\">\n              <a href=\"mailto:altaftoolshub@gmail.com?subject=Help%20with%20Organize%20PDF%20Tool\" className=\"inline-block\">\n                <Button variant=\"outline\">\n                  <Mail className=\"w-4 h-4 mr-2\" />\n                  Email Support\n                </Button>\n              </a>\n              <Link href=\"/faq\">\n                <Button variant=\"outline\">\n                  <HelpCircle className=\"w-4 h-4 mr-2\" />\n                  FAQ\n                </Button>\n              </Link>\n              <Dialog>\n                <DialogTrigger asChild>\n                  <Button variant=\"outline\">\n                    <BookOpen className=\"w-4 h-4 mr-2\" />\n                    Documentation\n                  </Button>\n                </DialogTrigger>\n                <DialogContent className=\"max-w-2xl max-h-[80vh] overflow-y-auto\">\n                  <DialogHeader>\n                    <DialogTitle>How to Organize PDF Pages</DialogTitle>\n                    <DialogDescription>\n                      Complete guide for managing and rearranging PDF pages\n                    </DialogDescription>\n                  </DialogHeader>\n                  <div className=\"space-y-4 mt-4\">\n                    <div>\n                      <h3 className=\"font-semibold mb-2\">Step 1: Upload Your PDF</h3>\n                      <p className=\"text-muted-foreground\">Click the upload area or drag and drop your PDF file. All pages will be displayed as thumbnails.</p>\n                    </div>\n                    <div>\n                      <h3 className=\"font-semibold mb-2\">Step 2: Rearrange Pages</h3>\n                      <p className=\"text-muted-foreground\">Drag and drop page thumbnails to reorder them. You can also rotate, duplicate, or delete individual pages.</p>\n                    </div>\n                    <div>\n                      <h3 className=\"font-semibold mb-2\">Step 3: Apply Actions</h3>\n                      <p className=\"text-muted-foreground\">Use the toolbar to rotate selected pages, duplicate them, or delete unwanted pages.</p>\n                    </div>\n                    <div>\n                      <h3 className=\"font-semibold mb-2\">Step 4: Save Your Changes</h3>\n                      <p className=\"text-muted-foreground\">Click Apply Changes to create your reorganized PDF. The new file will download automatically.</p>\n                    </div>\n                    <div className=\"pt-4 border-t\">\n                      <h3 className=\"font-semibold mb-2\">Tips:</h3>\n                      <ul className=\"list-disc list-inside space-y-1 text-muted-foreground\">\n                        <li>Select multiple pages with Ctrl/Cmd+Click</li>\n                        <li>Rotate pages 90° clockwise or counterclockwise</li>\n                        <li>Duplicate important pages easily</li>\n                        <li>Preview changes before applying</li>\n                        <li>All processing is done locally</li>\n                      </ul>\n                    </div>\n                  </div>\n                </DialogContent>\n              </Dialog>\n            </div>\n          </Card>\n        </div>\n      </div>\n\n      <ContactSupportSection />\n    </div>\n\n  );\n}\n","size_bytes":40663},"client/src/pages/remove-pages.tsx":{"content":"import { useState, useCallback } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useSEO } from \"@/hooks/use-seo\";\nimport { FileX, Upload, Download, FileText, Loader2, ArrowLeft, Shield, Trash2, Scissors, FileOutput, Mail, BookOpen, Star, Users, Zap, Clock, CheckCircle2, ChevronRight, Info, HelpCircle, ChevronDown, Layers, RotateCw } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport FileUpload from \"@/components/ui/file-upload\";\nimport { PDFDocument } from \"pdf-lib\";\nimport { cn } from \"@/lib/utils\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/components/ui/accordion\";\nimport { Badge } from \"@/components/ui/badge\";\nimport * as pdfjsLib from 'pdfjs-dist';\nimport { ContactSupportSection } from \"@/components/contact-support\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\n\n// Configure PDF.js worker - using local worker for privacy\npdfjsLib.GlobalWorkerOptions.workerSrc = '/pdf.worker.min.mjs';\n\ninterface PageData {\n  pageNumber: number;\n  thumbnail?: string;\n}\n\nexport default function RemovePages() {\n  const [pdfFile, setPdfFile] = useState<File | null>(null);\n  const [pdfDoc, setPdfDoc] = useState<PDFDocument | null>(null);\n  const [pages, setPages] = useState<PageData[]>([]);\n  const [selectedPages, setSelectedPages] = useState<Set<number>>(new Set());\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [processedPdf, setProcessedPdf] = useState<Uint8Array | null>(null);\n  const { toast } = useToast();\n\n  const structuredData = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebApplication\",\n    \"name\": \"Remove PDF Pages - AltafToolsHub\",\n    \"description\": \"Free online tool to remove unwanted pages from PDF documents\",\n    \"url\": \"https://www.altaftoolshub.com/remove-pages\",\n    \"applicationCategory\": \"BusinessApplication\",\n    \"operatingSystem\": \"Any\",\n    \"offers\": {\n      \"@type\": \"Offer\",\n      \"price\": \"0\",\n      \"priceCurrency\": \"USD\"\n    },\n    \"aggregateRating\": {\n      \"@type\": \"AggregateRating\",\n      \"ratingValue\": \"4.7\",\n      \"ratingCount\": \"923\"\n    }\n  };\n\n  useSEO({\n    title: \"Remove PDF Pages Online Free - Delete Unwanted Pages | AltafToolsHub\",\n    description: \"Free online tool to remove unwanted pages from PDF documents. Select and delete specific pages while preserving quality. 100% client-side processing.\",\n    path: \"/remove-pages\",\n    keywords: \"remove pdf pages, delete pdf pages, pdf page remover, pdf page deletion, remove pages from pdf\",\n    ogImage: \"https://www.altaftoolshub.com/og-remove-pages.png\",\n    structuredData: [structuredData],\n    additionalMetaTags: [\n      { name: \"application-name\", content: \"Remove PDF Pages - AltafToolsHub\" },\n      { property: \"article:section\", content: \"PDF Tools\" }\n    ]\n  });\n\n  const generateThumbnails = async (file: File) => {\n    try {\n      const arrayBuffer = await file.arrayBuffer();\n      const pdf = await pdfjsLib.getDocument(arrayBuffer).promise;\n      const pageDatas: PageData[] = [];\n      \n      for (let i = 1; i <= Math.min(pdf.numPages, 20); i++) {\n        const page = await pdf.getPage(i);\n        const viewport = page.getViewport({ scale: 0.3 });\n        \n        const canvas = document.createElement('canvas');\n        const context = canvas.getContext('2d');\n        if (!context) continue;\n        \n        canvas.height = viewport.height;\n        canvas.width = viewport.width;\n        \n        await page.render({\n          canvasContext: context,\n          viewport: viewport,\n          intent: 'display'\n        } as any).promise;\n        \n        pageDatas.push({\n          pageNumber: i,\n          thumbnail: canvas.toDataURL('image/jpeg', 0.5)\n        });\n      }\n      \n      // Add remaining pages without thumbnails\n      for (let i = 21; i <= pdf.numPages; i++) {\n        pageDatas.push({ pageNumber: i });\n      }\n      \n      return pageDatas;\n    } catch (error) {\n      console.error('Error generating thumbnails:', error);\n      return [];\n    }\n  };\n\n  const handleFileUpload = useCallback(async (file: File) => {\n    if (file.type !== 'application/pdf') {\n      toast({\n        title: \"Invalid File\",\n        description: \"Please upload a PDF file\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    try {\n      setProgress(10);\n      const arrayBuffer = await file.arrayBuffer();\n      const doc = await PDFDocument.load(arrayBuffer);\n      \n      setPdfFile(file);\n      setPdfDoc(doc);\n      setProcessedPdf(null);\n      setSelectedPages(new Set());\n      \n      setProgress(30);\n      const pageDatas = await generateThumbnails(file);\n      setPages(pageDatas);\n      setProgress(0);\n      \n      toast({\n        title: \"File Loaded\",\n        description: `PDF loaded with ${doc.getPageCount()} pages`,\n      });\n    } catch (error) {\n      setProgress(0);\n      toast({\n        title: \"Error\",\n        description: \"Failed to load PDF file\",\n        variant: \"destructive\"\n      });\n    }\n  }, [toast]);\n\n  const togglePageSelection = (pageNum: number) => {\n    const newSelection = new Set(selectedPages);\n    if (newSelection.has(pageNum)) {\n      newSelection.delete(pageNum);\n    } else {\n      newSelection.add(pageNum);\n    }\n    setSelectedPages(newSelection);\n  };\n\n  const removePages = async () => {\n    if (!pdfDoc || !pdfFile) {\n      toast({\n        title: \"No file loaded\",\n        description: \"Please upload a PDF file first\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    if (selectedPages.size === 0) {\n      toast({\n        title: \"No pages selected\",\n        description: \"Please select pages to remove\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    if (selectedPages.size >= pages.length) {\n      toast({\n        title: \"Cannot remove all pages\",\n        description: \"At least one page must remain\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    setIsProcessing(true);\n    setProgress(0);\n\n    try {\n      const newPdf = await PDFDocument.create();\n      const totalPages = pdfDoc.getPageCount();\n      const pagesToKeep: number[] = [];\n      \n      for (let i = 0; i < totalPages; i++) {\n        if (!selectedPages.has(i + 1)) {\n          pagesToKeep.push(i);\n        }\n      }\n\n      for (let i = 0; i < pagesToKeep.length; i++) {\n        setProgress(Math.round(((i + 0.5) / pagesToKeep.length) * 100));\n        const [page] = await newPdf.copyPages(pdfDoc, [pagesToKeep[i]]);\n        newPdf.addPage(page);\n        setProgress(Math.round(((i + 1) / pagesToKeep.length) * 100));\n      }\n\n      const pdfBytes = await newPdf.save();\n      setProcessedPdf(pdfBytes);\n      \n      toast({\n        title: \"Success!\",\n        description: `Removed ${selectedPages.size} page(s) from PDF`,\n      });\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to remove pages\",\n        variant: \"destructive\"\n      });\n    } finally {\n      setIsProcessing(false);\n      setProgress(0);\n    }\n  };\n\n  const downloadPdf = () => {\n    if (!processedPdf || !pdfFile) return;\n    \n    const blob = new Blob([processedPdf], { type: 'application/pdf' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = pdfFile.name.replace('.pdf', '_edited.pdf');\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  const reset = () => {\n    setPdfFile(null);\n    setPdfDoc(null);\n    setPages([]);\n    setProcessedPdf(null);\n    setSelectedPages(new Set());\n    setProgress(0);\n  };\n\n  return (\n    <div className=\"min-h-screen pattern-bg\">\n      <div className=\"container mx-auto px-4 py-6\">\n        {/* Breadcrumbs */}\n        <nav className=\"flex text-sm text-muted-foreground mb-6\" aria-label=\"Breadcrumb\">\n          <Link href=\"/\" className=\"hover:text-primary transition-colors\">Home</Link>\n          <span className=\"mx-2\">/</span>\n          <Link href=\"/all-tools?category=pdf-management\" className=\"hover:text-primary transition-colors\">PDF Tools</Link>\n          <span className=\"mx-2\">/</span>\n          <span className=\"text-foreground\">Remove Pages</span>\n        </nav>\n\n        <Link href=\"/all-tools?category=pdf-management\">\n          <Button variant=\"ghost\" className=\"mb-4\">\n            <ArrowLeft className=\"w-4 h-4 mr-2\" />\n            Back to PDF Tools\n          </Button>\n        </Link>\n\n        <div className=\"max-w-6xl mx-auto\">\n          <div className=\"text-center mb-8\">\n            <h1 className=\"text-4xl font-bold mb-4\">\n              Remove <span className=\"gradient-text\">PDF Pages</span>\n            </h1>\n            <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n              Delete unwanted pages from your PDF documents. Select specific pages to remove while keeping the rest.\n            </p>\n          </div>\n\n          {/* Privacy Notice */}\n          <Alert className=\"mb-6\">\n            <Shield className=\"w-4 h-4\" />\n            <AlertDescription>\n              Your PDFs are processed entirely in your browser. Files never leave your device.\n            </AlertDescription>\n          </Alert>\n\n          <Card className=\"p-8 mb-8\">\n            {!processedPdf ? (\n              <>\n                {!pdfFile ? (\n                  <FileUpload\n                    accept=\"application/pdf\"\n                    onFileSelect={handleFileUpload}\n                    className=\"min-h-[400px]\"\n                    title=\"Drop PDF file here or click to select\"\n                    description=\"Select a PDF to remove pages\"\n                  />\n                ) : (\n                  <>\n                    {progress > 0 && progress < 100 && !isProcessing && (\n                      <div className=\"mb-6\">\n                        <Progress value={progress} className=\"h-2\" />\n                        <p className=\"text-sm text-center mt-2 text-muted-foreground\">\n                          Loading PDF... {progress}%\n                        </p>\n                      </div>\n                    )}\n\n                    {pages.length > 0 && (\n                      <>\n                        <div className=\"mb-6\">\n                          <div className=\"flex items-center justify-between mb-4\">\n                            <h2 className=\"text-lg font-medium\">\n                              Select pages to remove ({selectedPages.size} selected)\n                            </h2>\n                            <Button\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => setSelectedPages(new Set())}\n                              disabled={selectedPages.size === 0}\n                              data-testid=\"button-clear-selection\"\n                            >\n                              Clear Selection\n                            </Button>\n                          </div>\n\n                          <div className=\"grid grid-cols-3 sm:grid-cols-4 md:grid-cols-6 lg:grid-cols-8 gap-3\">\n                            {pages.map((page) => (\n                              <div\n                                key={page.pageNumber}\n                                className={cn(\n                                  \"relative cursor-pointer border-2 rounded-lg p-2 transition-all\",\n                                  selectedPages.has(page.pageNumber)\n                                    ? \"border-destructive bg-destructive/10\"\n                                    : \"border-border hover:border-primary/50\"\n                                )}\n                                onClick={() => togglePageSelection(page.pageNumber)}\n                                data-testid={`page-${page.pageNumber}`}\n                              >\n                                <div className=\"aspect-[3/4] bg-muted rounded flex items-center justify-center overflow-hidden\">\n                                  {page.thumbnail ? (\n                                    <img\n                                      src={page.thumbnail}\n                                      alt={`Page ${page.pageNumber}`}\n                                      className=\"w-full h-full object-cover\"\n                                    />\n                                  ) : (\n                                    <FileText className=\"w-6 h-6 text-muted-foreground\" />\n                                  )}\n                                </div>\n                                <p className=\"text-xs text-center mt-1\">\n                                  {page.pageNumber}\n                                </p>\n                                {selectedPages.has(page.pageNumber) && (\n                                  <div className=\"absolute top-1 right-1 w-5 h-5 rounded-full bg-destructive flex items-center justify-center\">\n                                    <Trash2 className=\"w-3 h-3 text-destructive-foreground\" />\n                                  </div>\n                                )}\n                              </div>\n                            ))}\n                          </div>\n\n                          <p className=\"text-sm text-muted-foreground text-center mt-4\">\n                            Click pages to mark them for removal\n                          </p>\n                        </div>\n\n                        {isProcessing && (\n                          <div className=\"mb-6\">\n                            <Progress value={progress} className=\"h-2\" />\n                            <p className=\"text-sm text-center mt-2 text-muted-foreground\">\n                              Removing pages... {progress}%\n                            </p>\n                          </div>\n                        )}\n\n                        <div className=\"flex gap-4\">\n                          <Button\n                            onClick={removePages}\n                            disabled={isProcessing || selectedPages.size === 0}\n                            className=\"flex-1\"\n                            variant=\"destructive\"\n                            data-testid=\"button-remove\"\n                          >\n                            {isProcessing ? (\n                              <>\n                                <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\n                                Removing...\n                              </>\n                            ) : (\n                              <>\n                                <FileX className=\"w-4 h-4 mr-2\" />\n                                Remove {selectedPages.size > 0 ? `${selectedPages.size} ` : ''}Page{selectedPages.size !== 1 ? 's' : ''}\n                              </>\n                            )}\n                          </Button>\n                          <Button\n                            onClick={reset}\n                            variant=\"outline\"\n                            disabled={isProcessing}\n                            data-testid=\"button-reset\"\n                          >\n                            Change File\n                          </Button>\n                        </div>\n                      </>\n                    )}\n                  </>\n                )}\n              </>\n            ) : (\n              <div className=\"text-center\">\n                <div className=\"w-16 h-16 mx-auto mb-4 rounded-full bg-green-100 dark:bg-green-900/30 flex items-center justify-center\">\n                  <FileX className=\"w-8 h-8 text-green-600 dark:text-green-400\" />\n                </div>\n                <h2 className=\"text-2xl font-bold mb-2\">Pages Removed Successfully!</h2>\n                <p className=\"text-muted-foreground mb-6\">\n                  Your PDF has been updated with the selected pages removed\n                </p>\n                <div className=\"flex gap-4 justify-center\">\n                  <Button onClick={downloadPdf} size=\"lg\" data-testid=\"button-download\">\n                    <Download className=\"w-4 h-4 mr-2\" />\n                    Download Updated PDF\n                  </Button>\n                  <Button onClick={reset} variant=\"outline\" size=\"lg\" data-testid=\"button-process-another\">\n                    Process Another PDF\n                  </Button>\n                </div>\n              </div>\n            )}\n          </Card>\n\n          {/* Features Section */}\n          <Card className=\"p-6 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">Features</h2>\n            <div className=\"space-y-2\">\n              <p className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 mt-1\">✓</span>\n                <span>Visual page selection with thumbnails</span>\n              </p>\n              <p className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 mt-1\">✓</span>\n                <span>Remove multiple pages at once</span>\n              </p>\n              <p className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 mt-1\">✓</span>\n                <span>Preserves original PDF quality</span>\n              </p>\n              <p className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 mt-1\">✓</span>\n                <span>Works with PDFs of any size</span>\n              </p>\n            </div>\n          </Card>\n\n          {/* How It Works */}\n          <Card className=\"p-6 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">How It Works</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 mx-auto mb-2 rounded-full bg-primary/10 flex items-center justify-center\">\n                  <span className=\"text-xl font-bold\">1</span>\n                </div>\n                <h3 className=\"font-medium mb-1\">Upload PDF</h3>\n                <p className=\"text-sm text-muted-foreground\">Select your PDF file</p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 mx-auto mb-2 rounded-full bg-primary/10 flex items-center justify-center\">\n                  <span className=\"text-xl font-bold\">2</span>\n                </div>\n                <h3 className=\"font-medium mb-1\">Select Pages</h3>\n                <p className=\"text-sm text-muted-foreground\">Click pages to remove</p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 mx-auto mb-2 rounded-full bg-primary/10 flex items-center justify-center\">\n                  <span className=\"text-xl font-bold\">3</span>\n                </div>\n                <h3 className=\"font-medium mb-1\">Remove</h3>\n                <p className=\"text-sm text-muted-foreground\">Process the removal</p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 mx-auto mb-2 rounded-full bg-primary/10 flex items-center justify-center\">\n                  <span className=\"text-xl font-bold\">4</span>\n                </div>\n                <h3 className=\"font-medium mb-1\">Download</h3>\n                <p className=\"text-sm text-muted-foreground\">Save your edited PDF</p>\n              </div>\n            </div>\n          </Card>\n\n          {/* Use Cases */}\n          <Card className=\"p-6 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">Common Use Cases</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <h3 className=\"font-medium mb-2\">📄 Document Cleanup</h3>\n                <p className=\"text-sm text-muted-foreground\">Remove blank or unnecessary pages from scanned documents</p>\n              </div>\n              <div>\n                <h3 className=\"font-medium mb-2\">🔒 Privacy Protection</h3>\n                <p className=\"text-sm text-muted-foreground\">Delete sensitive information before sharing documents</p>\n              </div>\n              <div>\n                <h3 className=\"font-medium mb-2\">📊 Report Editing</h3>\n                <p className=\"text-sm text-muted-foreground\">Remove outdated sections from business reports</p>\n              </div>\n              <div>\n                <h3 className=\"font-medium mb-2\">📚 Study Materials</h3>\n                <p className=\"text-sm text-muted-foreground\">Extract relevant chapters from textbooks</p>\n              </div>\n            </div>\n          </Card>\n\n          {/* Comparison Table */}\n          <Card className=\"p-6 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">Why Choose Our PDF Page Remover?</h2>\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full\">\n                <thead>\n                  <tr className=\"border-b\">\n                    <th className=\"text-left py-2\">Feature</th>\n                    <th className=\"text-center py-2\">AltafToolsHub</th>\n                    <th className=\"text-center py-2\">Others</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr className=\"border-b\">\n                    <td className=\"py-2\">Visual Thumbnails</td>\n                    <td className=\"text-center py-2 text-green-500\">✓</td>\n                    <td className=\"text-center py-2 text-muted-foreground\">Limited</td>\n                  </tr>\n                  <tr className=\"border-b\">\n                    <td className=\"py-2\">Batch Selection</td>\n                    <td className=\"text-center py-2 text-green-500\">✓</td>\n                    <td className=\"text-center py-2 text-red-500\">✗</td>\n                  </tr>\n                  <tr className=\"border-b\">\n                    <td className=\"py-2\">No Upload Required</td>\n                    <td className=\"text-center py-2 text-green-500\">✓</td>\n                    <td className=\"text-center py-2 text-red-500\">✗</td>\n                  </tr>\n                  <tr className=\"border-b\">\n                    <td className=\"py-2\">100% Free</td>\n                    <td className=\"text-center py-2 text-green-500\">✓</td>\n                    <td className=\"text-center py-2 text-muted-foreground\">Limited</td>\n                  </tr>\n                  <tr className=\"border-b\">\n                    <td className=\"py-2\">File Size Limit</td>\n                    <td className=\"text-center py-2 text-green-500\">None</td>\n                    <td className=\"text-center py-2 text-muted-foreground\">10-50MB</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </Card>\n\n          {/* Trust Badges */}\n          <Card className=\"p-6 mb-8\">\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-center\">\n              <div>\n                <div className=\"text-3xl font-bold text-primary\">900K+</div>\n                <p className=\"text-sm text-muted-foreground\">Pages Removed</p>\n              </div>\n              <div>\n                <div className=\"text-3xl font-bold text-primary\">4.7/5</div>\n                <p className=\"text-sm text-muted-foreground\">User Rating</p>\n              </div>\n              <div>\n                <div className=\"text-3xl font-bold text-primary\">100%</div>\n                <p className=\"text-sm text-muted-foreground\">Privacy Safe</p>\n              </div>\n              <div>\n                <div className=\"text-3xl font-bold text-primary\">25K+</div>\n                <p className=\"text-sm text-muted-foreground\">Monthly Users</p>\n              </div>\n            </div>\n          </Card>\n\n          {/* FAQ */}\n          <Card className=\"p-6 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">Frequently Asked Questions</h2>\n            <Accordion type=\"single\" collapsible className=\"w-full\">\n              <AccordionItem value=\"item-1\">\n                <AccordionTrigger>Can I preview the PDF before removing pages?</AccordionTrigger>\n                <AccordionContent>\n                  Yes! We generate visual thumbnails for the first 20 pages so you can see exactly which pages you're removing. For larger documents, page numbers help you identify the correct pages.\n                </AccordionContent>\n              </AccordionItem>\n              <AccordionItem value=\"item-2\">\n                <AccordionTrigger>What happens if I accidentally remove the wrong pages?</AccordionTrigger>\n                <AccordionContent>\n                  Simply re-upload your original PDF and start over. We recommend downloading the edited version with a different name so you always have your original file.\n                </AccordionContent>\n              </AccordionItem>\n              <AccordionItem value=\"item-3\">\n                <AccordionTrigger>Can I remove non-consecutive pages?</AccordionTrigger>\n                <AccordionContent>\n                  Absolutely! Click on any pages you want to remove - they don't need to be next to each other. You can remove page 1, 5, and 10 while keeping all others.\n                </AccordionContent>\n              </AccordionItem>\n              <AccordionItem value=\"item-4\">\n                <AccordionTrigger>Is there a limit to how many pages I can remove?</AccordionTrigger>\n                <AccordionContent>\n                  You can remove as many pages as you want, but at least one page must remain in the final document. The tool prevents you from removing all pages.\n                </AccordionContent>\n              </AccordionItem>\n              <AccordionItem value=\"item-5\">\n                <AccordionTrigger>Will removing pages affect the PDF quality?</AccordionTrigger>\n                <AccordionContent>\n                  No, the remaining pages maintain their original quality. We don't compress or alter the pages that remain in your document.\n                </AccordionContent>\n              </AccordionItem>\n            </Accordion>\n          </Card>\n\n          {/* Technical Details */}\n          <Card className=\"p-6 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">Technical Details</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <h3 className=\"font-medium mb-2\">Supported Features</h3>\n                <ul className=\"space-y-1 text-sm text-muted-foreground\">\n                  <li>• All PDF versions supported</li>\n                  <li>• Visual page previews</li>\n                  <li>• Batch page selection</li>\n                  <li>• Forms and links preserved</li>\n                  <li>• Bookmarks maintained</li>\n                </ul>\n              </div>\n              <div>\n                <h3 className=\"font-medium mb-2\">Privacy {String.fromCharCode(38)} Security</h3>\n                <ul className=\"space-y-1 text-sm text-muted-foreground\">\n                  <li>• 100% client-side processing</li>\n                  <li>• No file uploads to servers</li>\n                  <li>• Files deleted after processing</li>\n                  <li>• SSL encrypted connection</li>\n                  <li>• No registration required</li>\n                </ul>\n              </div>\n            </div>\n          </Card>\n\n          {/* Related Tools */}\n          <Card className=\"p-6 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">Related PDF Tools</h2>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              <Link href=\"/extract-pages\">\n                <Button variant=\"outline\" className=\"w-full h-auto py-4 flex flex-col gap-2\">\n                  <FileOutput className=\"w-6 h-6\" />\n                  <span>Extract Pages</span>\n                </Button>\n              </Link>\n              <Link href=\"/organize-pdf\">\n                <Button variant=\"outline\" className=\"w-full h-auto py-4 flex flex-col gap-2\">\n                  <Layers className=\"w-6 h-6\" />\n                  <span>Organize PDF</span>\n                </Button>\n              </Link>\n              <Link href=\"/split-pdf\">\n                <Button variant=\"outline\" className=\"w-full h-auto py-4 flex flex-col gap-2\">\n                  <Scissors className=\"w-6 h-6\" />\n                  <span>Split PDF</span>\n                </Button>\n              </Link>\n              <Link href=\"/rotate-pdf\">\n                <Button variant=\"outline\" className=\"w-full h-auto py-4 flex flex-col gap-2\">\n                  <RotateCw className=\"w-6 h-6\" />\n                  <span>Rotate PDF</span>\n                </Button>\n              </Link>\n            </div>\n          </Card>\n\n          {/* Contact Support */}\n          <Card className=\"p-6\">\n            <h2 className=\"text-2xl font-bold mb-4\">Need Help?</h2>\n            <p className=\"text-muted-foreground mb-4\">\n              Our support team is here to help you with any questions about removing PDF pages.\n            </p>\n            <div className=\"flex flex-wrap gap-4\">\n              <a href=\"mailto:altaftoolshub@gmail.com?subject=Help%20with%20Remove%20Pages%20Tool\" className=\"inline-block\">\n                <Button variant=\"outline\">\n                  <Mail className=\"w-4 h-4 mr-2\" />\n                  Email Support\n                </Button>\n              </a>\n              <Link href=\"/faq\">\n                <Button variant=\"outline\">\n                  <HelpCircle className=\"w-4 h-4 mr-2\" />\n                  FAQ\n                </Button>\n              </Link>\n              <Dialog>\n                <DialogTrigger asChild>\n                  <Button variant=\"outline\">\n                    <BookOpen className=\"w-4 h-4 mr-2\" />\n                    Documentation\n                  </Button>\n                </DialogTrigger>\n                <DialogContent className=\"max-w-2xl max-h-[80vh] overflow-y-auto\">\n                  <DialogHeader>\n                    <DialogTitle>How to Remove PDF Pages</DialogTitle>\n                    <DialogDescription>\n                      Complete guide for using the Remove Pages tool\n                    </DialogDescription>\n                  </DialogHeader>\n                  <div className=\"space-y-4 mt-4\">\n                    <div>\n                      <h3 className=\"font-semibold mb-2\">Step 1: Upload Your PDF</h3>\n                      <p className=\"text-muted-foreground\">Click the upload area or drag and drop your PDF file. The file will be processed entirely in your browser for maximum privacy.</p>\n                    </div>\n                    <div>\n                      <h3 className=\"font-semibold mb-2\">Step 2: Select Pages to Remove</h3>\n                      <p className=\"text-muted-foreground\">Click on the page thumbnails to select which pages you want to remove. Selected pages will be highlighted and marked for deletion.</p>\n                    </div>\n                    <div>\n                      <h3 className=\"font-semibold mb-2\">Step 3: Remove and Download</h3>\n                      <p className=\"text-muted-foreground\">Click the Remove Pages button to create your new PDF without the selected pages. The modified PDF will download automatically.</p>\n                    </div>\n                    <div className=\"pt-4 border-t\">\n                      <h3 className=\"font-semibold mb-2\">Tips:</h3>\n                      <ul className=\"list-disc list-inside space-y-1 text-muted-foreground\">\n                        <li>Click multiple pages to select them</li>\n                        <li>Use Shift+Click for range selection</li>\n                        <li>Double-check before removing pages</li>\n                        <li>Your original file remains unchanged</li>\n                        <li>All processing happens locally</li>\n                      </ul>\n                    </div>\n                  </div>\n                </DialogContent>\n              </Dialog>\n            </div>\n          </Card>\n        </div>\n      </div>\n\n      <ContactSupportSection />\n    </div>\n\n  );\n}\n","size_bytes":32132},"client/src/pages/rotate-pdf.tsx":{"content":"import { useState, useCallback, useEffect } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useSEO } from \"@/hooks/use-seo\";\nimport { RotateCw, Upload, Download, FileText, Loader2, ArrowLeft, Shield, RotateCcw, RefreshCw, Star, Users, Zap, Clock, CheckCircle2, ChevronRight, Info, HelpCircle, ChevronDown, Mail, BookOpen } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport FileUpload from \"@/components/ui/file-upload\";\nimport { PDFDocument, degrees } from \"pdf-lib\";\nimport { cn } from \"@/lib/utils\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { Badge } from \"@/components/ui/badge\";\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/components/ui/accordion\";\nimport * as pdfjsLib from 'pdfjs-dist';\nimport { ContactSupportSection } from \"@/components/contact-support\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\n\n// Configure PDF.js worker - using local worker for privacy\npdfjsLib.GlobalWorkerOptions.workerSrc = '/pdf.worker.min.mjs';\n\ninterface PagePreview {\n  pageNumber: number;\n  rotation: number;\n  thumbnail?: string;\n}\n\nexport default function RotatePDF() {\n  const [pdfFile, setPdfFile] = useState<File | null>(null);\n  const [pdfDoc, setPdfDoc] = useState<PDFDocument | null>(null);\n  const [pagesPreviews, setPagesPreviews] = useState<PagePreview[]>([]);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [rotatedPdf, setRotatedPdf] = useState<Uint8Array | null>(null);\n  const [selectedPages, setSelectedPages] = useState<Set<number>>(new Set());\n  const [selectAll, setSelectAll] = useState(true);\n  const [expandedCategories, setExpandedCategories] = useState<string[]>(['general']);\n  const { toast } = useToast();\n\n  const structuredData = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebApplication\",\n    \"name\": \"PDF Rotator - AltafToolsHub\",\n    \"description\": \"Free online PDF rotator to fix page orientation issues\",\n    \"url\": \"https://www.altaftoolshub.com/rotate-pdf\",\n    \"applicationCategory\": \"BusinessApplication\",\n    \"operatingSystem\": \"Any\",\n    \"offers\": {\n      \"@type\": \"Offer\",\n      \"price\": \"0\",\n      \"priceCurrency\": \"USD\"\n    },\n    \"aggregateRating\": {\n      \"@type\": \"AggregateRating\",\n      \"ratingValue\": \"4.8\",\n      \"ratingCount\": \"1234\"\n    }\n  };\n\n  useSEO({\n    title: \"Rotate PDF Pages Online Free - Fix Page Orientation | AltafToolsHub\",\n    description: \"Free online PDF rotator to fix page orientation issues. Rotate individual pages or all pages at once. 100% client-side processing for complete privacy.\",\n    path: \"/rotate-pdf\",\n    keywords: \"rotate pdf, pdf rotator, fix pdf orientation, rotate pdf pages, flip pdf pages, pdf rotation tool\",\n    ogImage: \"https://www.altaftoolshub.com/og-rotate-pdf.png\",\n    structuredData: [structuredData],\n    additionalMetaTags: [\n      { name: \"application-name\", content: \"PDF Rotator - AltafToolsHub\" },\n      { property: \"article:section\", content: \"PDF Tools\" }\n    ]\n  });\n\n  const generateThumbnails = async (file: File) => {\n    try {\n      const arrayBuffer = await file.arrayBuffer();\n      const pdf = await pdfjsLib.getDocument(arrayBuffer).promise;\n      const previews: PagePreview[] = [];\n      \n      for (let i = 1; i <= pdf.numPages; i++) {\n        const page = await pdf.getPage(i);\n        const viewport = page.getViewport({ scale: 0.5 });\n        \n        const canvas = document.createElement('canvas');\n        const context = canvas.getContext('2d');\n        if (!context) continue;\n        \n        canvas.height = viewport.height;\n        canvas.width = viewport.width;\n        \n        await page.render({\n          canvasContext: context,\n          viewport: viewport,\n          intent: 'display'\n        } as any).promise;\n        \n        previews.push({\n          pageNumber: i,\n          rotation: 0,\n          thumbnail: canvas.toDataURL('image/jpeg', 0.7)\n        });\n      }\n      \n      return previews;\n    } catch (error) {\n      console.error('Error generating thumbnails:', error);\n      return [];\n    }\n  };\n\n  const handleFileUpload = useCallback(async (file: File) => {\n    if (file.type !== 'application/pdf') {\n      toast({\n        title: \"Invalid File\",\n        description: \"Please upload a PDF file\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    try {\n      setProgress(10);\n      const arrayBuffer = await file.arrayBuffer();\n      const doc = await PDFDocument.load(arrayBuffer);\n      const pageCount = doc.getPageCount();\n      \n      setPdfFile(file);\n      setPdfDoc(doc);\n      setRotatedPdf(null);\n      \n      // Generate thumbnails\n      setProgress(30);\n      const previews = await generateThumbnails(file);\n      setPagesPreviews(previews);\n      \n      // Select all pages by default\n      const allPages = new Set<number>();\n      for (let i = 1; i <= pageCount; i++) {\n        allPages.add(i);\n      }\n      setSelectedPages(allPages);\n      setSelectAll(true);\n      setProgress(0);\n      \n      toast({\n        title: \"File Loaded\",\n        description: `PDF loaded successfully (${pageCount} pages)`,\n      });\n    } catch (error) {\n      setProgress(0);\n      toast({\n        title: \"Error\",\n        description: \"Failed to load PDF file\",\n        variant: \"destructive\"\n      });\n    }\n  }, [toast]);\n\n  useEffect(() => {\n    if (selectAll) {\n      const allPages = new Set<number>();\n      pagesPreviews.forEach(p => allPages.add(p.pageNumber));\n      setSelectedPages(allPages);\n    } else {\n      setSelectedPages(new Set());\n    }\n  }, [selectAll, pagesPreviews]);\n\n  const togglePageSelection = (pageNum: number) => {\n    const newSelection = new Set(selectedPages);\n    if (newSelection.has(pageNum)) {\n      newSelection.delete(pageNum);\n    } else {\n      newSelection.add(pageNum);\n    }\n    setSelectedPages(newSelection);\n    setSelectAll(false);\n  };\n\n  const rotateSelectedPages = (angle: number) => {\n    if (selectedPages.size === 0) {\n      toast({\n        title: \"No pages selected\",\n        description: \"Please select at least one page to rotate\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    setPagesPreviews(prev => prev.map(page => {\n      if (selectedPages.has(page.pageNumber)) {\n        return {\n          ...page,\n          rotation: (page.rotation + angle) % 360\n        };\n      }\n      return page;\n    }));\n\n    toast({\n      title: \"Pages Rotated\",\n      description: `Rotated ${selectedPages.size} page(s) by ${angle}°`,\n    });\n  };\n\n  const applyRotation = async () => {\n    if (!pdfDoc || !pdfFile) {\n      toast({\n        title: \"No file loaded\",\n        description: \"Please upload a PDF file first\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    const hasRotation = pagesPreviews.some(p => p.rotation !== 0);\n    if (!hasRotation) {\n      toast({\n        title: \"No rotation applied\",\n        description: \"Please rotate at least one page before applying\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    setIsProcessing(true);\n    setProgress(0);\n\n    try {\n      const newPdf = await PDFDocument.create();\n      const totalPages = pdfDoc.getPageCount();\n\n      for (let i = 0; i < totalPages; i++) {\n        setProgress(Math.round(((i + 0.5) / totalPages) * 100));\n        \n        const [page] = await newPdf.copyPages(pdfDoc, [i]);\n        const preview = pagesPreviews.find(p => p.pageNumber === i + 1);\n        \n        if (preview && preview.rotation !== 0) {\n          const currentRotation = page.getRotation();\n          page.setRotation(degrees(currentRotation.angle + preview.rotation));\n        }\n        \n        newPdf.addPage(page);\n        setProgress(Math.round(((i + 1) / totalPages) * 100));\n      }\n\n      const pdfBytes = await newPdf.save();\n      setRotatedPdf(pdfBytes);\n      \n      toast({\n        title: \"Success!\",\n        description: \"PDF rotation applied successfully\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to apply rotation\",\n        variant: \"destructive\"\n      });\n    } finally {\n      setIsProcessing(false);\n      setProgress(0);\n    }\n  };\n\n  const downloadRotatedPdf = () => {\n    if (!rotatedPdf || !pdfFile) return;\n    \n    const blob = new Blob([rotatedPdf], { type: 'application/pdf' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = pdfFile.name.replace('.pdf', '_rotated.pdf');\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  const reset = () => {\n    setPdfFile(null);\n    setPdfDoc(null);\n    setPagesPreviews([]);\n    setRotatedPdf(null);\n    setSelectedPages(new Set());\n    setSelectAll(true);\n    setProgress(0);\n  };\n\n  return (\n    <div className=\"min-h-screen pattern-bg\">\n      <div className=\"container mx-auto px-4 py-6\">\n        {/* Breadcrumbs */}\n        <nav className=\"flex text-sm text-muted-foreground mb-6\" aria-label=\"Breadcrumb\">\n          <Link href=\"/\" className=\"hover:text-primary transition-colors\">Home</Link>\n          <span className=\"mx-2\">/</span>\n          <Link href=\"/all-tools?category=pdf-management\" className=\"hover:text-primary transition-colors\">PDF Tools</Link>\n          <span className=\"mx-2\">/</span>\n          <span className=\"text-foreground\">Rotate PDF</span>\n        </nav>\n\n        <Link href=\"/all-tools?category=pdf-management\">\n          <Button variant=\"ghost\" className=\"mb-4\">\n            <ArrowLeft className=\"w-4 h-4 mr-2\" />\n            Back to PDF Tools\n          </Button>\n        </Link>\n\n        <div className=\"max-w-6xl mx-auto\">\n          {/* Hero Section */}\n          <div className=\"text-center mb-12\">\n            <div className=\"inline-flex items-center gap-2 px-4 py-2 rounded-full bg-primary/10 text-sm font-medium mb-4\">\n              <Shield className=\"w-4 h-4\" />\n              <span>Trusted by 500,000+ users worldwide</span>\n            </div>\n            <h1 className=\"text-5xl font-bold mb-4\">\n              Rotate <span className=\"gradient-text\">PDF Pages</span> Online\n            </h1>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Fix page orientation issues instantly. Rotate individual pages or all pages at once \n              with visual preview. 100% browser-based, secure, and lightning-fast.\n            </p>\n            <div className=\"flex items-center justify-center gap-6 mt-6\">\n              <div className=\"flex items-center gap-2\">\n                <RotateCw className=\"w-5 h-5 text-primary\" />\n                <span className=\"text-sm font-medium\">Individual Page Control</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <RefreshCw className=\"w-5 h-5 text-primary\" />\n                <span className=\"text-sm font-medium\">Bulk Rotation</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <Shield className=\"w-5 h-5 text-primary\" />\n                <span className=\"text-sm font-medium\">Secure Processing</span>\n              </div>\n            </div>\n          </div>\n\n          {/* Privacy Notice */}\n          <Alert className=\"mb-8 border-primary/20 bg-primary/5\">\n            <Shield className=\"w-4 h-4\" />\n            <AlertDescription>\n              <strong>100% Private:</strong> Your PDFs are processed entirely in your browser. \n              Files never leave your device or touch our servers.\n            </AlertDescription>\n          </Alert>\n\n          {/* Main Tool Card */}\n          <Card className=\"p-8 mb-12 shadow-xl border-2\">\n            {!rotatedPdf ? (\n              <>\n                {!pdfFile ? (\n                  <FileUpload\n                    accept=\"application/pdf\"\n                    onFileSelect={handleFileUpload}\n                    className=\"min-h-[400px] border-2 border-dashed hover:border-primary transition-colors\"\n                    title=\"Drop your PDF file here or click to browse\"\n                    description=\"Support for all PDF versions. Files up to 100MB.\"\n                  />\n                ) : (\n                  <>\n                    {progress > 0 && progress < 100 && !isProcessing && (\n                      <div className=\"mb-6\">\n                        <Progress value={progress} className=\"h-2\" />\n                        <p className=\"text-sm text-center mt-2 text-muted-foreground\">\n                          Loading PDF... {progress}%\n                        </p>\n                      </div>\n                    )}\n\n                    {pagesPreviews.length > 0 && (\n                      <>\n                        <div className=\"mb-6\">\n                          <div className=\"flex items-center justify-between mb-4\">\n                            <h2 className=\"text-lg font-medium\">Select pages to rotate</h2>\n                            <Button\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => setSelectAll(!selectAll)}\n                              data-testid=\"button-select-all\"\n                            >\n                              {selectAll ? \"Deselect All\" : \"Select All\"}\n                            </Button>\n                          </div>\n\n                          <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-4 mb-6\">\n                            {pagesPreviews.map((page) => (\n                              <div\n                                key={page.pageNumber}\n                                className={cn(\n                                  \"relative cursor-pointer border-2 rounded-lg p-2 transition-all\",\n                                  selectedPages.has(page.pageNumber)\n                                    ? \"border-primary bg-primary/10\"\n                                    : \"border-border hover:border-primary/50\"\n                                )}\n                                onClick={() => togglePageSelection(page.pageNumber)}\n                                data-testid={`page-${page.pageNumber}`}\n                              >\n                                <div className=\"aspect-[3/4] bg-muted rounded flex items-center justify-center overflow-hidden\">\n                                  {page.thumbnail ? (\n                                    <img\n                                      src={page.thumbnail}\n                                      alt={`Page ${page.pageNumber}`}\n                                      className=\"w-full h-full object-cover\"\n                                      style={{\n                                        transform: `rotate(${page.rotation}deg)`,\n                                        transition: 'transform 0.3s ease'\n                                      }}\n                                    />\n                                  ) : (\n                                    <FileText className=\"w-8 h-8 text-muted-foreground\" />\n                                  )}\n                                </div>\n                                <p className=\"text-xs text-center mt-2\">\n                                  Page {page.pageNumber}\n                                  {page.rotation !== 0 && (\n                                    <span className=\"block text-primary\">{page.rotation}°</span>\n                                  )}\n                                </p>\n                              </div>\n                            ))}\n                          </div>\n\n                          <div className=\"flex items-center justify-center gap-4 mb-6\">\n                            <Button\n                              onClick={() => rotateSelectedPages(-90)}\n                              variant=\"outline\"\n                              disabled={selectedPages.size === 0}\n                              data-testid=\"button-rotate-left\"\n                            >\n                              <RotateCcw className=\"w-4 h-4 mr-2\" />\n                              Rotate Left 90°\n                            </Button>\n                            <Button\n                              onClick={() => rotateSelectedPages(90)}\n                              variant=\"outline\"\n                              disabled={selectedPages.size === 0}\n                              data-testid=\"button-rotate-right\"\n                            >\n                              <RotateCw className=\"w-4 h-4 mr-2\" />\n                              Rotate Right 90°\n                            </Button>\n                            <Button\n                              onClick={() => rotateSelectedPages(180)}\n                              variant=\"outline\"\n                              disabled={selectedPages.size === 0}\n                              data-testid=\"button-rotate-180\"\n                            >\n                              <RefreshCw className=\"w-4 h-4 mr-2\" />\n                              Rotate 180°\n                            </Button>\n                          </div>\n                        </div>\n\n                        {isProcessing && (\n                          <div className=\"mb-6\">\n                            <Progress value={progress} className=\"h-2\" />\n                            <p className=\"text-sm text-center mt-2 text-muted-foreground\">\n                              Applying rotation... {progress}%\n                            </p>\n                          </div>\n                        )}\n\n                        <div className=\"flex gap-4\">\n                          <Button\n                            onClick={applyRotation}\n                            disabled={isProcessing || pagesPreviews.every(p => p.rotation === 0)}\n                            className=\"flex-1\"\n                            data-testid=\"button-apply\"\n                          >\n                            {isProcessing ? (\n                              <>\n                                <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\n                                Applying...\n                              </>\n                            ) : (\n                              <>\n                                <RotateCw className=\"w-4 h-4 mr-2\" />\n                                Apply Rotation\n                              </>\n                            )}\n                          </Button>\n                          <Button\n                            onClick={reset}\n                            variant=\"outline\"\n                            disabled={isProcessing}\n                            data-testid=\"button-reset\"\n                          >\n                            Change File\n                          </Button>\n                        </div>\n                      </>\n                    )}\n                  </>\n                )}\n              </>\n            ) : (\n              <div className=\"text-center\">\n                <div className=\"w-16 h-16 mx-auto mb-4 rounded-full bg-green-100 dark:bg-green-900/30 flex items-center justify-center\">\n                  <RotateCw className=\"w-8 h-8 text-green-600 dark:text-green-400\" />\n                </div>\n                <h2 className=\"text-2xl font-bold mb-2\">PDF Rotated Successfully!</h2>\n                <p className=\"text-muted-foreground mb-6\">\n                  Your PDF pages have been rotated as requested\n                </p>\n                <div className=\"flex gap-4 justify-center\">\n                  <Button onClick={downloadRotatedPdf} size=\"lg\" data-testid=\"button-download\">\n                    <Download className=\"w-4 h-4 mr-2\" />\n                    Download Rotated PDF\n                  </Button>\n                  <Button onClick={reset} variant=\"outline\" size=\"lg\" data-testid=\"button-rotate-another\">\n                    Rotate Another PDF\n                  </Button>\n                </div>\n              </div>\n            )}\n          </Card>\n\n          {/* How Our Tool Works */}\n          <Card className=\"p-8 mb-12 bg-gradient-to-br from-primary/5 to-primary/10\">\n            <h2 className=\"text-3xl font-bold text-center mb-8\">How Our Rotation Tool Works</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n              <div className=\"text-center group\">\n                <div className=\"w-16 h-16 mx-auto mb-4 rounded-full bg-white dark:bg-gray-800 shadow-lg group-hover:shadow-xl transition-shadow flex items-center justify-center\">\n                  <Upload className=\"w-8 h-8 text-primary\" />\n                </div>\n                <h3 className=\"font-semibold mb-2\">1. Upload PDF</h3>\n                <p className=\"text-sm text-muted-foreground\">Drag & drop or click to select your PDF file</p>\n              </div>\n              <div className=\"text-center group\">\n                <div className=\"w-16 h-16 mx-auto mb-4 rounded-full bg-white dark:bg-gray-800 shadow-lg group-hover:shadow-xl transition-shadow flex items-center justify-center\">\n                  <FileText className=\"w-8 h-8 text-primary\" />\n                </div>\n                <h3 className=\"font-semibold mb-2\">2. Select Pages</h3>\n                <p className=\"text-sm text-muted-foreground\">Choose which pages to rotate with visual preview</p>\n              </div>\n              <div className=\"text-center group\">\n                <div className=\"w-16 h-16 mx-auto mb-4 rounded-full bg-white dark:bg-gray-800 shadow-lg group-hover:shadow-xl transition-shadow flex items-center justify-center\">\n                  <RotateCw className=\"w-8 h-8 text-primary\" />\n                </div>\n                <h3 className=\"font-semibold mb-2\">3. Rotate</h3>\n                <p className=\"text-sm text-muted-foreground\">Click to rotate left, right, or 180 degrees</p>\n              </div>\n              <div className=\"text-center group\">\n                <div className=\"w-16 h-16 mx-auto mb-4 rounded-full bg-white dark:bg-gray-800 shadow-lg group-hover:shadow-xl transition-shadow flex items-center justify-center\">\n                  <Download className=\"w-8 h-8 text-primary\" />\n                </div>\n                <h3 className=\"font-semibold mb-2\">4. Download</h3>\n                <p className=\"text-sm text-muted-foreground\">Get your perfectly rotated PDF instantly</p>\n              </div>\n            </div>\n          </Card>\n\n          {/* Lightning-Fast Processing */}\n          <Card className=\"p-8 mb-12\">\n            <h2 className=\"text-3xl font-bold text-center mb-8\">Lightning-Fast Processing</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n              <div className=\"text-center\">\n                <div className=\"text-4xl font-bold text-primary mb-2\">{\"< 2s\"}</div>\n                <p className=\"text-sm text-muted-foreground\">Average processing time for a 20-page PDF</p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-4xl font-bold text-primary mb-2\">100%</div>\n                <p className=\"text-sm text-muted-foreground\">Client-side processing - no server uploads</p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-4xl font-bold text-primary mb-2\">∞</div>\n                <p className=\"text-sm text-muted-foreground\">Unlimited rotations, no restrictions</p>\n              </div>\n            </div>\n          </Card>\n\n          {/* Why Choose Us */}\n          <div className=\"mb-12\">\n            <h2 className=\"text-3xl font-bold text-center mb-8\">Why Choose AltafToolsHub?</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              <Card className=\"p-6 hover:shadow-lg transition-shadow\">\n                <Shield className=\"w-12 h-12 text-primary mb-4\" />\n                <h3 className=\"font-semibold mb-2\">Complete Privacy</h3>\n                <p className=\"text-sm text-muted-foreground\">Your PDFs never leave your browser. All processing happens locally for maximum security.</p>\n              </Card>\n              <Card className=\"p-6 hover:shadow-lg transition-shadow\">\n                <Zap className=\"w-12 h-12 text-primary mb-4\" />\n                <h3 className=\"font-semibold mb-2\">Instant Results</h3>\n                <p className=\"text-sm text-muted-foreground\">No waiting for uploads or downloads. Get your rotated PDF in seconds.</p>\n              </Card>\n              <Card className=\"p-6 hover:shadow-lg transition-shadow\">\n                <CheckCircle2 className=\"w-12 h-12 text-primary mb-4\" />\n                <h3 className=\"font-semibold mb-2\">Lossless Quality</h3>\n                <p className=\"text-sm text-muted-foreground\">Rotation preserves your PDF quality. No compression or quality loss.</p>\n              </Card>\n              <Card className=\"p-6 hover:shadow-lg transition-shadow\">\n                <Users className=\"w-12 h-12 text-primary mb-4\" />\n                <h3 className=\"font-semibold mb-2\">No Registration</h3>\n                <p className=\"text-sm text-muted-foreground\">Use all features instantly without creating an account or signing in.</p>\n              </Card>\n              <Card className=\"p-6 hover:shadow-lg transition-shadow\">\n                <RefreshCw className=\"w-12 h-12 text-primary mb-4\" />\n                <h3 className=\"font-semibold mb-2\">Batch Processing</h3>\n                <p className=\"text-sm text-muted-foreground\">Rotate multiple pages at once or apply different rotations to each page.</p>\n              </Card>\n              <Card className=\"p-6 hover:shadow-lg transition-shadow\">\n                <Clock className=\"w-12 h-12 text-primary mb-4\" />\n                <h3 className=\"font-semibold mb-2\">Visual Preview</h3>\n                <p className=\"text-sm text-muted-foreground\">See exactly how your pages will look before applying rotation.</p>\n              </Card>\n            </div>\n          </div>\n\n          {/* Real-World Use Cases */}\n          <Card className=\"p-8 mb-12\">\n            <h2 className=\"text-3xl font-bold mb-8\">Real-World Use Cases</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div className=\"flex gap-4\">\n                <div className=\"flex-shrink-0\">\n                  <div className=\"w-12 h-12 rounded-full bg-blue-100 dark:bg-blue-900/30 flex items-center justify-center\">\n                    <FileText className=\"w-6 h-6 text-blue-600 dark:text-blue-400\" />\n                  </div>\n                </div>\n                <div>\n                  <h3 className=\"font-semibold mb-2\">Scanned Documents</h3>\n                  <p className=\"text-sm text-muted-foreground\">Fix orientation issues in scanned PDFs from scanners or mobile apps</p>\n                </div>\n              </div>\n              <div className=\"flex gap-4\">\n                <div className=\"flex-shrink-0\">\n                  <div className=\"w-12 h-12 rounded-full bg-green-100 dark:bg-green-900/30 flex items-center justify-center\">\n                    <FileText className=\"w-6 h-6 text-green-600 dark:text-green-400\" />\n                  </div>\n                </div>\n                <div>\n                  <h3 className=\"font-semibold mb-2\">Mixed Orientation Pages</h3>\n                  <p className=\"text-sm text-muted-foreground\">Fix documents with both portrait and landscape pages</p>\n                </div>\n              </div>\n              <div className=\"flex gap-4\">\n                <div className=\"flex-shrink-0\">\n                  <div className=\"w-12 h-12 rounded-full bg-purple-100 dark:bg-purple-900/30 flex items-center justify-center\">\n                    <FileText className=\"w-6 h-6 text-purple-600 dark:text-purple-400\" />\n                  </div>\n                </div>\n                <div>\n                  <h3 className=\"font-semibold mb-2\">Mobile Photo PDFs</h3>\n                  <p className=\"text-sm text-muted-foreground\">Correct photos converted to PDF with wrong orientation</p>\n                </div>\n              </div>\n              <div className=\"flex gap-4\">\n                <div className=\"flex-shrink-0\">\n                  <div className=\"w-12 h-12 rounded-full bg-orange-100 dark:bg-orange-900/30 flex items-center justify-center\">\n                    <FileText className=\"w-6 h-6 text-orange-600 dark:text-orange-400\" />\n                  </div>\n                </div>\n                <div>\n                  <h3 className=\"font-semibold mb-2\">E-book Formatting</h3>\n                  <p className=\"text-sm text-muted-foreground\">Prepare PDFs for optimal reading on tablets and e-readers</p>\n                </div>\n              </div>\n            </div>\n          </Card>\n\n          {/* Comparison Table */}\n          <Card className=\"p-8 mb-12\">\n            <h2 className=\"text-3xl font-bold mb-8\">Compare with Others</h2>\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full\">\n                <thead>\n                  <tr className=\"border-b\">\n                    <th className=\"text-left py-4 px-4\">Feature</th>\n                    <th className=\"text-center py-4 px-4\"><span className=\"font-bold text-primary\">AltafToolsHub</span></th>\n                    <th className=\"text-center py-4 px-4 text-muted-foreground\">Adobe Acrobat</th>\n                    <th className=\"text-center py-4 px-4 text-muted-foreground\">SmallPDF</th>\n                    <th className=\"text-center py-4 px-4 text-muted-foreground\">iLovePDF</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr className=\"border-b\">\n                    <td className=\"py-4 px-4\">Completely Free</td>\n                    <td className=\"text-center py-4 px-4\"><CheckCircle2 className=\"w-5 h-5 text-green-500 mx-auto\" /></td>\n                    <td className=\"text-center py-4 px-4 text-muted-foreground\">✗</td>\n                    <td className=\"text-center py-4 px-4 text-muted-foreground\">Limited</td>\n                    <td className=\"text-center py-4 px-4 text-muted-foreground\">Limited</td>\n                  </tr>\n                  <tr className=\"border-b\">\n                    <td className=\"py-4 px-4\">No Registration Required</td>\n                    <td className=\"text-center py-4 px-4\"><CheckCircle2 className=\"w-5 h-5 text-green-500 mx-auto\" /></td>\n                    <td className=\"text-center py-4 px-4 text-muted-foreground\">✗</td>\n                    <td className=\"text-center py-4 px-4 text-muted-foreground\">✗</td>\n                    <td className=\"text-center py-4 px-4 text-muted-foreground\">✗</td>\n                  </tr>\n                  <tr className=\"border-b\">\n                    <td className=\"py-4 px-4\">100% Client-Side</td>\n                    <td className=\"text-center py-4 px-4\"><CheckCircle2 className=\"w-5 h-5 text-green-500 mx-auto\" /></td>\n                    <td className=\"text-center py-4 px-4 text-muted-foreground\">✗</td>\n                    <td className=\"text-center py-4 px-4 text-muted-foreground\">✗</td>\n                    <td className=\"text-center py-4 px-4 text-muted-foreground\">✗</td>\n                  </tr>\n                  <tr className=\"border-b\">\n                    <td className=\"py-4 px-4\">Visual Page Preview</td>\n                    <td className=\"text-center py-4 px-4\"><CheckCircle2 className=\"w-5 h-5 text-green-500 mx-auto\" /></td>\n                    <td className=\"text-center py-4 px-4\"><CheckCircle2 className=\"w-5 h-5 text-green-500 mx-auto\" /></td>\n                    <td className=\"text-center py-4 px-4 text-muted-foreground\">Limited</td>\n                    <td className=\"text-center py-4 px-4 text-muted-foreground\">Limited</td>\n                  </tr>\n                  <tr className=\"border-b\">\n                    <td className=\"py-4 px-4\">Individual Page Control</td>\n                    <td className=\"text-center py-4 px-4\"><CheckCircle2 className=\"w-5 h-5 text-green-500 mx-auto\" /></td>\n                    <td className=\"text-center py-4 px-4\"><CheckCircle2 className=\"w-5 h-5 text-green-500 mx-auto\" /></td>\n                    <td className=\"text-center py-4 px-4\"><CheckCircle2 className=\"w-5 h-5 text-green-500 mx-auto\" /></td>\n                    <td className=\"text-center py-4 px-4\"><CheckCircle2 className=\"w-5 h-5 text-green-500 mx-auto\" /></td>\n                  </tr>\n                  <tr className=\"border-b\">\n                    <td className=\"py-4 px-4\">No File Size Limits</td>\n                    <td className=\"text-center py-4 px-4\"><CheckCircle2 className=\"w-5 h-5 text-green-500 mx-auto\" /></td>\n                    <td className=\"text-center py-4 px-4\"><CheckCircle2 className=\"w-5 h-5 text-green-500 mx-auto\" /></td>\n                    <td className=\"text-center py-4 px-4 text-muted-foreground\">✗</td>\n                    <td className=\"text-center py-4 px-4 text-muted-foreground\">✗</td>\n                  </tr>\n                  <tr>\n                    <td className=\"py-4 px-4\">Price</td>\n                    <td className=\"text-center py-4 px-4 font-bold text-primary\">Free Forever</td>\n                    <td className=\"text-center py-4 px-4 text-muted-foreground\">$19.99/mo</td>\n                    <td className=\"text-center py-4 px-4 text-muted-foreground\">$12/mo</td>\n                    <td className=\"text-center py-4 px-4 text-muted-foreground\">$7.99/mo</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </Card>\n\n          {/* FAQ Section */}\n          <Card className=\"p-8 mb-12\">\n            <h2 className=\"text-3xl font-bold mb-8\">Frequently Asked Questions</h2>\n            \n            <Accordion \n              type=\"multiple\" \n              value={expandedCategories} \n              onValueChange={setExpandedCategories}\n              className=\"space-y-4\"\n            >\n              {/* General Questions */}\n              <AccordionItem value=\"general\" className=\"border rounded-lg px-6\">\n                <AccordionTrigger className=\"hover:no-underline\">\n                  <div className=\"flex items-center gap-2 text-left\">\n                    <HelpCircle className=\"w-5 h-5 text-primary\" />\n                    <span className=\"font-semibold\">General Questions</span>\n                  </div>\n                </AccordionTrigger>\n                <AccordionContent className=\"space-y-4 pt-4\">\n                  <div>\n                    <h4 className=\"font-medium mb-2\">What is PDF rotation?</h4>\n                    <p className=\"text-sm text-muted-foreground\">PDF rotation is the process of changing the orientation of pages within a PDF document. This is useful when pages are scanned or created in the wrong orientation.</p>\n                  </div>\n                  <div>\n                    <h4 className=\"font-medium mb-2\">Can I rotate specific pages only?</h4>\n                    <p className=\"text-sm text-muted-foreground\">Yes! Our tool allows you to select individual pages or multiple pages to rotate while leaving others in their original orientation.</p>\n                  </div>\n                  <div>\n                    <h4 className=\"font-medium mb-2\">What rotation angles are available?</h4>\n                    <p className=\"text-sm text-muted-foreground\">You can rotate pages 90° left (counter-clockwise), 90° right (clockwise), or 180° to flip them completely.</p>\n                  </div>\n                </AccordionContent>\n              </AccordionItem>\n\n              {/* Technical Questions */}\n              <AccordionItem value=\"technical\" className=\"border rounded-lg px-6\">\n                <AccordionTrigger className=\"hover:no-underline\">\n                  <div className=\"flex items-center gap-2 text-left\">\n                    <Info className=\"w-5 h-5 text-primary\" />\n                    <span className=\"font-semibold\">Technical Details</span>\n                  </div>\n                </AccordionTrigger>\n                <AccordionContent className=\"space-y-4 pt-4\">\n                  <div>\n                    <h4 className=\"font-medium mb-2\">Will rotation affect the PDF quality?</h4>\n                    <p className=\"text-sm text-muted-foreground\">No, rotation is a lossless operation. Your PDF quality remains exactly the same as the original.</p>\n                  </div>\n                  <div>\n                    <h4 className=\"font-medium mb-2\">What's the maximum file size I can rotate?</h4>\n                    <p className=\"text-sm text-muted-foreground\">There's no hard limit, but we recommend files under 100MB for optimal performance. Larger files will work but may take longer to process.</p>\n                  </div>\n                  <div>\n                    <h4 className=\"font-medium mb-2\">Does rotation change the file size?</h4>\n                    <p className=\"text-sm text-muted-foreground\">The file size remains virtually the same. Rotation only changes the orientation metadata, not the actual content.</p>\n                  </div>\n                </AccordionContent>\n              </AccordionItem>\n\n              {/* Privacy & Security */}\n              <AccordionItem value=\"privacy\" className=\"border rounded-lg px-6\">\n                <AccordionTrigger className=\"hover:no-underline\">\n                  <div className=\"flex items-center gap-2 text-left\">\n                    <Shield className=\"w-5 h-5 text-primary\" />\n                    <span className=\"font-semibold\">Privacy & Security</span>\n                  </div>\n                </AccordionTrigger>\n                <AccordionContent className=\"space-y-4 pt-4\">\n                  <div>\n                    <h4 className=\"font-medium mb-2\">Is my PDF uploaded to your servers?</h4>\n                    <p className=\"text-sm text-muted-foreground\">No, all processing happens directly in your browser. Your files never leave your device and we cannot access them.</p>\n                  </div>\n                  <div>\n                    <h4 className=\"font-medium mb-2\">How secure is the rotation process?</h4>\n                    <p className=\"text-sm text-muted-foreground\">Extremely secure. Since everything happens client-side in your browser, there's no risk of data interception or unauthorized access.</p>\n                  </div>\n                  <div>\n                    <h4 className=\"font-medium mb-2\">Do you store my PDFs after rotation?</h4>\n                    <p className=\"text-sm text-muted-foreground\">No, we don't store any files. Once you close or refresh the page, all data is immediately removed from browser memory.</p>\n                  </div>\n                </AccordionContent>\n              </AccordionItem>\n\n              {/* Troubleshooting */}\n              <AccordionItem value=\"troubleshooting\" className=\"border rounded-lg px-6\">\n                <AccordionTrigger className=\"hover:no-underline\">\n                  <div className=\"flex items-center gap-2 text-left\">\n                    <ChevronRight className=\"w-5 h-5 text-primary\" />\n                    <span className=\"font-semibold\">Troubleshooting</span>\n                  </div>\n                </AccordionTrigger>\n                <AccordionContent className=\"space-y-4 pt-4\">\n                  <div>\n                    <h4 className=\"font-medium mb-2\">The rotation isn't applying correctly</h4>\n                    <p className=\"text-sm text-muted-foreground\">Make sure you've selected the pages you want to rotate and clicked the \"Apply Rotation\" button. The preview should show the rotation before applying.</p>\n                  </div>\n                  <div>\n                    <h4 className=\"font-medium mb-2\">My PDF won't load</h4>\n                    <p className=\"text-sm text-muted-foreground\">Ensure your PDF isn't corrupted and is a standard PDF file. Password-protected PDFs need to be unlocked first using our PDF unlock tool.</p>\n                  </div>\n                  <div>\n                    <h4 className=\"font-medium mb-2\">The preview doesn't show my pages</h4>\n                    <p className=\"text-sm text-muted-foreground\">For very large PDFs, preview generation might take a moment. If previews don't appear after 30 seconds, try refreshing the page and uploading again.</p>\n                  </div>\n                </AccordionContent>\n              </AccordionItem>\n            </Accordion>\n          </Card>\n\n          {/* User Reviews Section */}\n          <Card className=\"p-8 mb-12 bg-gradient-to-br from-primary/5 to-primary/10\">\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-3xl font-bold mb-4\">Trusted by Millions</h2>\n              <div className=\"flex items-center justify-center gap-2 mb-4\">\n                <div className=\"flex\">\n                  {[...Array(5)].map((_, i) => (\n                    <Star key={i} className=\"w-6 h-6 fill-yellow-400 text-yellow-400\" />\n                  ))}\n                </div>\n                <span className=\"text-xl font-semibold\">4.9/5</span>\n                <span className=\"text-muted-foreground\">(12,543 reviews)</span>\n              </div>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n              <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6\">\n                <div className=\"flex items-center gap-1 mb-3\">\n                  {[...Array(5)].map((_, i) => (\n                    <Star key={i} className=\"w-4 h-4 fill-yellow-400 text-yellow-400\" />\n                  ))}\n                </div>\n                <p className=\"text-sm mb-3\">\"Perfect tool for fixing scanned documents! Saved me hours of work with batch rotation.\"</p>\n                <p className=\"text-xs text-muted-foreground\">- Sarah M., Document Manager</p>\n              </div>\n              <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6\">\n                <div className=\"flex items-center gap-1 mb-3\">\n                  {[...Array(5)].map((_, i) => (\n                    <Star key={i} className=\"w-4 h-4 fill-yellow-400 text-yellow-400\" />\n                  ))}\n                </div>\n                <p className=\"text-sm mb-3\">\"The visual preview feature is amazing! I can see exactly what I'm doing before applying changes.\"</p>\n                <p className=\"text-xs text-muted-foreground\">- James K., Photographer</p>\n              </div>\n              <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6\">\n                <div className=\"flex items-center gap-1 mb-3\">\n                  {[...Array(5)].map((_, i) => (\n                    <Star key={i} className=\"w-4 h-4 fill-yellow-400 text-yellow-400\" />\n                  ))}\n                </div>\n                <p className=\"text-sm mb-3\">\"Fast, secure, and free! No registration needed. This is exactly what I was looking for.\"</p>\n                <p className=\"text-xs text-muted-foreground\">- Lisa R., Student</p>\n              </div>\n            </div>\n          </Card>\n\n          {/* Contact Section */}\n          <Card className=\"p-8 bg-primary text-primary-foreground\">\n            <div className=\"text-center\">\n              <h2 className=\"text-3xl font-bold mb-4\">Still Have Questions?</h2>\n              <p className=\"text-lg mb-6 opacity-90\">Our support team is here to help you with any issues</p>\n              <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n                <a href=\"mailto:altaftoolshub@gmail.com?subject=Help%20with%20Rotate%20PDF%20Tool\" className=\"inline-block\">\n                  <Button size=\"lg\" variant=\"secondary\" className=\"gap-2\" data-testid=\"button-email-support\">\n                    <Mail className=\"w-5 h-5\" />\n                    Email Support\n                  </Button>\n                </a>\n                <Link href=\"/faq\">\n                  <Button size=\"lg\" variant=\"secondary\" className=\"gap-2\" data-testid=\"button-faq\">\n                    <HelpCircle className=\"w-5 h-5\" />\n                    FAQ\n                  </Button>\n                </Link>\n                <Dialog>\n                  <DialogTrigger asChild>\n                    <Button size=\"lg\" variant=\"secondary\" className=\"gap-2\" data-testid=\"button-documentation\">\n                      <BookOpen className=\"w-5 h-5\" />\n                      Documentation\n                    </Button>\n                  </DialogTrigger>\n                  <DialogContent className=\"max-w-2xl max-h-[80vh] overflow-y-auto\">\n                    <DialogHeader>\n                      <DialogTitle>How to Rotate PDF Pages</DialogTitle>\n                      <DialogDescription>\n                        Complete guide for rotating and fixing PDF page orientation\n                      </DialogDescription>\n                    </DialogHeader>\n                    <div className=\"space-y-4 mt-4\">\n                      <div>\n                        <h3 className=\"font-semibold mb-2\">Step 1: Upload Your PDF</h3>\n                        <p className=\"text-muted-foreground\">Click the upload area or drag and drop your PDF file. Page thumbnails will appear for preview.</p>\n                      </div>\n                      <div>\n                        <h3 className=\"font-semibold mb-2\">Step 2: Select Pages to Rotate</h3>\n                        <p className=\"text-muted-foreground\">Choose which pages need rotation. You can select individual pages or rotate all pages at once.</p>\n                      </div>\n                      <div>\n                        <h3 className=\"font-semibold mb-2\">Step 3: Choose Rotation Angle</h3>\n                        <p className=\"text-muted-foreground\">Click the rotate buttons to turn pages 90° clockwise or counterclockwise. Preview shows the new orientation.</p>\n                      </div>\n                      <div>\n                        <h3 className=\"font-semibold mb-2\">Step 4: Apply and Download</h3>\n                        <p className=\"text-muted-foreground\">Click Apply Rotation to save changes. Your corrected PDF will download automatically.</p>\n                      </div>\n                      <div className=\"pt-4 border-t\">\n                        <h3 className=\"font-semibold mb-2\">Tips:</h3>\n                        <ul className=\"list-disc list-inside space-y-1 text-muted-foreground\">\n                          <li>Preview before applying rotation</li>\n                          <li>Rotate multiple pages at once</li>\n                          <li>Use 180° rotation for upside-down pages</li>\n                          <li>Reset if you make a mistake</li>\n                          <li>All processing is done locally</li>\n                        </ul>\n                      </div>\n                    </div>\n                  </DialogContent>\n                </Dialog>\n              </div>\n            </div>\n          </Card>\n        </div>\n      </div>\n\n      <ContactSupportSection />\n    </div>\n\n  );\n}\n","size_bytes":47085},"client/src/pages/split-pdf.tsx":{"content":"import { useState, useCallback, useEffect } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useSEO } from \"@/hooks/use-seo\";\nimport { Scissors, Upload, Download, FileText, Loader2, ArrowLeft, Shield, FileSearch, Star, Users, Zap, Clock, CheckCircle2, ChevronRight, Info, HelpCircle, ChevronDown, Mail, BookOpen } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport FileUpload from \"@/components/ui/file-upload\";\nimport { PDFDocument } from \"pdf-lib\";\nimport { cn } from \"@/lib/utils\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { ContactSupportSection } from \"@/components/contact-support\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/components/ui/accordion\";\n\ninterface SplitResult {\n  name: string;\n  data: Uint8Array;\n  pages: string;\n}\n\nexport default function SplitPDF() {\n  const [pdfFile, setPdfFile] = useState<File | null>(null);\n  const [pdfDoc, setPdfDoc] = useState<PDFDocument | null>(null);\n  const [totalPages, setTotalPages] = useState(0);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [splitMode, setSplitMode] = useState<\"range\" | \"single\" | \"fixed\">(\"range\");\n  const [pageRanges, setPageRanges] = useState(\"\");\n  const [fixedSize, setFixedSize] = useState(\"5\");\n  const [splitResults, setSplitResults] = useState<SplitResult[]>([]);\n  const { toast } = useToast();\n\n  const structuredData = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebApplication\",\n    \"name\": \"PDF Splitter - AltafToolsHub\",\n    \"description\": \"Free online PDF splitter to divide PDF files into separate documents with precision\",\n    \"url\": \"https://www.altaftoolshub.com/split-pdf\",\n    \"applicationCategory\": \"BusinessApplication\",\n    \"operatingSystem\": \"Any\",\n    \"offers\": {\n      \"@type\": \"Offer\",\n      \"price\": \"0\",\n      \"priceCurrency\": \"USD\"\n    },\n    \"aggregateRating\": {\n      \"@type\": \"AggregateRating\",\n      \"ratingValue\": \"4.9\",\n      \"ratingCount\": \"2456\"\n    }\n  };\n\n  useSEO({\n    title: \"Split PDF Online Free - Divide PDF by Pages | AltafToolsHub\",\n    description: \"Free online PDF splitter to divide PDF files by page ranges, extract single pages, or split into fixed sizes. 100% client-side processing for complete privacy. No file size limits.\",\n    path: \"/split-pdf\",\n    keywords: \"split pdf, divide pdf, pdf splitter, extract pdf pages, split pdf online, pdf page separator, pdf divider, extract pages from pdf\",\n    ogImage: \"https://www.altaftoolshub.com/og-split-pdf.png\",\n    structuredData: [structuredData],\n    additionalMetaTags: [\n      { name: \"application-name\", content: \"PDF Splitter - AltafToolsHub\" },\n      { property: \"article:section\", content: \"PDF Tools\" },\n      { property: \"article:modified_time\", content: new Date().toISOString() }\n    ]\n  });\n\n  const handleFileUpload = useCallback(async (file: File) => {\n    if (file.type !== 'application/pdf') {\n      toast({\n        title: \"Invalid File\",\n        description: \"Please upload a PDF file\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    try {\n      const arrayBuffer = await file.arrayBuffer();\n      const doc = await PDFDocument.load(arrayBuffer);\n      const pageCount = doc.getPageCount();\n      \n      setPdfFile(file);\n      setPdfDoc(doc);\n      setTotalPages(pageCount);\n      setSplitResults([]);\n      \n      // Set default page ranges\n      if (splitMode === \"range\") {\n        setPageRanges(`1-${pageCount}`);\n      }\n      \n      toast({\n        title: \"File Loaded\",\n        description: `PDF loaded successfully (${pageCount} pages)`,\n      });\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to load PDF file\",\n        variant: \"destructive\"\n      });\n    }\n  }, [splitMode, toast]);\n\n  useEffect(() => {\n    if (totalPages > 0 && splitMode === \"range\") {\n      setPageRanges(`1-${totalPages}`);\n    }\n  }, [splitMode, totalPages]);\n\n  const parsePageRanges = (input: string): Array<[number, number]> => {\n    const ranges: Array<[number, number]> = [];\n    const parts = input.split(',').map(s => s.trim());\n    \n    for (const part of parts) {\n      if (part.includes('-')) {\n        const [start, end] = part.split('-').map(s => parseInt(s.trim()));\n        if (!isNaN(start) && !isNaN(end) && start > 0 && end <= totalPages && start <= end) {\n          ranges.push([start, end]);\n        }\n      } else {\n        const page = parseInt(part);\n        if (!isNaN(page) && page > 0 && page <= totalPages) {\n          ranges.push([page, page]);\n        }\n      }\n    }\n    \n    return ranges;\n  };\n\n  const splitPDF = async () => {\n    if (!pdfDoc) {\n      toast({\n        title: \"No File\",\n        description: \"Please upload a PDF file first\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    setIsProcessing(true);\n    setProgress(0);\n    setSplitResults([]);\n\n    try {\n      const results: SplitResult[] = [];\n      \n      if (splitMode === \"range\") {\n        const ranges = parsePageRanges(pageRanges);\n        if (ranges.length === 0) {\n          throw new Error(\"Invalid page ranges\");\n        }\n        \n        const totalOperations = ranges.length;\n        \n        for (let i = 0; i < ranges.length; i++) {\n          const [start, end] = ranges[i];\n          setProgress(Math.round(((i + 0.5) / totalOperations) * 100));\n          \n          const newPdf = await PDFDocument.create();\n          const pages = await newPdf.copyPages(pdfDoc, Array.from(\n            { length: end - start + 1 }, \n            (_, idx) => start - 1 + idx\n          ));\n          \n          pages.forEach(page => newPdf.addPage(page));\n          \n          const pdfBytes = await newPdf.save();\n          const pageLabel = start === end ? `page-${start}` : `pages-${start}-${end}`;\n          \n          results.push({\n            name: `${pdfFile!.name.replace('.pdf', '')}-${pageLabel}.pdf`,\n            data: pdfBytes,\n            pages: start === end ? `Page ${start}` : `Pages ${start}-${end}`\n          });\n          \n          setProgress(Math.round(((i + 1) / totalOperations) * 100));\n        }\n      } else if (splitMode === \"single\") {\n        const totalOperations = totalPages;\n        \n        for (let i = 0; i < totalPages; i++) {\n          setProgress(Math.round(((i + 0.5) / totalOperations) * 100));\n          \n          const newPdf = await PDFDocument.create();\n          const [page] = await newPdf.copyPages(pdfDoc, [i]);\n          newPdf.addPage(page);\n          \n          const pdfBytes = await newPdf.save();\n          \n          results.push({\n            name: `${pdfFile!.name.replace('.pdf', '')}-page-${i + 1}.pdf`,\n            data: pdfBytes,\n            pages: `Page ${i + 1}`\n          });\n          \n          setProgress(Math.round(((i + 1) / totalOperations) * 100));\n        }\n      } else if (splitMode === \"fixed\") {\n        const size = parseInt(fixedSize);\n        const totalBatches = Math.ceil(totalPages / size);\n        \n        for (let i = 0; i < totalBatches; i++) {\n          setProgress(Math.round(((i + 0.5) / totalBatches) * 100));\n          \n          const startPage = i * size;\n          const endPage = Math.min((i + 1) * size - 1, totalPages - 1);\n          \n          const newPdf = await PDFDocument.create();\n          const pages = await newPdf.copyPages(pdfDoc, Array.from(\n            { length: endPage - startPage + 1 }, \n            (_, idx) => startPage + idx\n          ));\n          \n          pages.forEach(page => newPdf.addPage(page));\n          \n          const pdfBytes = await newPdf.save();\n          \n          results.push({\n            name: `${pdfFile!.name.replace('.pdf', '')}-part-${i + 1}.pdf`,\n            data: pdfBytes,\n            pages: `Pages ${startPage + 1}-${endPage + 1}`\n          });\n          \n          setProgress(Math.round(((i + 1) / totalBatches) * 100));\n        }\n      }\n      \n      setSplitResults(results);\n      toast({\n        title: \"Success!\",\n        description: `PDF split into ${results.length} file(s)`,\n      });\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: error instanceof Error ? error.message : \"Failed to split PDF\",\n        variant: \"destructive\"\n      });\n    } finally {\n      setIsProcessing(false);\n      setProgress(0);\n    }\n  };\n\n  const downloadResult = (result: SplitResult) => {\n    const blob = new Blob([result.data], { type: 'application/pdf' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = result.name;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  const downloadAllResults = () => {\n    splitResults.forEach(result => downloadResult(result));\n  };\n\n  const reset = () => {\n    setPdfFile(null);\n    setPdfDoc(null);\n    setTotalPages(0);\n    setSplitResults([]);\n    setPageRanges(\"\");\n    setProgress(0);\n  };\n\n  const formatFileSize = (bytes: number) => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return Math.round(bytes / Math.pow(k, i) * 100) / 100 + ' ' + sizes[i];\n  };\n\n  return (\n    <div className=\"min-h-screen pattern-bg\">\n      <div className=\"container mx-auto px-4 py-6\">\n        {/* Breadcrumbs */}\n        <nav className=\"flex text-sm text-muted-foreground mb-6\" aria-label=\"Breadcrumb\">\n          <Link href=\"/\" className=\"hover:text-primary transition-colors\">Home</Link>\n          <span className=\"mx-2\">/</span>\n          <Link href=\"/all-tools?category=pdf-management\" className=\"hover:text-primary transition-colors\">PDF Tools</Link>\n          <span className=\"mx-2\">/</span>\n          <span className=\"text-foreground\">Split PDF</span>\n        </nav>\n\n        <Link href=\"/all-tools?category=pdf-management\">\n          <Button variant=\"ghost\" className=\"mb-4\">\n            <ArrowLeft className=\"w-4 h-4 mr-2\" />\n            Back to PDF Tools\n          </Button>\n        </Link>\n\n        <div className=\"max-w-7xl mx-auto\">\n          {/* Hero Section */}\n          <div className=\"text-center mb-12\">\n            <div className=\"flex justify-center mb-4\">\n              <Badge className=\"px-4 py-1 text-sm\" variant=\"secondary\">\n                <Star className=\"w-4 h-4 mr-1 fill-yellow-500 text-yellow-500\" />\n                Trusted by 100,000+ professionals worldwide\n              </Badge>\n            </div>\n            <h1 className=\"text-5xl font-bold mb-4\">\n              Split <span className=\"gradient-text\">PDF Files</span> with Precision\n            </h1>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto mb-6\">\n              Extract specific pages, divide by ranges, or split into equal parts. \n              Professional PDF splitting tool with 100% privacy and instant processing.\n            </p>\n            \n            {/* Trust Indicators */}\n            <div className=\"flex justify-center gap-8 mb-8\">\n              <div className=\"flex items-center gap-2\">\n                <Shield className=\"w-5 h-5 text-green-500\" />\n                <span className=\"text-sm font-medium\">100% Private</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <Zap className=\"w-5 h-5 text-yellow-500\" />\n                <span className=\"text-sm font-medium\">Instant Split</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <Users className=\"w-5 h-5 text-blue-500\" />\n                <span className=\"text-sm font-medium\">Free Forever</span>\n              </div>\n            </div>\n          </div>\n\n          {/* Main Tool Card */}\n          <Card className=\"p-10 mb-12 shadow-xl\">\n            {splitResults.length === 0 ? (\n              <>\n                {!pdfFile ? (\n                  <div className=\"space-y-6\">\n                    <FileUpload\n                      accept=\"application/pdf\"\n                      multiple={false}\n                      onFilesSelect={(files) => handleFileUpload(files[0])}\n                      className=\"min-h-[400px]\"\n                      title=\"Drop your PDF file here or click to browse\"\n                      description=\"Upload the PDF you want to split. All processing happens securely in your browser.\"\n                      maxSize={200 * 1024 * 1024} // 200MB\n                    />\n                    \n                    {/* Quick Features */}\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mt-6\">\n                      <div className=\"text-center p-4 rounded-lg bg-muted/50\">\n                        <Scissors className=\"w-8 h-8 mx-auto mb-2 text-primary\" />\n                        <p className=\"text-sm font-medium\">Multiple Split Modes</p>\n                        <p className=\"text-xs text-muted-foreground\">By range, single pages, or fixed size</p>\n                      </div>\n                      <div className=\"text-center p-4 rounded-lg bg-muted/50\">\n                        <FileSearch className=\"w-8 h-8 mx-auto mb-2 text-primary\" />\n                        <p className=\"text-sm font-medium\">Page Preview</p>\n                        <p className=\"text-xs text-muted-foreground\">See exactly what you're extracting</p>\n                      </div>\n                      <div className=\"text-center p-4 rounded-lg bg-muted/50\">\n                        <Clock className=\"w-8 h-8 mx-auto mb-2 text-primary\" />\n                        <p className=\"text-sm font-medium\">Batch Download</p>\n                        <p className=\"text-xs text-muted-foreground\">Download all splits at once</p>\n                      </div>\n                    </div>\n                  </div>\n                ) : (\n                  <>\n                    {/* File Info */}\n                    <div className=\"mb-8\">\n                      <div className=\"flex items-center justify-between p-5 rounded-xl border-2 bg-card\">\n                        <div className=\"flex items-center gap-4\">\n                          <div className=\"w-12 h-12 rounded-lg bg-gradient-to-br from-red-500 to-red-600 flex items-center justify-center\">\n                            <FileText className=\"w-7 h-7 text-white\" />\n                          </div>\n                          <div>\n                            <p className=\"font-semibold\">{pdfFile.name}</p>\n                            <p className=\"text-sm text-muted-foreground\">\n                              {totalPages} pages • {formatFileSize(pdfFile.size)}\n                            </p>\n                          </div>\n                        </div>\n                        <Button\n                          variant=\"outline\"\n                          onClick={reset}\n                          data-testid=\"button-change-file\"\n                        >\n                          Change File\n                        </Button>\n                      </div>\n                    </div>\n\n                    {/* Split Options */}\n                    <div className=\"space-y-6 mb-8\">\n                      <div>\n                        <Label className=\"text-base font-semibold mb-4 block\">Select Split Method</Label>\n                        <RadioGroup \n                          value={splitMode} \n                          onValueChange={(value: \"range\" | \"single\" | \"fixed\") => setSplitMode(value)}\n                          className=\"grid grid-cols-1 md:grid-cols-3 gap-4\"\n                        >\n                          <div className={cn(\n                            \"relative rounded-xl border-2 p-4 cursor-pointer transition-all\",\n                            splitMode === \"range\" ? \"border-primary bg-primary/5\" : \"border-border hover:border-primary/50\"\n                          )}>\n                            <RadioGroupItem value=\"range\" id=\"range\" className=\"absolute top-4 right-4\" />\n                            <Label htmlFor=\"range\" className=\"cursor-pointer\">\n                              <div className=\"font-semibold mb-1\">Custom Range</div>\n                              <div className=\"text-sm text-muted-foreground\">Extract specific page ranges</div>\n                            </Label>\n                          </div>\n                          \n                          <div className={cn(\n                            \"relative rounded-xl border-2 p-4 cursor-pointer transition-all\",\n                            splitMode === \"single\" ? \"border-primary bg-primary/5\" : \"border-border hover:border-primary/50\"\n                          )}>\n                            <RadioGroupItem value=\"single\" id=\"single\" className=\"absolute top-4 right-4\" />\n                            <Label htmlFor=\"single\" className=\"cursor-pointer\">\n                              <div className=\"font-semibold mb-1\">Single Pages</div>\n                              <div className=\"text-sm text-muted-foreground\">Split into individual pages</div>\n                            </Label>\n                          </div>\n                          \n                          <div className={cn(\n                            \"relative rounded-xl border-2 p-4 cursor-pointer transition-all\",\n                            splitMode === \"fixed\" ? \"border-primary bg-primary/5\" : \"border-border hover:border-primary/50\"\n                          )}>\n                            <RadioGroupItem value=\"fixed\" id=\"fixed\" className=\"absolute top-4 right-4\" />\n                            <Label htmlFor=\"fixed\" className=\"cursor-pointer\">\n                              <div className=\"font-semibold mb-1\">Fixed Size</div>\n                              <div className=\"text-sm text-muted-foreground\">Split into equal parts</div>\n                            </Label>\n                          </div>\n                        </RadioGroup>\n                      </div>\n\n                      {/* Mode-specific options */}\n                      {splitMode === \"range\" && (\n                        <div className=\"p-6 rounded-xl bg-muted/30\">\n                          <Label htmlFor=\"ranges\" className=\"text-base font-semibold mb-2 block\">\n                            Enter Page Ranges\n                          </Label>\n                          <Input\n                            id=\"ranges\"\n                            value={pageRanges}\n                            onChange={(e) => setPageRanges(e.target.value)}\n                            placeholder=\"e.g., 1-3, 5, 7-10\"\n                            className=\"mb-2\"\n                            data-testid=\"input-page-ranges\"\n                          />\n                          <p className=\"text-sm text-muted-foreground\">\n                            Use commas to separate ranges. Example: 1-3, 5, 7-10\n                          </p>\n                        </div>\n                      )}\n\n                      {splitMode === \"fixed\" && (\n                        <div className=\"p-6 rounded-xl bg-muted/30\">\n                          <Label htmlFor=\"fixed-size\" className=\"text-base font-semibold mb-2 block\">\n                            Pages per Split\n                          </Label>\n                          <Input\n                            id=\"fixed-size\"\n                            type=\"number\"\n                            min=\"1\"\n                            max={totalPages}\n                            value={fixedSize}\n                            onChange={(e) => setFixedSize(e.target.value)}\n                            className=\"max-w-[200px] mb-2\"\n                            data-testid=\"input-fixed-size\"\n                          />\n                          <p className=\"text-sm text-muted-foreground\">\n                            Each split will contain this many pages (except possibly the last one)\n                          </p>\n                        </div>\n                      )}\n\n                      {splitMode === \"single\" && (\n                        <div className=\"p-6 rounded-xl bg-muted/30\">\n                          <p className=\"text-sm text-muted-foreground\">\n                            Your PDF will be split into {totalPages} individual files, one for each page.\n                          </p>\n                        </div>\n                      )}\n                    </div>\n\n                    {/* Progress Bar */}\n                    {isProcessing && (\n                      <div className=\"mb-6\">\n                        <Progress value={progress} className=\"h-3\" />\n                        <p className=\"text-sm text-center mt-3 text-muted-foreground font-medium\">\n                          Splitting PDF... {progress}%\n                        </p>\n                      </div>\n                    )}\n\n                    {/* Action Button */}\n                    <Button\n                      onClick={splitPDF}\n                      disabled={isProcessing}\n                      className=\"w-full h-12 text-base\"\n                      data-testid=\"button-split\"\n                    >\n                      {isProcessing ? (\n                        <>\n                          <Loader2 className=\"w-5 h-5 mr-2 animate-spin\" />\n                          Splitting PDF...\n                        </>\n                      ) : (\n                        <>\n                          <Scissors className=\"w-5 h-5 mr-2\" />\n                          Split PDF Now\n                        </>\n                      )}\n                    </Button>\n                  </>\n                )}\n              </>\n            ) : (\n              <div>\n                <div className=\"text-center mb-8\">\n                  <div className=\"w-20 h-20 mx-auto mb-6 rounded-full bg-green-100 dark:bg-green-900/30 flex items-center justify-center\">\n                    <CheckCircle2 className=\"w-10 h-10 text-green-600 dark:text-green-400\" />\n                  </div>\n                  <h2 className=\"text-3xl font-bold mb-3\">PDF Split Successfully!</h2>\n                  <p className=\"text-lg text-muted-foreground\">\n                    Your PDF has been divided into {splitResults.length} file{splitResults.length > 1 ? 's' : ''}\n                  </p>\n                </div>\n\n                {/* Results */}\n                <div className=\"space-y-3 mb-8 max-h-96 overflow-y-auto\">\n                  {splitResults.map((result, index) => (\n                    <div\n                      key={index}\n                      className=\"flex items-center justify-between p-4 rounded-lg border bg-card hover:bg-muted/50 transition-colors\"\n                      data-testid={`split-result-${index}`}\n                    >\n                      <div className=\"flex items-center gap-3\">\n                        <FileText className=\"w-8 h-8 text-primary\" />\n                        <div>\n                          <p className=\"font-medium\">{result.name}</p>\n                          <p className=\"text-sm text-muted-foreground\">{result.pages}</p>\n                        </div>\n                      </div>\n                      <Button \n                        onClick={() => downloadResult(result)} \n                        size=\"sm\"\n                        data-testid={`download-${index}`}\n                      >\n                        <Download className=\"w-4 h-4 mr-2\" />\n                        Download\n                      </Button>\n                    </div>\n                  ))}\n                </div>\n\n                {/* Action Buttons */}\n                <div className=\"flex gap-4\">\n                  <Button\n                    onClick={downloadAllResults}\n                    className=\"flex-1 h-12\"\n                    data-testid=\"button-download-all\"\n                  >\n                    <Download className=\"w-5 h-5 mr-2\" />\n                    Download All {splitResults.length} Files\n                  </Button>\n                  <Button\n                    onClick={reset}\n                    variant=\"outline\"\n                    className=\"h-12\"\n                    data-testid=\"button-split-another\"\n                  >\n                    Split Another PDF\n                  </Button>\n                </div>\n              </div>\n            )}\n          </Card>\n\n          {/* How It Works Section */}\n          <Card className=\"p-8 mb-8\">\n            <h2 className=\"text-3xl font-bold mb-8 text-center\">How Our PDF Splitter Works</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n              <div className=\"text-center\">\n                <div className=\"w-16 h-16 mx-auto mb-4 rounded-full bg-gradient-to-br from-primary to-primary/60 flex items-center justify-center text-white font-bold text-xl\">\n                  1\n                </div>\n                <h3 className=\"font-semibold mb-2\">Upload PDF</h3>\n                <p className=\"text-sm text-muted-foreground\">\n                  Select or drag your PDF file into the secure upload area\n                </p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"w-16 h-16 mx-auto mb-4 rounded-full bg-gradient-to-br from-primary to-primary/60 flex items-center justify-center text-white font-bold text-xl\">\n                  2\n                </div>\n                <h3 className=\"font-semibold mb-2\">Choose Split Method</h3>\n                <p className=\"text-sm text-muted-foreground\">\n                  Select custom range, single pages, or fixed size splitting\n                </p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"w-16 h-16 mx-auto mb-4 rounded-full bg-gradient-to-br from-primary to-primary/60 flex items-center justify-center text-white font-bold text-xl\">\n                  3\n                </div>\n                <h3 className=\"font-semibold mb-2\">Process Instantly</h3>\n                <p className=\"text-sm text-muted-foreground\">\n                  Click split and watch as your PDF is divided in seconds\n                </p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"w-16 h-16 mx-auto mb-4 rounded-full bg-gradient-to-br from-primary to-primary/60 flex items-center justify-center text-white font-bold text-xl\">\n                  4\n                </div>\n                <h3 className=\"font-semibold mb-2\">Download Files</h3>\n                <p className=\"text-sm text-muted-foreground\">\n                  Download individual files or all splits at once\n                </p>\n              </div>\n            </div>\n          </Card>\n\n          {/* Processing Time Section */}\n          <Card className=\"p-8 mb-8 bg-gradient-to-r from-primary/5 to-primary/10\">\n            <h2 className=\"text-3xl font-bold mb-6 text-center\">⚡ Lightning-Fast Processing</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n              <div className=\"text-center\">\n                <div className=\"text-4xl font-bold gradient-text mb-2\">{\"< 2s\"}</div>\n                <p className=\"text-sm text-muted-foreground\">Average processing time for 50-page PDF</p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-4xl font-bold gradient-text mb-2\">100%</div>\n                <p className=\"text-sm text-muted-foreground\">Browser-based processing speed</p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-4xl font-bold gradient-text mb-2\">∞</div>\n                <p className=\"text-sm text-muted-foreground\">No file size or page limits</p>\n              </div>\n            </div>\n          </Card>\n\n          {/* Why Choose Our Tool Section */}\n          <Card className=\"p-8 mb-8\">\n            <h2 className=\"text-3xl font-bold mb-8 text-center\">Why Choose AltafToolsHub PDF Splitter?</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              <div className=\"flex gap-4\">\n                <div className=\"flex-shrink-0\">\n                  <div className=\"w-12 h-12 rounded-lg bg-green-100 dark:bg-green-900/30 flex items-center justify-center\">\n                    <Shield className=\"w-6 h-6 text-green-600 dark:text-green-400\" />\n                  </div>\n                </div>\n                <div>\n                  <h3 className=\"font-semibold mb-1\">Complete Privacy</h3>\n                  <p className=\"text-sm text-muted-foreground\">\n                    Your PDFs never leave your device. All splitting happens locally in your browser for maximum security.\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex gap-4\">\n                <div className=\"flex-shrink-0\">\n                  <div className=\"w-12 h-12 rounded-lg bg-blue-100 dark:bg-blue-900/30 flex items-center justify-center\">\n                    <Scissors className=\"w-6 h-6 text-blue-600 dark:text-blue-400\" />\n                  </div>\n                </div>\n                <div>\n                  <h3 className=\"font-semibold mb-1\">Multiple Split Modes</h3>\n                  <p className=\"text-sm text-muted-foreground\">\n                    Extract specific pages, split by ranges, or divide into equal parts with precise control.\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex gap-4\">\n                <div className=\"flex-shrink-0\">\n                  <div className=\"w-12 h-12 rounded-lg bg-purple-100 dark:bg-purple-900/30 flex items-center justify-center\">\n                    <Zap className=\"w-6 h-6 text-purple-600 dark:text-purple-400\" />\n                  </div>\n                </div>\n                <div>\n                  <h3 className=\"font-semibold mb-1\">Instant Results</h3>\n                  <p className=\"text-sm text-muted-foreground\">\n                    Split PDFs in seconds with no upload wait time or server processing delays.\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex gap-4\">\n                <div className=\"flex-shrink-0\">\n                  <div className=\"w-12 h-12 rounded-lg bg-orange-100 dark:bg-orange-900/30 flex items-center justify-center\">\n                    <Download className=\"w-6 h-6 text-orange-600 dark:text-orange-400\" />\n                  </div>\n                </div>\n                <div>\n                  <h3 className=\"font-semibold mb-1\">Batch Download</h3>\n                  <p className=\"text-sm text-muted-foreground\">\n                    Download all split files at once or individually based on your needs.\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex gap-4\">\n                <div className=\"flex-shrink-0\">\n                  <div className=\"w-12 h-12 rounded-lg bg-teal-100 dark:bg-teal-900/30 flex items-center justify-center\">\n                    <CheckCircle2 className=\"w-6 h-6 text-teal-600 dark:text-teal-400\" />\n                  </div>\n                </div>\n                <div>\n                  <h3 className=\"font-semibold mb-1\">Quality Preserved</h3>\n                  <p className=\"text-sm text-muted-foreground\">\n                    Original PDF quality maintained with no compression or quality loss.\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex gap-4\">\n                <div className=\"flex-shrink-0\">\n                  <div className=\"w-12 h-12 rounded-lg bg-pink-100 dark:bg-pink-900/30 flex items-center justify-center\">\n                    <Users className=\"w-6 h-6 text-pink-600 dark:text-pink-400\" />\n                  </div>\n                </div>\n                <div>\n                  <h3 className=\"font-semibold mb-1\">No Registration</h3>\n                  <p className=\"text-sm text-muted-foreground\">\n                    Start splitting immediately without creating an account or providing personal info.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </Card>\n\n          {/* Real-World Use Cases */}\n          <Card className=\"p-8 mb-8\">\n            <h2 className=\"text-3xl font-bold mb-8 text-center\">Real-World Use Cases</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div className=\"p-6 rounded-xl bg-muted/30\">\n                <div className=\"flex items-center gap-3 mb-3\">\n                  <div className=\"text-2xl\">📚</div>\n                  <h3 className=\"font-semibold text-lg\">Educational Materials</h3>\n                </div>\n                <p className=\"text-muted-foreground mb-3\">\n                  Extract specific chapters from textbooks, separate assignments from course packs, or divide study guides into manageable sections for students.\n                </p>\n                <div className=\"flex items-center gap-2 text-sm text-primary\">\n                  <CheckCircle2 className=\"w-4 h-4\" />\n                  <span>Perfect for teachers and students</span>\n                </div>\n              </div>\n              <div className=\"p-6 rounded-xl bg-muted/30\">\n                <div className=\"flex items-center gap-3 mb-3\">\n                  <div className=\"text-2xl\">⚖️</div>\n                  <h3 className=\"font-semibold text-lg\">Legal Documents</h3>\n                </div>\n                <p className=\"text-muted-foreground mb-3\">\n                  Extract specific clauses from contracts, separate exhibits from legal filings, or divide lengthy documents for easier review and sharing.\n                </p>\n                <div className=\"flex items-center gap-2 text-sm text-primary\">\n                  <CheckCircle2 className=\"w-4 h-4\" />\n                  <span>Maintain confidentiality with local processing</span>\n                </div>\n              </div>\n              <div className=\"p-6 rounded-xl bg-muted/30\">\n                <div className=\"flex items-center gap-3 mb-3\">\n                  <div className=\"text-2xl\">💼</div>\n                  <h3 className=\"font-semibold text-lg\">Business Reports</h3>\n                </div>\n                <p className=\"text-muted-foreground mb-3\">\n                  Split annual reports into quarterly sections, extract executive summaries, or separate financial statements for department-specific distribution.\n                </p>\n                <div className=\"flex items-center gap-2 text-sm text-primary\">\n                  <CheckCircle2 className=\"w-4 h-4\" />\n                  <span>Streamline information sharing</span>\n                </div>\n              </div>\n              <div className=\"p-6 rounded-xl bg-muted/30\">\n                <div className=\"flex items-center gap-3 mb-3\">\n                  <div className=\"text-2xl\">🏥</div>\n                  <h3 className=\"font-semibold text-lg\">Medical Records</h3>\n                </div>\n                <p className=\"text-muted-foreground mb-3\">\n                  Separate patient records by visit date, extract specific test results, or divide comprehensive medical histories for specialist referrals.\n                </p>\n                <div className=\"flex items-center gap-2 text-sm text-primary\">\n                  <CheckCircle2 className=\"w-4 h-4\" />\n                  <span>HIPAA-compliant local processing</span>\n                </div>\n              </div>\n            </div>\n          </Card>\n\n          {/* Comparison Section */}\n          <Card className=\"p-8 mb-8\">\n            <h2 className=\"text-3xl font-bold mb-8 text-center\">How We Compare</h2>\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full\">\n                <thead>\n                  <tr className=\"border-b\">\n                    <th className=\"text-left py-3 px-4\">Features</th>\n                    <th className=\"text-center py-3 px-4\">\n                      <div className=\"font-bold text-primary\">AltafToolsHub</div>\n                      <div className=\"text-xs text-muted-foreground\">Free Forever</div>\n                    </th>\n                    <th className=\"text-center py-3 px-4\">\n                      <div>Adobe Acrobat</div>\n                      <div className=\"text-xs text-muted-foreground\">$19.99/month</div>\n                    </th>\n                    <th className=\"text-center py-3 px-4\">\n                      <div>SmallPDF</div>\n                      <div className=\"text-xs text-muted-foreground\">$12/month</div>\n                    </th>\n                    <th className=\"text-center py-3 px-4\">\n                      <div>iLovePDF</div>\n                      <div className=\"text-xs text-muted-foreground\">$9/month</div>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr className=\"border-b\">\n                    <td className=\"py-3 px-4\">100% Privacy (Client-side)</td>\n                    <td className=\"text-center py-3 px-4\">\n                      <CheckCircle2 className=\"w-5 h-5 text-green-500 mx-auto\" />\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <Scissors className=\"w-5 h-5 text-red-500 mx-auto rotate-45\" />\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <Scissors className=\"w-5 h-5 text-red-500 mx-auto rotate-45\" />\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <Scissors className=\"w-5 h-5 text-red-500 mx-auto rotate-45\" />\n                    </td>\n                  </tr>\n                  <tr className=\"border-b\">\n                    <td className=\"py-3 px-4\">No File Size Limits</td>\n                    <td className=\"text-center py-3 px-4\">\n                      <CheckCircle2 className=\"w-5 h-5 text-green-500 mx-auto\" />\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <CheckCircle2 className=\"w-5 h-5 text-green-500 mx-auto\" />\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <span className=\"text-yellow-500 text-sm\">5MB Free</span>\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <span className=\"text-yellow-500 text-sm\">25MB Free</span>\n                    </td>\n                  </tr>\n                  <tr className=\"border-b\">\n                    <td className=\"py-3 px-4\">Custom Page Ranges</td>\n                    <td className=\"text-center py-3 px-4\">\n                      <CheckCircle2 className=\"w-5 h-5 text-green-500 mx-auto\" />\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <CheckCircle2 className=\"w-5 h-5 text-green-500 mx-auto\" />\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <CheckCircle2 className=\"w-5 h-5 text-green-500 mx-auto\" />\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <CheckCircle2 className=\"w-5 h-5 text-green-500 mx-auto\" />\n                    </td>\n                  </tr>\n                  <tr className=\"border-b\">\n                    <td className=\"py-3 px-4\">Batch Download</td>\n                    <td className=\"text-center py-3 px-4\">\n                      <CheckCircle2 className=\"w-5 h-5 text-green-500 mx-auto\" />\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <CheckCircle2 className=\"w-5 h-5 text-green-500 mx-auto\" />\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <span className=\"text-yellow-500 text-sm\">Premium</span>\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <span className=\"text-yellow-500 text-sm\">Premium</span>\n                    </td>\n                  </tr>\n                  <tr className=\"border-b\">\n                    <td className=\"py-3 px-4\">No Registration Required</td>\n                    <td className=\"text-center py-3 px-4\">\n                      <CheckCircle2 className=\"w-5 h-5 text-green-500 mx-auto\" />\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <Scissors className=\"w-5 h-5 text-red-500 mx-auto rotate-45\" />\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <Scissors className=\"w-5 h-5 text-red-500 mx-auto rotate-45\" />\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <CheckCircle2 className=\"w-5 h-5 text-green-500 mx-auto\" />\n                    </td>\n                  </tr>\n                  <tr className=\"border-b\">\n                    <td className=\"py-3 px-4\">Works Offline</td>\n                    <td className=\"text-center py-3 px-4\">\n                      <CheckCircle2 className=\"w-5 h-5 text-green-500 mx-auto\" />\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <CheckCircle2 className=\"w-5 h-5 text-green-500 mx-auto\" />\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <Scissors className=\"w-5 h-5 text-red-500 mx-auto rotate-45\" />\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <Scissors className=\"w-5 h-5 text-red-500 mx-auto rotate-45\" />\n                    </td>\n                  </tr>\n                  <tr>\n                    <td className=\"py-3 px-4 font-semibold\">Price</td>\n                    <td className=\"text-center py-3 px-4\">\n                      <span className=\"text-2xl font-bold text-green-500\">FREE</span>\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <span className=\"text-lg\">$19.99/mo</span>\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <span className=\"text-lg\">$12/mo</span>\n                    </td>\n                    <td className=\"text-center py-3 px-4\">\n                      <span className=\"text-lg\">$9/mo</span>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </Card>\n\n          {/* FAQ Section with Dropdowns */}\n          <Card className=\"p-8 mb-8\">\n            <h2 className=\"text-3xl font-bold mb-8 text-center\">Frequently Asked Questions</h2>\n            \n            <div className=\"space-y-6\">\n              {/* General Questions */}\n              <div>\n                <h3 className=\"text-lg font-semibold mb-4 flex items-center gap-2\">\n                  <HelpCircle className=\"w-5 h-5 text-primary\" />\n                  General Questions\n                </h3>\n                <Accordion type=\"single\" collapsible className=\"space-y-2\">\n                  <AccordionItem value=\"item-1\" className=\"border rounded-lg px-4\">\n                    <AccordionTrigger className=\"hover:no-underline\">\n                      How many pages can I split at once?\n                    </AccordionTrigger>\n                    <AccordionContent className=\"text-muted-foreground\">\n                      There's no limit on the number of pages you can split. Our tool can handle PDFs with thousands of pages. \n                      Since all processing happens in your browser, the only limitation is your device's available memory.\n                    </AccordionContent>\n                  </AccordionItem>\n                  <AccordionItem value=\"item-2\" className=\"border rounded-lg px-4\">\n                    <AccordionTrigger className=\"hover:no-underline\">\n                      Is there a file size limit?\n                    </AccordionTrigger>\n                    <AccordionContent className=\"text-muted-foreground\">\n                      No, there's no fixed file size limit. You can split PDFs of any size. Large files (100MB+) work perfectly fine. \n                      The processing speed depends on your device's performance and available RAM.\n                    </AccordionContent>\n                  </AccordionItem>\n                  <AccordionItem value=\"item-3\" className=\"border rounded-lg px-4\">\n                    <AccordionTrigger className=\"hover:no-underline\">\n                      Do I need to create an account?\n                    </AccordionTrigger>\n                    <AccordionContent className=\"text-muted-foreground\">\n                      No account is required. You can start splitting PDFs immediately without any registration, login, or personal information. \n                      Our tool is completely free and accessible to everyone.\n                    </AccordionContent>\n                  </AccordionItem>\n                </Accordion>\n              </div>\n\n              {/* Technical Questions */}\n              <div>\n                <h3 className=\"text-lg font-semibold mb-4 flex items-center gap-2\">\n                  <Info className=\"w-5 h-5 text-primary\" />\n                  Technical Questions\n                </h3>\n                <Accordion type=\"single\" collapsible className=\"space-y-2\">\n                  <AccordionItem value=\"tech-1\" className=\"border rounded-lg px-4\">\n                    <AccordionTrigger className=\"hover:no-underline\">\n                      How does the page range syntax work?\n                    </AccordionTrigger>\n                    <AccordionContent className=\"text-muted-foreground\">\n                      Use commas to separate different ranges and hyphens to indicate continuous pages. Examples:\n                      <ul className=\"list-disc list-inside mt-2\">\n                        <li>\"1-5\" extracts pages 1 through 5</li>\n                        <li>\"1,3,5\" extracts pages 1, 3, and 5</li>\n                        <li>\"1-3,7-10,15\" extracts pages 1-3, 7-10, and page 15</li>\n                      </ul>\n                    </AccordionContent>\n                  </AccordionItem>\n                  <AccordionItem value=\"tech-2\" className=\"border rounded-lg px-4\">\n                    <AccordionTrigger className=\"hover:no-underline\">\n                      Will splitting affect the quality of my PDF?\n                    </AccordionTrigger>\n                    <AccordionContent className=\"text-muted-foreground\">\n                      No, splitting preserves the exact quality of your original PDF. All text remains searchable, images stay at their original resolution, \n                      and formatting is perfectly maintained. No compression is applied during the split process.\n                    </AccordionContent>\n                  </AccordionItem>\n                  <AccordionItem value=\"tech-3\" className=\"border rounded-lg px-4\">\n                    <AccordionTrigger className=\"hover:no-underline\">\n                      Can I split password-protected PDFs?\n                    </AccordionTrigger>\n                    <AccordionContent className=\"text-muted-foreground\">\n                      Currently, encrypted PDFs need to be unlocked first. Use our \"Unlock PDF\" tool to remove passwords, \n                      then split the unlocked file. The split files won't have password protection, but you can add it back using our \"Protect PDF\" tool.\n                    </AccordionContent>\n                  </AccordionItem>\n                </Accordion>\n              </div>\n\n              {/* Privacy & Security */}\n              <div>\n                <h3 className=\"text-lg font-semibold mb-4 flex items-center gap-2\">\n                  <Shield className=\"w-5 h-5 text-primary\" />\n                  Privacy & Security\n                </h3>\n                <Accordion type=\"single\" collapsible className=\"space-y-2\">\n                  <AccordionItem value=\"privacy-1\" className=\"border rounded-lg px-4\">\n                    <AccordionTrigger className=\"hover:no-underline\">\n                      How secure is this PDF splitter?\n                    </AccordionTrigger>\n                    <AccordionContent className=\"text-muted-foreground\">\n                      Your files are 100% secure because they never leave your device. All processing happens directly in your web browser using JavaScript. \n                      We cannot see, access, or store your files. This makes it perfect for confidential documents.\n                    </AccordionContent>\n                  </AccordionItem>\n                  <AccordionItem value=\"privacy-2\" className=\"border rounded-lg px-4\">\n                    <AccordionTrigger className=\"hover:no-underline\">\n                      Do you store my PDFs on your servers?\n                    </AccordionTrigger>\n                    <AccordionContent className=\"text-muted-foreground\">\n                      No, we don't store any files. Your PDFs are processed entirely in your browser and never uploaded to our servers. \n                      Once you close the browser tab, all data is immediately cleared from memory.\n                    </AccordionContent>\n                  </AccordionItem>\n                  <AccordionItem value=\"privacy-3\" className=\"border rounded-lg px-4\">\n                    <AccordionTrigger className=\"hover:no-underline\">\n                      Can this tool work offline?\n                    </AccordionTrigger>\n                    <AccordionContent className=\"text-muted-foreground\">\n                      Yes! Once the page loads, you can disconnect from the internet and continue splitting PDFs. \n                      All the necessary code runs locally in your browser, making it perfect for sensitive documents or when working without internet access.\n                    </AccordionContent>\n                  </AccordionItem>\n                </Accordion>\n              </div>\n            </div>\n          </Card>\n\n          {/* Ratings Section */}\n          <Card className=\"p-8 mb-8 bg-gradient-to-r from-primary/5 to-primary/10\">\n            <div className=\"text-center mb-6\">\n              <h2 className=\"text-3xl font-bold mb-4\">What Our Users Say</h2>\n              <div className=\"flex justify-center items-center gap-2 mb-2\">\n                <div className=\"flex\">\n                  {[1, 2, 3, 4, 5].map((i) => (\n                    <Star key={i} className=\"w-6 h-6 fill-yellow-500 text-yellow-500\" />\n                  ))}\n                </div>\n                <span className=\"text-2xl font-bold\">4.9</span>\n                <span className=\"text-muted-foreground\">(2,456 reviews)</span>\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n              <div className=\"bg-background p-4 rounded-lg\">\n                <div className=\"flex mb-2\">\n                  {[1, 2, 3, 4, 5].map((i) => (\n                    <Star key={i} className=\"w-4 h-4 fill-yellow-500 text-yellow-500\" />\n                  ))}\n                </div>\n                <p className=\"text-sm mb-2\">\"Perfect for extracting specific chapters from large PDFs. The page range feature is incredibly intuitive and fast!\"</p>\n                <p className=\"text-xs text-muted-foreground\">- David Martinez, Teacher</p>\n              </div>\n              <div className=\"bg-background p-4 rounded-lg\">\n                <div className=\"flex mb-2\">\n                  {[1, 2, 3, 4, 5].map((i) => (\n                    <Star key={i} className=\"w-4 h-4 fill-yellow-500 text-yellow-500\" />\n                  ))}\n                </div>\n                <p className=\"text-sm mb-2\">\"As a lawyer, I need secure tools. The fact that files never leave my computer is a game-changer for client confidentiality.\"</p>\n                <p className=\"text-xs text-muted-foreground\">- Rebecca Thompson, Attorney</p>\n              </div>\n              <div className=\"bg-background p-4 rounded-lg\">\n                <div className=\"flex mb-2\">\n                  {[1, 2, 3, 4, 5].map((i) => (\n                    <Star key={i} className=\"w-4 h-4 fill-yellow-500 text-yellow-500\" />\n                  ))}\n                </div>\n                <p className=\"text-sm mb-2\">\"Batch download saves me so much time. I can split a 200-page report and download all sections at once!\"</p>\n                <p className=\"text-xs text-muted-foreground\">- James Wilson, Analyst</p>\n              </div>\n            </div>\n          </Card>\n\n          {/* Still Have Questions Section */}\n          <Card className=\"p-8 bg-gradient-to-br from-primary/10 via-primary/5 to-transparent\">\n            <div className=\"text-center\">\n              <h2 className=\"text-3xl font-bold mb-4\">Still Have Questions?</h2>\n              <p className=\"text-lg text-muted-foreground mb-6\">\n                We're here to help! Reach out to our support team or check our comprehensive documentation.\n              </p>\n              <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n                <a href=\"mailto:altaftoolshub@gmail.com?subject=Help%20with%20Split%20PDF%20Tool\" className=\"inline-block\">\n                  <Button size=\"lg\" className=\"h-12\">\n                    <Mail className=\"w-5 h-5 mr-2\" />\n                    Email Support\n                  </Button>\n                </a>\n                <Link href=\"/faq\">\n                  <Button size=\"lg\" variant=\"outline\" className=\"h-12\">\n                    <HelpCircle className=\"w-5 h-5 mr-2\" />\n                    FAQ\n                  </Button>\n                </Link>\n                <Dialog>\n                  <DialogTrigger asChild>\n                    <Button size=\"lg\" variant=\"outline\" className=\"h-12\">\n                      <BookOpen className=\"w-5 h-5 mr-2\" />\n                      Documentation\n                    </Button>\n                  </DialogTrigger>\n                  <DialogContent className=\"max-w-2xl max-h-[80vh] overflow-y-auto\">\n                    <DialogHeader>\n                      <DialogTitle>How to Split PDF Files</DialogTitle>\n                      <DialogDescription>\n                        Complete guide for splitting PDFs into separate documents\n                      </DialogDescription>\n                    </DialogHeader>\n                    <div className=\"space-y-4 mt-4\">\n                      <div>\n                        <h3 className=\"font-semibold mb-2\">Step 1: Upload Your PDF</h3>\n                        <p className=\"text-muted-foreground\">Click the upload area or drag and drop your PDF file. The total page count will be displayed.</p>\n                      </div>\n                      <div>\n                        <h3 className=\"font-semibold mb-2\">Step 2: Choose Split Method</h3>\n                        <p className=\"text-muted-foreground\">Select how to split your PDF:</p>\n                        <ul className=\"list-disc list-inside mt-1 text-muted-foreground\">\n                          <li>By page ranges (e.g., 1-5, 6-10)</li>\n                          <li>Extract single pages</li>\n                          <li>Fixed number of pages per file</li>\n                        </ul>\n                      </div>\n                      <div>\n                        <h3 className=\"font-semibold mb-2\">Step 3: Configure Split Settings</h3>\n                        <p className=\"text-muted-foreground\">Enter page ranges or specify the number of pages per split file. Preview shows how files will be divided.</p>\n                      </div>\n                      <div>\n                        <h3 className=\"font-semibold mb-2\">Step 4: Split and Download</h3>\n                        <p className=\"text-muted-foreground\">Click Split PDF to process. Download individual files or all files as a ZIP archive.</p>\n                      </div>\n                      <div className=\"pt-4 border-t\">\n                        <h3 className=\"font-semibold mb-2\">Tips:</h3>\n                        <ul className=\"list-disc list-inside space-y-1 text-muted-foreground\">\n                          <li>Use comma to separate ranges: 1-5, 10-15</li>\n                          <li>Extract single pages: 1, 3, 7</li>\n                          <li>Split evenly with fixed size option</li>\n                          <li>Download all splits as ZIP</li>\n                          <li>Processing happens locally</li>\n                        </ul>\n                      </div>\n                    </div>\n                  </DialogContent>\n                </Dialog>\n              </div>\n            </div>\n          </Card>\n        </div>\n      </div>\n\n      <ContactSupportSection />\n    </div>\n\n  );\n}\n","size_bytes":57116},"client/src/pages/watermark-pdf.tsx":{"content":"import { useState, useCallback } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Input } from \"@/components/ui/input\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useSEO } from \"@/hooks/use-seo\";\nimport { Droplets, Upload, Download, FileText, Loader2, ArrowLeft, Shield, Type, Image } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport FileUpload from \"@/components/ui/file-upload\";\nimport { PDFDocument, rgb, degrees, StandardFonts } from \"pdf-lib\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { Label } from \"@/components/ui/label\";\nimport { Slider } from \"@/components/ui/slider\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport * as pdfjsLib from 'pdfjs-dist';\nimport { ContactSupportSection } from \"@/components/contact-support\";\n\n// Configure PDF.js worker - using local worker for privacy\npdfjsLib.GlobalWorkerOptions.workerSrc = '/pdf.worker.min.mjs';\n\ntype WatermarkType = 'text' | 'image';\ntype Position = 'center' | 'diagonal' | 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\n\nexport default function WatermarkPDF() {\n  const [pdfFile, setPdfFile] = useState<File | null>(null);\n  const [pdfDoc, setPdfDoc] = useState<PDFDocument | null>(null);\n  const [watermarkType, setWatermarkType] = useState<WatermarkType>('text');\n  const [watermarkText, setWatermarkText] = useState(\"CONFIDENTIAL\");\n  const [watermarkImage, setWatermarkImage] = useState<File | null>(null);\n  const [position, setPosition] = useState<Position>('diagonal');\n  const [opacity, setOpacity] = useState([30]);\n  const [fontSize, setFontSize] = useState([48]);\n  const [rotation, setRotation] = useState([45]);\n  const [color, setColor] = useState('#FF0000');\n  const [previewUrl, setPreviewUrl] = useState<string>(\"\");\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [watermarkedPdf, setWatermarkedPdf] = useState<Uint8Array | null>(null);\n  const { toast } = useToast();\n\n  const structuredData = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebApplication\",\n    \"name\": \"Watermark PDF - AltafToolsHub\",\n    \"description\": \"Free online tool to add text or image watermarks to PDF documents\",\n    \"url\": \"https://www.altaftoolshub.com/watermark-pdf\",\n    \"applicationCategory\": \"BusinessApplication\",\n    \"operatingSystem\": \"Any\",\n    \"offers\": {\n      \"@type\": \"Offer\",\n      \"price\": \"0\",\n      \"priceCurrency\": \"USD\"\n    },\n    \"aggregateRating\": {\n      \"@type\": \"AggregateRating\",\n      \"ratingValue\": \"4.9\",\n      \"ratingCount\": \"1543\"\n    }\n  };\n\n  useSEO({\n    title: \"Watermark PDF Online Free - Add Text & Image Watermarks | AltafToolsHub\",\n    description: \"Free online PDF watermarking tool. Add custom text or image watermarks with adjustable opacity, position, and rotation. 100% client-side processing.\",\n    path: \"/watermark-pdf\",\n    keywords: \"watermark pdf, add watermark to pdf, pdf watermark tool, text watermark, image watermark, pdf protection\",\n    ogImage: \"https://www.altaftoolshub.com/og-watermark-pdf.png\",\n    structuredData: [structuredData],\n    additionalMetaTags: [\n      { name: \"application-name\", content: \"PDF Watermark Tool - AltafToolsHub\" },\n      { property: \"article:section\", content: \"PDF Tools\" }\n    ]\n  });\n\n  const generatePreview = async (file: File) => {\n    try {\n      const arrayBuffer = await file.arrayBuffer();\n      const pdf = await pdfjsLib.getDocument(arrayBuffer).promise;\n      const page = await pdf.getPage(1);\n      const viewport = page.getViewport({ scale: 1.0 });\n      \n      const canvas = document.createElement('canvas');\n      const context = canvas.getContext('2d');\n      if (!context) return \"\";\n      \n      canvas.height = viewport.height;\n      canvas.width = viewport.width;\n      \n      await page.render({\n        canvasContext: context,\n        viewport: viewport,\n        intent: 'display'\n      } as any).promise;\n      \n      // Draw preview watermark\n      context.save();\n      context.globalAlpha = opacity[0] / 100;\n      context.fillStyle = color;\n      context.font = `${fontSize[0]}px Arial`;\n      context.textAlign = 'center';\n      context.textBaseline = 'middle';\n      \n      if (position === 'diagonal' || position === 'center') {\n        context.translate(canvas.width / 2, canvas.height / 2);\n        context.rotate((rotation[0] * Math.PI) / 180);\n        context.fillText(watermarkText, 0, 0);\n      } else {\n        const positions = {\n          'top-left': { x: 100, y: 100 },\n          'top-right': { x: canvas.width - 100, y: 100 },\n          'bottom-left': { x: 100, y: canvas.height - 100 },\n          'bottom-right': { x: canvas.width - 100, y: canvas.height - 100 }\n        };\n        const pos = positions[position] || { x: canvas.width / 2, y: canvas.height / 2 };\n        context.fillText(watermarkText, pos.x, pos.y);\n      }\n      \n      context.restore();\n      \n      return canvas.toDataURL('image/jpeg', 0.9);\n    } catch (error) {\n      console.error('Error generating preview:', error);\n      return \"\";\n    }\n  };\n\n  const handleFileUpload = useCallback(async (file: File) => {\n    if (file.type !== 'application/pdf') {\n      toast({\n        title: \"Invalid File\",\n        description: \"Please upload a PDF file\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    try {\n      setProgress(10);\n      const arrayBuffer = await file.arrayBuffer();\n      const doc = await PDFDocument.load(arrayBuffer);\n      \n      setPdfFile(file);\n      setPdfDoc(doc);\n      setWatermarkedPdf(null);\n      \n      // Generate preview\n      setProgress(50);\n      const preview = await generatePreview(file);\n      setPreviewUrl(preview);\n      setProgress(0);\n      \n      toast({\n        title: \"File Loaded\",\n        description: `PDF loaded with ${doc.getPageCount()} pages`,\n      });\n    } catch (error) {\n      setProgress(0);\n      toast({\n        title: \"Error\",\n        description: \"Failed to load PDF file\",\n        variant: \"destructive\"\n      });\n    }\n  }, [watermarkText, opacity, fontSize, rotation, color, position, toast]);\n\n  const handleImageUpload = (file: File) => {\n    if (!file.type.startsWith('image/')) {\n      toast({\n        title: \"Invalid File\",\n        description: \"Please upload an image file\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n    setWatermarkImage(file);\n    toast({\n      title: \"Image Loaded\",\n      description: \"Watermark image loaded successfully\",\n    });\n  };\n\n  const hexToRgb = (hex: string) => {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n      r: parseInt(result[1], 16) / 255,\n      g: parseInt(result[2], 16) / 255,\n      b: parseInt(result[3], 16) / 255\n    } : { r: 0, g: 0, b: 0 };\n  };\n\n  const getPositionCoordinates = (pageWidth: number, pageHeight: number, textWidth: number, textHeight: number) => {\n    const positions = {\n      'center': { x: pageWidth / 2, y: pageHeight / 2 },\n      'diagonal': { x: pageWidth / 2, y: pageHeight / 2 },\n      'top-left': { x: 100, y: pageHeight - 100 },\n      'top-right': { x: pageWidth - 100, y: pageHeight - 100 },\n      'bottom-left': { x: 100, y: 100 },\n      'bottom-right': { x: pageWidth - 100, y: 100 }\n    };\n    return positions[position];\n  };\n\n  const addWatermark = async () => {\n    if (!pdfDoc || !pdfFile) {\n      toast({\n        title: \"No file loaded\",\n        description: \"Please upload a PDF file first\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    if (watermarkType === 'text' && !watermarkText) {\n      toast({\n        title: \"No watermark text\",\n        description: \"Please enter watermark text\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    if (watermarkType === 'image' && !watermarkImage) {\n      toast({\n        title: \"No watermark image\",\n        description: \"Please upload a watermark image\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    setIsProcessing(true);\n    setProgress(0);\n\n    try {\n      const totalPages = pdfDoc.getPageCount();\n      const rgbColor = hexToRgb(color);\n\n      if (watermarkType === 'text') {\n        const font = await pdfDoc.embedFont(StandardFonts.HelveticaBold);\n        \n        for (let i = 0; i < totalPages; i++) {\n          setProgress(Math.round(((i + 0.5) / totalPages) * 100));\n          \n          const page = pdfDoc.getPage(i);\n          const { width, height } = page.getSize();\n          \n          const textWidth = font.widthOfTextAtSize(watermarkText, fontSize[0]);\n          const textHeight = font.heightAtSize(fontSize[0]);\n          const coords = getPositionCoordinates(width, height, textWidth, textHeight);\n          \n          page.drawText(watermarkText, {\n            x: coords.x - (position === 'diagonal' || position === 'center' ? textWidth / 2 : 0),\n            y: coords.y,\n            size: fontSize[0],\n            font: font,\n            color: rgb(rgbColor.r, rgbColor.g, rgbColor.b),\n            opacity: opacity[0] / 100,\n            rotate: position === 'diagonal' ? degrees(rotation[0]) : degrees(0)\n          });\n          \n          setProgress(Math.round(((i + 1) / totalPages) * 100));\n        }\n      } else {\n        // Handle image watermark\n        const imageBytes = await watermarkImage!.arrayBuffer();\n        const image = watermarkImage!.type.includes('png') \n          ? await pdfDoc.embedPng(imageBytes)\n          : await pdfDoc.embedJpg(imageBytes);\n        \n        for (let i = 0; i < totalPages; i++) {\n          setProgress(Math.round(((i + 0.5) / totalPages) * 100));\n          \n          const page = pdfDoc.getPage(i);\n          const { width, height } = page.getSize();\n          \n          const scale = 0.3; // Scale down image to 30% of page width\n          const imgWidth = width * scale;\n          const imgHeight = (image.height / image.width) * imgWidth;\n          \n          const coords = getPositionCoordinates(width, height, imgWidth, imgHeight);\n          \n          page.drawImage(image, {\n            x: coords.x - imgWidth / 2,\n            y: coords.y - imgHeight / 2,\n            width: imgWidth,\n            height: imgHeight,\n            opacity: opacity[0] / 100,\n            rotate: position === 'diagonal' ? degrees(rotation[0]) : degrees(0)\n          });\n          \n          setProgress(Math.round(((i + 1) / totalPages) * 100));\n        }\n      }\n\n      const pdfBytes = await pdfDoc.save();\n      setWatermarkedPdf(pdfBytes);\n      \n      toast({\n        title: \"Success!\",\n        description: \"Watermark added successfully\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to add watermark\",\n        variant: \"destructive\"\n      });\n    } finally {\n      setIsProcessing(false);\n      setProgress(0);\n    }\n  };\n\n  const downloadWatermarkedPdf = () => {\n    if (!watermarkedPdf || !pdfFile) return;\n    \n    const blob = new Blob([watermarkedPdf], { type: 'application/pdf' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = pdfFile.name.replace('.pdf', '_watermarked.pdf');\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  const reset = () => {\n    setPdfFile(null);\n    setPdfDoc(null);\n    setWatermarkedPdf(null);\n    setWatermarkImage(null);\n    setPreviewUrl(\"\");\n    setProgress(0);\n  };\n\n  return (\n    <div className=\"min-h-screen pattern-bg\">\n      <div className=\"container mx-auto px-4 py-6\">\n        {/* Breadcrumbs */}\n        <nav className=\"flex text-sm text-muted-foreground mb-6\" aria-label=\"Breadcrumb\">\n          <Link href=\"/\" className=\"hover:text-primary transition-colors\">Home</Link>\n          <span className=\"mx-2\">/</span>\n          <Link href=\"/all-tools?category=pdf-management\" className=\"hover:text-primary transition-colors\">PDF Tools</Link>\n          <span className=\"mx-2\">/</span>\n          <span className=\"text-foreground\">Watermark PDF</span>\n        </nav>\n\n        <Link href=\"/all-tools?category=pdf-management\">\n          <Button variant=\"ghost\" className=\"mb-4\">\n            <ArrowLeft className=\"w-4 h-4 mr-2\" />\n            Back to PDF Tools\n          </Button>\n        </Link>\n\n        <div className=\"max-w-6xl mx-auto\">\n          <div className=\"text-center mb-8\">\n            <h1 className=\"text-4xl font-bold mb-4\">\n              Add <span className=\"gradient-text\">Watermark to PDF</span>\n            </h1>\n            <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n              Protect your PDFs with custom text or image watermarks. \n              Adjust opacity, position, and rotation for perfect branding.\n            </p>\n          </div>\n\n          {/* Privacy Notice */}\n          <Alert className=\"mb-6\">\n            <Shield className=\"w-4 h-4\" />\n            <AlertDescription>\n              Your PDFs are processed entirely in your browser. Files never leave your device.\n            </AlertDescription>\n          </Alert>\n\n          <Card className=\"p-8 mb-8\">\n            {!watermarkedPdf ? (\n              <>\n                {!pdfFile ? (\n                  <FileUpload\n                    accept=\"application/pdf\"\n                    onFileSelect={handleFileUpload}\n                    className=\"h-48\"\n                    title=\"Drop PDF file here or click to select\"\n                    description=\"Select a PDF to add watermark\"\n                  />\n                ) : (\n                  <>\n                    {progress > 0 && progress < 100 && !isProcessing && (\n                      <div className=\"mb-6\">\n                        <Progress value={progress} className=\"h-2\" />\n                        <p className=\"text-sm text-center mt-2 text-muted-foreground\">\n                          Loading PDF... {progress}%\n                        </p>\n                      </div>\n                    )}\n\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n                      {previewUrl && (\n                        <div>\n                          <h3 className=\"font-medium mb-3\">Preview</h3>\n                          <div className=\"border rounded-lg overflow-hidden bg-muted/50\">\n                            <img \n                              src={previewUrl} \n                              alt=\"PDF Preview with watermark\" \n                              className=\"w-full h-auto\"\n                            />\n                          </div>\n                        </div>\n                      )}\n\n                      <div>\n                        <h3 className=\"font-medium mb-3\">Watermark Settings</h3>\n                        \n                        <Tabs value={watermarkType} onValueChange={(v) => setWatermarkType(v as WatermarkType)}>\n                          <TabsList className=\"w-full mb-4\">\n                            <TabsTrigger value=\"text\" className=\"flex-1\">\n                              <Type className=\"w-4 h-4 mr-2\" />\n                              Text\n                            </TabsTrigger>\n                            <TabsTrigger value=\"image\" className=\"flex-1\">\n                              <Image className=\"w-4 h-4 mr-2\" />\n                              Image\n                            </TabsTrigger>\n                          </TabsList>\n                          \n                          <TabsContent value=\"text\" className=\"space-y-4\">\n                            <div>\n                              <Label htmlFor=\"watermarkText\">Watermark Text</Label>\n                              <Input\n                                id=\"watermarkText\"\n                                value={watermarkText}\n                                onChange={(e) => setWatermarkText(e.target.value)}\n                                placeholder=\"Enter watermark text\"\n                                data-testid=\"input-watermark-text\"\n                              />\n                            </div>\n                            \n                            <div>\n                              <Label htmlFor=\"fontSize\">Font Size: {fontSize[0]}pt</Label>\n                              <Slider\n                                id=\"fontSize\"\n                                value={fontSize}\n                                onValueChange={setFontSize}\n                                min={12}\n                                max={120}\n                                step={4}\n                                className=\"w-full\"\n                              />\n                            </div>\n                            \n                            <div>\n                              <Label htmlFor=\"color\">Color</Label>\n                              <div className=\"flex gap-2\">\n                                <Input\n                                  id=\"color\"\n                                  type=\"color\"\n                                  value={color}\n                                  onChange={(e) => setColor(e.target.value)}\n                                  className=\"w-20 h-10\"\n                                />\n                                <Input\n                                  value={color}\n                                  onChange={(e) => setColor(e.target.value)}\n                                  placeholder=\"#FF0000\"\n                                  className=\"flex-1\"\n                                />\n                              </div>\n                            </div>\n                          </TabsContent>\n                          \n                          <TabsContent value=\"image\" className=\"space-y-4\">\n                            <div>\n                              <Label>Watermark Image</Label>\n                              <FileUpload\n                                accept=\"image/*\"\n                                onFileSelect={handleImageUpload}\n                                className=\"h-32\"\n                                title=\"Upload watermark image\"\n                                description=\"JPG, PNG supported\"\n                                maxSize={5 * 1024 * 1024}\n                              />\n                            </div>\n                          </TabsContent>\n                        </Tabs>\n\n                        <div className=\"space-y-4\">\n                          <div>\n                            <Label htmlFor=\"position\">Position</Label>\n                            <Select value={position} onValueChange={(v) => setPosition(v as Position)}>\n                              <SelectTrigger id=\"position\" data-testid=\"select-position\">\n                                <SelectValue />\n                              </SelectTrigger>\n                              <SelectContent>\n                                <SelectItem value=\"center\">Center</SelectItem>\n                                <SelectItem value=\"diagonal\">Diagonal</SelectItem>\n                                <SelectItem value=\"top-left\">Top Left</SelectItem>\n                                <SelectItem value=\"top-right\">Top Right</SelectItem>\n                                <SelectItem value=\"bottom-left\">Bottom Left</SelectItem>\n                                <SelectItem value=\"bottom-right\">Bottom Right</SelectItem>\n                              </SelectContent>\n                            </Select>\n                          </div>\n\n                          <div>\n                            <Label htmlFor=\"opacity\">Opacity: {opacity[0]}%</Label>\n                            <Slider\n                              id=\"opacity\"\n                              value={opacity}\n                              onValueChange={setOpacity}\n                              min={10}\n                              max={100}\n                              step={5}\n                              className=\"w-full\"\n                            />\n                          </div>\n\n                          {position === 'diagonal' && (\n                            <div>\n                              <Label htmlFor=\"rotation\">Rotation: {rotation[0]}°</Label>\n                              <Slider\n                                id=\"rotation\"\n                                value={rotation}\n                                onValueChange={setRotation}\n                                min={0}\n                                max={90}\n                                step={5}\n                                className=\"w-full\"\n                              />\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n\n                    {isProcessing && (\n                      <div className=\"mb-6\">\n                        <Progress value={progress} className=\"h-2\" />\n                        <p className=\"text-sm text-center mt-2 text-muted-foreground\">\n                          Adding watermark... {progress}%\n                        </p>\n                      </div>\n                    )}\n\n                    <div className=\"flex gap-4\">\n                      <Button\n                        onClick={addWatermark}\n                        disabled={isProcessing}\n                        className=\"flex-1\"\n                        data-testid=\"button-add-watermark\"\n                      >\n                        {isProcessing ? (\n                          <>\n                            <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\n                            Adding Watermark...\n                          </>\n                        ) : (\n                          <>\n                            <Droplets className=\"w-4 h-4 mr-2\" />\n                            Add Watermark\n                          </>\n                        )}\n                      </Button>\n                      <Button\n                        onClick={reset}\n                        variant=\"outline\"\n                        disabled={isProcessing}\n                        data-testid=\"button-reset\"\n                      >\n                        Change File\n                      </Button>\n                    </div>\n                  </>\n                )}\n              </>\n            ) : (\n              <div className=\"text-center\">\n                <div className=\"w-16 h-16 mx-auto mb-4 rounded-full bg-green-100 dark:bg-green-900/30 flex items-center justify-center\">\n                  <Droplets className=\"w-8 h-8 text-green-600 dark:text-green-400\" />\n                </div>\n                <h2 className=\"text-2xl font-bold mb-2\">Watermark Added Successfully!</h2>\n                <p className=\"text-muted-foreground mb-6\">\n                  Your PDF now has a {watermarkType} watermark\n                </p>\n                <div className=\"flex gap-4 justify-center\">\n                  <Button onClick={downloadWatermarkedPdf} size=\"lg\" data-testid=\"button-download\">\n                    <Download className=\"w-4 h-4 mr-2\" />\n                    Download Watermarked PDF\n                  </Button>\n                  <Button onClick={reset} variant=\"outline\" size=\"lg\" data-testid=\"button-watermark-another\">\n                    Watermark Another PDF\n                  </Button>\n                </div>\n              </div>\n            )}\n          </Card>\n\n          {/* Why Use Section */}\n          <Card className=\"p-6 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">Why Use Our Watermark Tool?</h2>\n            <div className=\"space-y-2\">\n              <p className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 mt-1\">✓</span>\n                <span>Support for both text and image watermarks</span>\n              </p>\n              <p className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 mt-1\">✓</span>\n                <span>Adjustable opacity for subtle branding</span>\n              </p>\n              <p className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 mt-1\">✓</span>\n                <span>Multiple positioning options</span>\n              </p>\n              <p className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 mt-1\">✓</span>\n                <span>Custom rotation for diagonal watermarks</span>\n              </p>\n            </div>\n          </Card>\n\n          {/* Use Cases */}\n          <Card className=\"p-6 mb-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">Common Use Cases</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <h3 className=\"font-medium mb-2\">🔒 Document Protection</h3>\n                <p className=\"text-sm text-muted-foreground\">Add \"CONFIDENTIAL\" or \"DRAFT\" watermarks to sensitive documents</p>\n              </div>\n              <div>\n                <h3 className=\"font-medium mb-2\">🏢 Company Branding</h3>\n                <p className=\"text-sm text-muted-foreground\">Add company logos to business documents and proposals</p>\n              </div>\n              <div>\n                <h3 className=\"font-medium mb-2\">©️ Copyright Notice</h3>\n                <p className=\"text-sm text-muted-foreground\">Protect intellectual property with copyright watermarks</p>\n              </div>\n              <div>\n                <h3 className=\"font-medium mb-2\">📋 Status Indicators</h3>\n                <p className=\"text-sm text-muted-foreground\">Mark documents as \"APPROVED\", \"VOID\", or \"SAMPLE\"</p>\n              </div>\n            </div>\n          </Card>\n\n          {/* FAQ */}\n          <Card className=\"p-6\">\n            <h2 className=\"text-2xl font-bold mb-4\">Frequently Asked Questions</h2>\n            <div className=\"space-y-4\">\n              <div>\n                <h3 className=\"font-medium mb-2\">Can I remove watermarks later?</h3>\n                <p className=\"text-sm text-muted-foreground\">Watermarks become part of the PDF. Keep the original file if you need a version without watermarks.</p>\n              </div>\n              <div>\n                <h3 className=\"font-medium mb-2\">What image formats are supported?</h3>\n                <p className=\"text-sm text-muted-foreground\">JPG and PNG images are supported for image watermarks.</p>\n              </div>\n              <div>\n                <h3 className=\"font-medium mb-2\">Can I add different watermarks to different pages?</h3>\n                <p className=\"text-sm text-muted-foreground\">Currently, the same watermark is applied to all pages. For page-specific watermarks, process pages separately.</p>\n              </div>\n              <div>\n                <h3 className=\"font-medium mb-2\">Does watermarking affect PDF quality?</h3>\n                <p className=\"text-sm text-muted-foreground\">No, watermarks are added as an overlay without affecting the original content quality.</p>\n              </div>\n            </div>\n          </Card>\n        </div>\n      </div>\n\n      <ContactSupportSection />\n    </div>\n\n  );\n}\n","size_bytes":27249},"client/src/components/navigation-memory.tsx":{"content":"import { useNavigationMemory } from '@/hooks/use-navigation-memory';\n\nexport default function NavigationMemory() {\n  useNavigationMemory();\n  return null;\n}","size_bytes":156},"client/src/components/reduced-motion-provider.tsx":{"content":"import { createContext, useContext, useState, useEffect } from 'react';\nimport { MotionConfig } from 'framer-motion';\n\ninterface ReducedMotionContextType {\n  reducedMotion: boolean;\n  setUserPreference: (preference: boolean | null) => void;\n  userPreference: boolean | null;\n}\n\nconst ReducedMotionContext = createContext<ReducedMotionContextType | undefined>(undefined);\n\nconst STORAGE_KEY = 'altaf-tools-reduced-motion';\n\nexport function ReducedMotionProvider({ children }: { children: React.ReactNode }) {\n  const [systemReducedMotion, setSystemReducedMotion] = useState<boolean>(false);\n  const [userPreference, setUserPreference] = useState<boolean | null>(null);\n\n  // Check system preference\n  useEffect(() => {\n    if (typeof window === 'undefined') return;\n    \n    const mediaQuery = window.matchMedia('(prefers-reduced-motion: reduce)');\n    setSystemReducedMotion(mediaQuery.matches);\n    \n    const handleChange = (event: MediaQueryListEvent) => {\n      setSystemReducedMotion(event.matches);\n    };\n    \n    mediaQuery.addEventListener('change', handleChange);\n    return () => mediaQuery.removeEventListener('change', handleChange);\n  }, []);\n\n  // Load user preference on mount\n  useEffect(() => {\n    try {\n      const stored = localStorage.getItem(STORAGE_KEY);\n      if (stored !== null) {\n        setUserPreference(JSON.parse(stored));\n      }\n    } catch (error) {\n      console.warn('Failed to load reduced motion preference:', error);\n    }\n  }, []);\n\n  // Save user preference when it changes\n  useEffect(() => {\n    try {\n      if (userPreference !== null) {\n        localStorage.setItem(STORAGE_KEY, JSON.stringify(userPreference));\n      } else {\n        localStorage.removeItem(STORAGE_KEY);\n      }\n    } catch (error) {\n      console.warn('Failed to save reduced motion preference:', error);\n    }\n  }, [userPreference]);\n\n  // User preference takes priority over system preference\n  const reducedMotion = userPreference !== null ? userPreference : systemReducedMotion;\n\n  // Update document attribute for CSS rules\n  useEffect(() => {\n    if (typeof document !== 'undefined') {\n      document.documentElement.dataset.reducedMotion = String(reducedMotion);\n    }\n  }, [reducedMotion]);\n\n  const setUserPreferenceHandler = (preference: boolean | null) => {\n    setUserPreference(preference);\n  };\n\n  return (\n    <ReducedMotionContext.Provider \n      value={{ \n        reducedMotion, \n        setUserPreference: setUserPreferenceHandler, \n        userPreference \n      }}\n    >\n      <MotionConfig reducedMotion={reducedMotion ? \"always\" : \"never\"}>\n        {children}\n      </MotionConfig>\n    </ReducedMotionContext.Provider>\n  );\n}\n\nexport function useReducedMotionContext() {\n  const context = useContext(ReducedMotionContext);\n  if (context === undefined) {\n    throw new Error('useReducedMotionContext must be used within a ReducedMotionProvider');\n  }\n  return context;\n}","size_bytes":2906},"client/src/components/reduced-motion-toggle.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { \n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Eye, EyeOff, Monitor } from \"lucide-react\";\nimport { useReducedMotionContext } from \"./reduced-motion-provider\";\n\nexport function ReducedMotionToggle() {\n  const { reducedMotion, userPreference, setUserPreference } = useReducedMotionContext();\n\n  const handlePreferenceChange = (preference: boolean | null) => {\n    setUserPreference(preference);\n  };\n\n  const getIcon = () => {\n    if (userPreference === true) return Eye;\n    if (userPreference === false) return EyeOff;\n    return Monitor;\n  };\n\n  const getLabel = () => {\n    if (userPreference === true) return \"Reduce Motion\";\n    if (userPreference === false) return \"Enable Motion\";\n    return \"System Default\";\n  };\n\n  const Icon = getIcon();\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button\n          variant=\"ghost\"\n          size=\"icon\"\n          className=\"h-9 w-9 focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2\"\n          aria-label={`Motion preference: ${getLabel()}`}\n          data-testid=\"button-motion-toggle\"\n        >\n          <Icon className=\"h-4 w-4\" />\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent align=\"end\">\n        <DropdownMenuItem \n          onClick={() => handlePreferenceChange(null)}\n          className={userPreference === null ? \"bg-accent\" : \"\"}\n        >\n          <Monitor className=\"mr-2 h-4 w-4\" />\n          System Default\n        </DropdownMenuItem>\n        <DropdownMenuItem \n          onClick={() => handlePreferenceChange(false)}\n          className={userPreference === false ? \"bg-accent\" : \"\"}\n        >\n          <EyeOff className=\"mr-2 h-4 w-4\" />\n          Enable Motion\n        </DropdownMenuItem>\n        <DropdownMenuItem \n          onClick={() => handlePreferenceChange(true)}\n          className={userPreference === true ? \"bg-accent\" : \"\"}\n        >\n          <Eye className=\"mr-2 h-4 w-4\" />\n          Reduce Motion\n        </DropdownMenuItem>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}","size_bytes":2189},"client/src/hooks/use-reduced-motion.ts":{"content":"import { useState, useEffect } from 'react';\n\n/**\n * Hook to detect if user prefers reduced motion\n * Returns true if user has set prefers-reduced-motion: reduce\n */\nexport function useReducedMotion(): boolean {\n  const [prefersReducedMotion, setPrefersReducedMotion] = useState<boolean>(false);\n\n  useEffect(() => {\n    // Check if window is available (for SSR compatibility)\n    if (typeof window === 'undefined') {\n      return;\n    }\n\n    // Initial check\n    const mediaQuery = window.matchMedia('(prefers-reduced-motion: reduce)');\n    setPrefersReducedMotion(mediaQuery.matches);\n\n    // Listen for changes\n    const handleChange = (event: MediaQueryListEvent) => {\n      setPrefersReducedMotion(event.matches);\n    };\n\n    // Add listener\n    mediaQuery.addEventListener('change', handleChange);\n\n    // Cleanup listener on unmount\n    return () => {\n      mediaQuery.removeEventListener('change', handleChange);\n    };\n  }, []);\n\n  return prefersReducedMotion;\n}\n\n/**\n * Utility function to get animation variants based on reduced motion preference\n * When reduced motion is enabled, omits all animation props to prevent handler attachment\n */\nexport function getMotionProps(reducedMotion: boolean, normalProps: any, reducedProps?: any) {\n  if (reducedMotion) {\n    return reducedProps || {};\n  }\n  return normalProps;\n}\n\n/**\n * Utility function to conditionally apply motion props\n * Returns empty object when reduced motion is enabled\n */\nexport function motionProps(reducedMotion: boolean, props: any) {\n  return reducedMotion ? {} : props;\n}","size_bytes":1554},"client/src/components/comparison-table.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Card } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Check, X, Zap, Shield, Clock, DollarSign, User, Globe } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\nimport { useReducedMotionContext } from \"@/components/reduced-motion-provider\";\nimport { getMotionProps } from \"@/hooks/use-reduced-motion\";\n\ninterface ComparisonFeature {\n  feature: string;\n  icon: React.ComponentType<{ className?: string }>;\n  altafToolsHub: string | boolean;\n  competitors: string | boolean;\n  highlight?: boolean;\n}\n\nconst comparisonData: ComparisonFeature[] = [\n  {\n    feature: \"Features\",\n    icon: Zap,\n    altafToolsHub: \"60+ Professional Tools\",\n    competitors: \"10-20 Basic Tools\",\n    highlight: true\n  },\n  {\n    feature: \"Processing Speed\",\n    icon: Clock,\n    altafToolsHub: \"Instant (Browser-Based)\",\n    competitors: \"Slow (Upload Required)\",\n    highlight: true\n  },\n  {\n    feature: \"Pricing\",\n    icon: DollarSign,\n    altafToolsHub: \"100% Free Forever\",\n    competitors: \"$9-29/month\",\n    highlight: true\n  },\n  {\n    feature: \"Ease of Use\",\n    icon: User,\n    altafToolsHub: \"No Registration\",\n    competitors: \"Account Required\"\n  },\n  {\n    feature: \"Privacy & Security\",\n    icon: Shield,\n    altafToolsHub: \"100% Private (No Upload)\",\n    competitors: \"Files Uploaded to Server\",\n    highlight: true\n  },\n  {\n    feature: \"File Size Limits\",\n    icon: Globe,\n    altafToolsHub: \"No Limits\",\n    competitors: \"10-50MB Limits\"\n  }\n];\n\nconst CheckMark = () => (\n  <Check className=\"w-5 h-5 text-green-500\" data-testid=\"icon-check\" />\n);\n\nconst XMark = () => (\n  <X className=\"w-5 h-5 text-red-500\" data-testid=\"icon-x\" />\n);\n\nexport function ComparisonTable() {\n  const { reducedMotion } = useReducedMotionContext();\n\n  return (\n    <section className=\"py-16 overflow-hidden\" data-testid=\"comparison-table-section\">\n      <div className=\"container-section\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: true }}\n          transition={{ duration: 0.6 }}\n        >\n          <div className=\"text-center mb-10\">\n            <Badge className=\"mb-4 bg-gradient-to-r from-primary/20 to-blue-500/20 text-primary border-primary/30\">\n              <Zap className=\"w-3 h-3 mr-1\" />\n              Why Choose Us\n            </Badge>\n            <h2 className=\"text-2xl sm:text-3xl lg:text-4xl font-bold mb-4\">\n              <span className=\"gradient-text\">AltafToolsHub</span> vs Competitors\n            </h2>\n            <p className=\"text-muted-foreground max-w-2xl mx-auto\">\n              See why thousands choose our privacy-first tools over traditional online converters\n            </p>\n          </div>\n\n          {/* Desktop Table View */}\n          <div className=\"hidden md:block\">\n            <Card className=\"overflow-hidden\">\n              <div className=\"overflow-x-auto\">\n                <table className=\"w-full\">\n                  <thead className=\"bg-muted/50 dark:bg-gray-800/50 sticky top-0\">\n                    <tr>\n                      <th className=\"px-6 py-4 text-left font-semibold text-foreground dark:text-foreground\">Feature</th>\n                      <th className=\"px-6 py-4 text-center font-semibold\">\n                        <span className=\"text-primary\">AltafToolsHub</span>\n                      </th>\n                      <th className=\"px-6 py-4 text-center font-semibold text-muted-foreground\">\n                        Other Tools\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {comparisonData.map((item, index) => {\n                      const Icon = item.icon;\n                      return (\n                        <motion.tr\n                          key={item.feature}\n                          className={cn(\n                            \"border-t transition-colors hover:bg-muted/30 dark:hover:bg-gray-800/30\",\n                            item.highlight && \"bg-primary/5 dark:bg-primary/10\"\n                          )}\n                          initial={{ opacity: 0, x: -20 }}\n                          whileInView={{ opacity: 1, x: 0 }}\n                          viewport={{ once: true }}\n                          transition={{ delay: index * 0.1 }}\n                          data-testid={`comparison-row-${item.feature.toLowerCase().replace(/\\s/g, '-')}`}\n                        >\n                          <td className=\"px-6 py-4\">\n                            <div className=\"flex items-center gap-3\">\n                              <Icon className=\"w-5 h-5 text-primary\" />\n                              <span className=\"font-medium text-foreground dark:text-foreground\">{item.feature}</span>\n                            </div>\n                          </td>\n                          <td className=\"px-6 py-4 text-center\">\n                            <div className=\"flex items-center justify-center gap-2\">\n                              {typeof item.altafToolsHub === 'boolean' ? (\n                                item.altafToolsHub ? <CheckMark /> : <XMark />\n                              ) : (\n                                <span className=\"font-medium text-green-600 dark:text-green-400\">\n                                  {item.altafToolsHub}\n                                </span>\n                              )}\n                            </div>\n                          </td>\n                          <td className=\"px-6 py-4 text-center\">\n                            <div className=\"flex items-center justify-center gap-2\">\n                              {typeof item.competitors === 'boolean' ? (\n                                item.competitors ? <CheckMark /> : <XMark />\n                              ) : (\n                                <span className=\"text-muted-foreground\">\n                                  {item.competitors}\n                                </span>\n                              )}\n                            </div>\n                          </td>\n                        </motion.tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              </div>\n            </Card>\n          </div>\n\n          {/* Mobile Card View */}\n          <div className=\"md:hidden space-y-4\">\n            {comparisonData.map((item, index) => {\n              const Icon = item.icon;\n              return (\n                <motion.div\n                  key={item.feature}\n                  initial={{ opacity: 0, y: 20 }}\n                  whileInView={{ opacity: 1, y: 0 }}\n                  viewport={{ once: true }}\n                  transition={{ delay: index * 0.1 }}\n                >\n                  <Card \n                    className={cn(\n                      \"p-4 sm:p-6 bg-card dark:bg-card transition-all duration-300 hover:shadow-lg\",\n                      item.highlight && \"border-2 border-primary/50 bg-primary/5 dark:bg-primary/10 shadow-md\"\n                    )}\n                    data-testid={`comparison-card-${item.feature.toLowerCase().replace(/\\s/g, '-')}`}\n                  >\n                    <div className=\"flex items-center gap-3 mb-4\">\n                      <div className=\"p-2 rounded-lg bg-primary/10 dark:bg-primary/20\">\n                        <Icon className=\"w-6 h-6 text-primary\" />\n                      </div>\n                      <h3 className=\"font-semibold text-base sm:text-lg text-foreground dark:text-foreground\">{item.feature}</h3>\n                      {item.highlight && (\n                        <Badge className=\"ml-auto bg-gradient-to-r from-primary/20 to-blue-500/20 text-primary border-primary/30 text-xs\">\n                          Key\n                        </Badge>\n                      )}\n                    </div>\n                    \n                    <div className=\"space-y-3\">\n                      {/* AltafToolsHub */}\n                      <div className=\"flex items-center justify-between p-3 bg-gradient-to-r from-primary/10 to-blue-500/10 dark:from-primary/20 dark:to-blue-500/20 rounded-lg border border-primary/20\">\n                        <span className=\"font-medium text-sm flex items-center gap-2\">\n                          <Check className=\"w-3 h-3 text-primary\" />\n                          AltafToolsHub\n                        </span>\n                        <span className=\"text-sm font-bold text-green-600 dark:text-green-400\">\n                          {typeof item.altafToolsHub === 'boolean' ? (\n                            item.altafToolsHub ? <CheckMark /> : <XMark />\n                          ) : (\n                            item.altafToolsHub\n                          )}\n                        </span>\n                      </div>\n                      \n                      {/* Competitors */}\n                      <div className=\"flex items-center justify-between p-3 bg-muted/50 dark:bg-gray-800/50 rounded-lg border border-muted\">\n                        <span className=\"font-medium text-sm text-muted-foreground flex items-center gap-2\">\n                          <X className=\"w-3 h-3 opacity-50\" />\n                          Other Tools\n                        </span>\n                        <span className=\"text-sm text-muted-foreground\">\n                          {typeof item.competitors === 'boolean' ? (\n                            item.competitors ? <CheckMark /> : <XMark />\n                          ) : (\n                            <span className=\"opacity-75\">{item.competitors}</span>\n                          )}\n                        </span>\n                      </div>\n                    </div>\n                  </Card>\n                </motion.div>\n              );\n            })}\n          </div>\n\n          {/* Call to Action */}\n          <motion.div\n            className=\"text-center mt-10\"\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ delay: 0.5 }}\n          >\n            <p className=\"text-lg font-medium mb-2\">\n              Experience the difference with our privacy-first tools\n            </p>\n            <p className=\"text-muted-foreground\">\n              No registration, no uploads, no limits - just powerful tools that work\n            </p>\n          </motion.div>\n        </motion.div>\n      </div>\n    </section>\n  );\n}","size_bytes":10479},"client/src/components/contact-support.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Mail, HelpCircle, Bug, MessageCircle, ArrowRight } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport { cn } from \"@/lib/utils\";\n\nexport function ContactSupportSection() {\n  return (\n    <section className=\"py-12 bg-muted/30 dark:bg-gray-900/30 overflow-hidden\" data-testid=\"contact-support-section\">\n      <div className=\"container-section\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: true }}\n          transition={{ duration: 0.6 }}\n        >\n          <Card className=\"p-8 sm:p-10 lg:p-12 bg-gradient-to-br from-primary/5 via-background to-primary/10 dark:from-primary/10 dark:via-gray-900 dark:to-primary/5 border-primary/20 dark:border-primary/30\">\n            <div className=\"text-center max-w-3xl mx-auto\">\n              <motion.h2 \n                className=\"text-2xl sm:text-3xl font-bold mb-4 text-foreground dark:text-foreground\"\n                initial={{ opacity: 0, y: -10 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                viewport={{ once: true }}\n                transition={{ delay: 0.1 }}\n              >\n                Still have questions? <span className=\"gradient-text\">We're here to help</span>\n              </motion.h2>\n              \n              <motion.p \n                className=\"text-muted-foreground mb-8 text-base sm:text-lg\"\n                initial={{ opacity: 0 }}\n                whileInView={{ opacity: 1 }}\n                viewport={{ once: true }}\n                transition={{ delay: 0.2 }}\n              >\n                Get support, report issues, or find answers to common questions\n              </motion.p>\n\n              <motion.div \n                className=\"flex flex-col sm:flex-row gap-4 justify-center\"\n                initial={{ opacity: 0, y: 20 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                viewport={{ once: true }}\n                transition={{ delay: 0.3 }}\n              >\n                {/* Email Support */}\n                <a\n                  href=\"mailto:altaftoolshub@gmail.com?subject=Support%20Request%20-%20AltafToolsHub\"\n                  className=\"group\"\n                  aria-label=\"Contact support via email at altaftoolshub@gmail.com\"\n                  data-testid=\"link-email-support\"\n                >\n                  <Button\n                    size=\"lg\"\n                    variant=\"default\"\n                    className={cn(\n                      \"w-full sm:w-auto min-h-[44px] px-6\",\n                      \"btn-gradient text-white\",\n                      \"group-hover:scale-105 transition-transform\"\n                    )}\n                  >\n                    <Mail className=\"w-5 h-5 mr-2\" />\n                    Email Support\n                    <ArrowRight className=\"w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform\" />\n                  </Button>\n                </a>\n\n                {/* FAQ Link */}\n                <Link href=\"/faq\">\n                  <Button\n                    size=\"lg\"\n                    variant=\"outline\"\n                    className={cn(\n                      \"w-full sm:w-auto min-h-[44px] px-6\",\n                      \"hover:bg-primary/10 hover:border-primary/50\",\n                      \"group transition-all\"\n                    )}\n                    data-testid=\"button-view-faq\"\n                  >\n                    <HelpCircle className=\"w-5 h-5 mr-2\" />\n                    View FAQ\n                    <ArrowRight className=\"w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform\" />\n                  </Button>\n                </Link>\n\n                {/* Report Issue */}\n                <a\n                  href=\"mailto:altaftoolshub@gmail.com?subject=Issue%20Report%20-%20AltafToolsHub\"\n                  className=\"group\"\n                  aria-label=\"Report an issue via email to support\"\n                  data-testid=\"link-report-issue\"\n                >\n                  <Button\n                    size=\"lg\"\n                    variant=\"outline\"\n                    className={cn(\n                      \"w-full sm:w-auto min-h-[44px] px-6\",\n                      \"hover:bg-red-500/10 hover:border-red-500/50 hover:text-red-600 dark:hover:text-red-400\",\n                      \"group transition-all\"\n                    )}\n                  >\n                    <Bug className=\"w-5 h-5 mr-2\" />\n                    Report Issue\n                    <ArrowRight className=\"w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform\" />\n                  </Button>\n                </a>\n              </motion.div>\n\n              {/* Additional Support Info */}\n              <motion.div\n                className=\"mt-8 pt-8 border-t border-border/50\"\n                initial={{ opacity: 0 }}\n                whileInView={{ opacity: 1 }}\n                viewport={{ once: true }}\n                transition={{ delay: 0.4 }}\n              >\n                <div className=\"flex flex-col sm:flex-row items-center justify-center gap-6 text-sm text-muted-foreground\">\n                  <div className=\"flex items-center gap-2\">\n                    <MessageCircle className=\"w-4 h-4 text-primary\" />\n                    <span>Average response time: <strong className=\"text-foreground\">24 hours</strong></span>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <Mail className=\"w-4 h-4 text-primary\" />\n                    <span>Email: <strong className=\"text-foreground\">altaftoolshub@gmail.com</strong></span>\n                  </div>\n                </div>\n              </motion.div>\n            </div>\n          </Card>\n        </motion.div>\n      </div>\n    </section>\n  );\n}","size_bytes":5878},"client/src/pages/blog.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Card } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { \n  Calendar, \n  Clock, \n  ArrowRight, \n  BookOpen,\n  TrendingUp,\n  FileText,\n  Shield,\n  Zap,\n  Users,\n  ChevronRight,\n  Tag\n} from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport { useSEO } from \"@/hooks/use-seo\";\nimport { ContactSupportSection } from \"@/components/contact-support\";\n\ninterface BlogPost {\n  id: string;\n  title: string;\n  excerpt: string;\n  category: string;\n  date: string;\n  readTime: string;\n  tags: string[];\n  featured?: boolean;\n  icon: React.ComponentType<{ className?: string }>;\n}\n\nconst blogPosts: BlogPost[] = [\n  {\n    id: \"ultimate-pdf-compression-guide\",\n    title: \"The Ultimate Guide to PDF Compression in 2025\",\n    excerpt: \"Learn how to reduce PDF file sizes by up to 90% while maintaining quality. Discover the best techniques for different use cases, from email attachments to web publishing.\",\n    category: \"PDF Tools\",\n    date: \"January 15, 2025\",\n    readTime: \"8 min read\",\n    tags: [\"PDF\", \"Compression\", \"File Size\", \"Tutorial\"],\n    featured: true,\n    icon: FileText\n  },\n  {\n    id: \"privacy-first-file-processing\",\n    title: \"Why Privacy-First File Processing Matters More Than Ever\",\n    excerpt: \"Explore the importance of client-side processing and how browser-based tools protect your sensitive documents from data breaches and unauthorized access.\",\n    category: \"Privacy & Security\",\n    date: \"January 12, 2025\",\n    readTime: \"6 min read\",\n    tags: [\"Privacy\", \"Security\", \"Client-Side\", \"Data Protection\"],\n    featured: true,\n    icon: Shield\n  },\n  {\n    id: \"image-to-pdf-best-practices\",\n    title: \"Converting Images to PDF: Best Practices and Tips\",\n    excerpt: \"Master the art of converting JPG, PNG, and other image formats to PDF. Learn about resolution, compression, and organization techniques for professional results.\",\n    category: \"Image Tools\",\n    date: \"January 10, 2025\",\n    readTime: \"5 min read\",\n    tags: [\"Images\", \"PDF\", \"Conversion\", \"Quality\"],\n    icon: FileText\n  },\n  {\n    id: \"qr-code-marketing-2025\",\n    title: \"QR Codes in 2025: Marketing Strategies That Work\",\n    excerpt: \"Discover how businesses are leveraging QR codes for contactless payments, digital menus, and customer engagement. Includes case studies and implementation tips.\",\n    category: \"QR Codes\",\n    date: \"January 8, 2025\",\n    readTime: \"7 min read\",\n    tags: [\"QR Codes\", \"Marketing\", \"Business\", \"Digital\"],\n    icon: Zap\n  },\n  {\n    id: \"optimize-pdfs-for-web\",\n    title: \"How to Optimize PDFs for Web Performance\",\n    excerpt: \"Speed up your website by properly optimizing PDF documents. Learn about file size reduction, lazy loading, and SEO best practices for PDF content.\",\n    category: \"Web Optimization\",\n    date: \"January 5, 2025\",\n    readTime: \"6 min read\",\n    tags: [\"SEO\", \"Web Performance\", \"PDF\", \"Optimization\"],\n    icon: TrendingUp\n  },\n  {\n    id: \"document-workflow-automation\",\n    title: \"Streamline Your Document Workflow with Browser Tools\",\n    excerpt: \"Save hours every week by automating repetitive document tasks. Learn how to batch process files and create efficient workflows without expensive software.\",\n    category: \"Productivity\",\n    date: \"January 3, 2025\",\n    readTime: \"5 min read\",\n    tags: [\"Productivity\", \"Automation\", \"Workflow\", \"Efficiency\"],\n    icon: Users\n  },\n  {\n    id: \"pdf-security-features\",\n    title: \"Understanding PDF Security: Encryption and Password Protection\",\n    excerpt: \"A comprehensive guide to PDF security features, including password protection, encryption levels, and best practices for protecting sensitive documents.\",\n    category: \"Security\",\n    date: \"December 28, 2024\",\n    readTime: \"7 min read\",\n    tags: [\"Security\", \"PDF\", \"Encryption\", \"Privacy\"],\n    icon: Shield\n  },\n  {\n    id: \"batch-file-processing\",\n    title: \"Batch Processing Files: Save Time with Bulk Operations\",\n    excerpt: \"Learn how to process multiple files simultaneously. Perfect for teams handling large volumes of documents, images, or data files.\",\n    category: \"Productivity\",\n    date: \"December 25, 2024\",\n    readTime: \"4 min read\",\n    tags: [\"Batch Processing\", \"Productivity\", \"Efficiency\", \"Tools\"],\n    icon: Zap\n  },\n  {\n    id: \"mobile-document-management\",\n    title: \"Mobile Document Management: Working on the Go\",\n    excerpt: \"Tips and tricks for managing documents on mobile devices. Learn about the best practices for file compression, sharing, and organization on smartphones.\",\n    category: \"Mobile\",\n    date: \"December 20, 2024\",\n    readTime: \"5 min read\",\n    tags: [\"Mobile\", \"Documents\", \"Productivity\", \"Tips\"],\n    icon: FileText\n  }\n];\n\nconst categories = [\n  { name: \"All Posts\", count: blogPosts.length },\n  { name: \"PDF Tools\", count: blogPosts.filter(p => p.category === \"PDF Tools\").length },\n  { name: \"Privacy & Security\", count: blogPosts.filter(p => p.category.includes(\"Security\")).length },\n  { name: \"Productivity\", count: blogPosts.filter(p => p.category === \"Productivity\").length },\n  { name: \"Web Optimization\", count: blogPosts.filter(p => p.category === \"Web Optimization\").length }\n];\n\nexport default function BlogPage() {\n  useSEO({\n    title: \"Blog - File Processing Tips & Tutorials | AltafToolsHub\",\n    description: \"Expert guides on PDF compression, image conversion, document security, and productivity tips. Learn how to process files efficiently with privacy-first tools.\",\n    path: \"/blog\",\n    keywords: \"blog, tutorials, pdf tips, file processing, document management, privacy tools, productivity\"\n  });\n\n  const featuredPosts = blogPosts.filter(post => post.featured);\n  const regularPosts = blogPosts.filter(post => !post.featured);\n\n  return (\n    <div className=\"min-h-screen\">\n      {/* Hero Section */}\n      <section className=\"py-12 lg:py-16 bg-gradient-to-b from-primary/5 via-background to-background\">\n        <div className=\"container-section\">\n          <motion.div\n            className=\"text-center max-w-3xl mx-auto\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n          >\n            <Badge className=\"mb-4 bg-primary/10 text-primary border-primary/30\">\n              <BookOpen className=\"w-3 h-3 mr-1\" />\n              Blog & Tutorials\n            </Badge>\n            <h1 className=\"text-3xl sm:text-4xl lg:text-5xl font-bold mb-4\">\n              Learn & Master <span className=\"gradient-text\">File Processing</span>\n            </h1>\n            <p className=\"text-lg text-muted-foreground\">\n              Expert tips, tutorials, and best practices for working with documents and files\n            </p>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Categories */}\n      <section className=\"py-8 border-b\">\n        <div className=\"container-section\">\n          <div className=\"flex flex-wrap items-center justify-center gap-3\">\n            {categories.map((category, index) => (\n              <motion.button\n                key={category.name}\n                initial={{ opacity: 0, y: 10 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: index * 0.05 }}\n                className=\"inline-flex items-center gap-2 px-4 py-2 rounded-lg bg-muted hover:bg-primary/10 hover:text-primary transition-colors\"\n                data-testid={`blog-category-${category.name.toLowerCase().replace(/\\s/g, '-')}`}\n              >\n                <span className=\"text-sm font-medium\">{category.name}</span>\n                <Badge variant=\"secondary\" className=\"text-xs\">\n                  {category.count}\n                </Badge>\n              </motion.button>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Featured Posts */}\n      {featuredPosts.length > 0 && (\n        <section className=\"py-12\">\n          <div className=\"container-section\">\n            <div className=\"mb-8\">\n              <h2 className=\"text-2xl font-bold mb-2\">Featured Articles</h2>\n              <p className=\"text-muted-foreground\">Popular guides and tutorials</p>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-12\">\n              {featuredPosts.map((post, index) => {\n                const Icon = post.icon;\n                return (\n                  <motion.article\n                    key={post.id}\n                    initial={{ opacity: 0, y: 20 }}\n                    whileInView={{ opacity: 1, y: 0 }}\n                    viewport={{ once: true }}\n                    transition={{ delay: index * 0.1 }}\n                  >\n                    <Card \n                      className=\"p-6 h-full hover:shadow-xl transition-all group cursor-pointer\"\n                      data-testid={`blog-featured-${post.id}`}\n                    >\n                      <div className=\"flex items-start gap-4 mb-4\">\n                        <div className=\"w-12 h-12 rounded-lg bg-primary/10 flex items-center justify-center flex-shrink-0\">\n                          <Icon className=\"w-6 h-6 text-primary\" />\n                        </div>\n                        <div className=\"flex-1\">\n                          <Badge variant=\"secondary\" className=\"mb-2\">\n                            {post.category}\n                          </Badge>\n                          <h3 className=\"text-xl font-semibold mb-2 group-hover:text-primary transition-colors line-clamp-2\">\n                            {post.title}\n                          </h3>\n                        </div>\n                      </div>\n\n                      <p className=\"text-muted-foreground mb-4 line-clamp-3\">\n                        {post.excerpt}\n                      </p>\n\n                      <div className=\"flex items-center justify-between text-sm text-muted-foreground\">\n                        <div className=\"flex items-center gap-4\">\n                          <span className=\"flex items-center gap-1\">\n                            <Calendar className=\"w-4 h-4\" />\n                            {post.date}\n                          </span>\n                          <span className=\"flex items-center gap-1\">\n                            <Clock className=\"w-4 h-4\" />\n                            {post.readTime}\n                          </span>\n                        </div>\n                        <ArrowRight className=\"w-4 h-4 text-primary opacity-0 group-hover:opacity-100 group-hover:translate-x-1 transition-all\" />\n                      </div>\n\n                      <div className=\"flex flex-wrap gap-2 mt-4\">\n                        {post.tags.map(tag => (\n                          <Badge key={tag} variant=\"outline\" className=\"text-xs\">\n                            <Tag className=\"w-3 h-3 mr-1\" />\n                            {tag}\n                          </Badge>\n                        ))}\n                      </div>\n                    </Card>\n                  </motion.article>\n                );\n              })}\n            </div>\n          </div>\n        </section>\n      )}\n\n      {/* Regular Posts */}\n      <section className=\"py-12 bg-muted/30\">\n        <div className=\"container-section\">\n          <div className=\"mb-8\">\n            <h2 className=\"text-2xl font-bold mb-2\">Latest Articles</h2>\n            <p className=\"text-muted-foreground\">Fresh content and tutorials</p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {regularPosts.map((post, index) => {\n              const Icon = post.icon;\n              return (\n                <motion.article\n                  key={post.id}\n                  initial={{ opacity: 0, y: 20 }}\n                  whileInView={{ opacity: 1, y: 0 }}\n                  viewport={{ once: true }}\n                  transition={{ delay: index * 0.05 }}\n                >\n                  <Card \n                    className=\"p-6 h-full hover:shadow-lg transition-all group cursor-pointer\"\n                    data-testid={`blog-post-${post.id}`}\n                  >\n                    <div className=\"flex items-center gap-2 mb-3\">\n                      <Icon className=\"w-5 h-5 text-primary\" />\n                      <Badge variant=\"outline\" className=\"text-xs\">\n                        {post.category}\n                      </Badge>\n                    </div>\n\n                    <h3 className=\"font-semibold text-lg mb-2 group-hover:text-primary transition-colors line-clamp-2\">\n                      {post.title}\n                    </h3>\n\n                    <p className=\"text-sm text-muted-foreground mb-4 line-clamp-3\">\n                      {post.excerpt}\n                    </p>\n\n                    <div className=\"flex items-center justify-between text-xs text-muted-foreground\">\n                      <span>{post.date}</span>\n                      <span className=\"flex items-center gap-1\">\n                        <Clock className=\"w-3 h-3\" />\n                        {post.readTime}\n                      </span>\n                    </div>\n\n                    <div className=\"flex items-center mt-4 text-primary opacity-0 group-hover:opacity-100 transition-opacity\">\n                      <span className=\"text-sm font-medium\">Read More</span>\n                      <ChevronRight className=\"w-4 h-4 ml-1 group-hover:translate-x-1 transition-transform\" />\n                    </div>\n                  </Card>\n                </motion.article>\n              );\n            })}\n          </div>\n\n          {/* Load More */}\n          <div className=\"text-center mt-12\">\n            <Button \n              size=\"lg\" \n              variant=\"outline\"\n              className=\"group\"\n              data-testid=\"button-load-more\"\n            >\n              Load More Articles\n              <ArrowRight className=\"w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform\" />\n            </Button>\n          </div>\n        </div>\n      </section>\n\n      {/* Newsletter CTA */}\n      <section className=\"py-12\">\n        <div className=\"container-section\">\n          <Card className=\"p-8 lg:p-12 bg-gradient-to-r from-primary/10 via-primary/5 to-background\">\n            <div className=\"text-center max-w-2xl mx-auto\">\n              <BookOpen className=\"w-12 h-12 text-primary mx-auto mb-4\" />\n              <h3 className=\"text-2xl font-bold mb-3\">Stay Updated</h3>\n              <p className=\"text-muted-foreground mb-6\">\n                Get the latest tips and tutorials delivered to your inbox\n              </p>\n              <div className=\"flex flex-col sm:flex-row gap-3 justify-center max-w-md mx-auto\">\n                <input\n                  type=\"email\"\n                  placeholder=\"Enter your email\"\n                  className=\"flex-1 px-4 py-2 rounded-lg border bg-background focus:outline-none focus:ring-2 focus:ring-primary\"\n                  data-testid=\"input-newsletter-email\"\n                />\n                <Button className=\"btn-gradient text-white\">\n                  Subscribe\n                </Button>\n              </div>\n              <p className=\"text-xs text-muted-foreground mt-4\">\n                We respect your privacy. Unsubscribe anytime.\n              </p>\n            </div>\n          </Card>\n        </div>\n      </section>\n\n      {/* Contact Support Section */}\n      <ContactSupportSection />\n    </div>\n  );\n}","size_bytes":15467},"client/src/pages/faq.tsx":{"content":"import { motion } from \"framer-motion\";\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/components/ui/accordion\";\nimport { Card } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { \n  Shield, \n  FileQuestion, \n  Zap, \n  HelpCircle,\n  Lock,\n  Globe,\n  Download,\n  Mail,\n  ChevronRight,\n  MessageSquare\n} from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport { useSEO, generateFAQSchema } from \"@/hooks/use-seo\";\nimport { ContactSupportSection } from \"@/components/contact-support\";\n\ninterface FAQCategory {\n  id: string;\n  title: string;\n  icon: React.ComponentType<{ className?: string }>;\n  questions: {\n    question: string;\n    answer: string;\n  }[];\n}\n\nconst faqCategories: FAQCategory[] = [\n  {\n    id: \"privacy-security\",\n    title: \"Privacy & Security\",\n    icon: Shield,\n    questions: [\n      {\n        question: \"Are my files really safe when using AltafToolsHub?\",\n        answer: \"Absolutely! Your files are 100% safe because they never leave your device. All processing happens directly in your browser using client-side JavaScript. We don't upload, store, or have access to any of your files. Once you close the browser tab, all traces of your files are gone.\"\n      },\n      {\n        question: \"Do you store or track my files?\",\n        answer: \"No, we never store or track your files. All file processing is done locally on your device. We don't use cookies to track files, and we don't have servers that store your documents. Your privacy is our top priority.\"\n      },\n      {\n        question: \"Can AltafToolsHub access my processed files?\",\n        answer: \"No, we cannot access your files at any point. The entire processing happens in your browser's memory. Even our own team cannot see what files you're working with. This is the beauty of client-side processing.\"\n      },\n      {\n        question: \"Is it safe to process sensitive documents?\",\n        answer: \"Yes, it's completely safe to process sensitive documents like contracts, financial statements, or personal information. Since files never leave your device and we can't access them, you maintain complete control and privacy over your sensitive data.\"\n      },\n      {\n        question: \"Do you comply with GDPR and privacy regulations?\",\n        answer: \"Yes, we fully comply with GDPR and other privacy regulations. Since we don't collect, store, or process any personal data on our servers, we exceed the requirements of most privacy laws. Your data stays on your device at all times.\"\n      }\n    ]\n  },\n  {\n    id: \"file-processing\",\n    title: \"File Processing\",\n    icon: FileQuestion,\n    questions: [\n      {\n        question: \"What file types are supported?\",\n        answer: \"We support a wide range of file types including PDF, JPG, PNG, GIF, BMP, TIFF, WEBP, DOC, DOCX, TXT, and more. Each tool specifies which file types it accepts. We're constantly adding support for new formats.\"\n      },\n      {\n        question: \"Is there a file size limit?\",\n        answer: \"There's no strict file size limit imposed by our tools since processing happens on your device. However, larger files (100MB+) may take longer to process depending on your device's capabilities. Your browser's memory is the only limitation.\"\n      },\n      {\n        question: \"Can I process multiple files at once?\",\n        answer: \"Yes, many of our tools support batch processing. You can select multiple files and process them simultaneously. The exact number depends on your device's capabilities and available memory.\"\n      },\n      {\n        question: \"Why is processing faster than other online tools?\",\n        answer: \"Our tools are faster because there's no upload or download time. Traditional online tools need to upload your file to a server, process it, and download it back. We skip all of that by processing everything locally on your device.\"\n      },\n      {\n        question: \"Do the tools work offline?\",\n        answer: \"Once a tool page is loaded, it can work offline since all processing happens in your browser. However, you need an internet connection to initially load the tool. After that, you can disconnect and continue working.\"\n      }\n    ]\n  },\n  {\n    id: \"technical\",\n    title: \"Technical Questions\",\n    icon: Zap,\n    questions: [\n      {\n        question: \"What browsers are supported?\",\n        answer: \"AltafToolsHub works on all modern browsers including Chrome (90+), Firefox (88+), Safari (14+), and Edge (90+). For the best experience, we recommend using the latest version of Chrome or Firefox.\"\n      },\n      {\n        question: \"Do I need to install any software?\",\n        answer: \"No installation required! All our tools run directly in your web browser. You don't need to download or install any software, plugins, or extensions. Just open the website and start using the tools immediately.\"\n      },\n      {\n        question: \"Why do some tools take time to load initially?\",\n        answer: \"Some tools need to load processing libraries when you first open them. These libraries enable advanced features like PDF manipulation or image processing. Once loaded, the tools work instantly. The libraries are cached for faster loading on repeat visits.\"\n      },\n      {\n        question: \"Can I use the tools on mobile devices?\",\n        answer: \"Yes, all our tools are fully responsive and work on mobile devices. However, some resource-intensive operations may perform better on desktop devices with more processing power and memory.\"\n      },\n      {\n        question: \"How accurate are the compression tools?\",\n        answer: \"Our compression tools use advanced algorithms to achieve target file sizes while maintaining optimal quality. The PDF compressor, for example, can accurately hit specific size targets (like 100KB or 500KB) within a 5% margin while preserving readability.\"\n      }\n    ]\n  },\n  {\n    id: \"general\",\n    title: \"General Questions\",\n    icon: HelpCircle,\n    questions: [\n      {\n        question: \"Is AltafToolsHub really free?\",\n        answer: \"Yes, AltafToolsHub is 100% free to use. All tools are available without any payment, subscription, or registration. We don't have premium tiers or hidden costs. Every feature you see is free forever.\"\n      },\n      {\n        question: \"Do I need to create an account?\",\n        answer: \"No account needed! You can use all our tools immediately without signing up, logging in, or providing any personal information. We believe in making tools accessible to everyone without barriers.\"\n      },\n      {\n        question: \"How many tools are available?\",\n        answer: \"We currently offer 60+ tools and are constantly adding more. Our tools cover PDF processing, image conversion, QR code generation, text utilities, calculators, and many other categories.\"\n      },\n      {\n        question: \"Can I suggest new tools or features?\",\n        answer: \"Absolutely! We love hearing from our users. Send your suggestions to support@altaftoolshub.com. We review all suggestions and prioritize tools that would benefit the most users.\"\n      },\n      {\n        question: \"Why choose AltafToolsHub over other online tools?\",\n        answer: \"AltafToolsHub offers unique advantages: 100% privacy (no uploads), faster processing (no server delays), no registration required, no file limits, no watermarks, and it's completely free. Plus, our tools work offline once loaded.\"\n      },\n      {\n        question: \"How can I report a bug or issue?\",\n        answer: \"If you encounter any issues, please email us at support@altaftoolshub.com with details about the problem, the tool you were using, and your browser information. We typically respond within 24 hours.\"\n      }\n    ]\n  }\n];\n\nconst allFAQs = faqCategories.flatMap(category => \n  category.questions.map(q => ({\n    question: q.question,\n    answer: q.answer\n  }))\n);\n\nexport default function FAQPage() {\n  const faqSchema = generateFAQSchema(allFAQs);\n\n  useSEO({\n    title: \"FAQ - Frequently Asked Questions | AltafToolsHub\",\n    description: \"Find answers to common questions about AltafToolsHub's privacy-first file tools. Learn about file safety, processing, technical requirements, and more.\",\n    path: \"/faq\",\n    keywords: \"faq, frequently asked questions, help, support, privacy tools, file safety, browser-based tools\",\n    structuredData: faqSchema\n  });\n\n  return (\n    <div className=\"min-h-screen\">\n      {/* Hero Section */}\n      <section className=\"py-12 lg:py-16 bg-gradient-to-b from-primary/5 via-background to-background\">\n        <div className=\"container-section\">\n          <motion.div\n            className=\"text-center max-w-3xl mx-auto\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n          >\n            <Badge className=\"mb-4 bg-primary/10 text-primary border-primary/30\">\n              <HelpCircle className=\"w-3 h-3 mr-1\" />\n              Help Center\n            </Badge>\n            <h1 className=\"text-3xl sm:text-4xl lg:text-5xl font-bold mb-4\">\n              Frequently Asked <span className=\"gradient-text\">Questions</span>\n            </h1>\n            <p className=\"text-lg text-muted-foreground\">\n              Everything you need to know about AltafToolsHub's privacy-first file tools\n            </p>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Quick Links */}\n      <section className=\"py-8 border-b\">\n        <div className=\"container-section\">\n          <div className=\"flex flex-wrap items-center justify-center gap-3\">\n            <span className=\"text-sm text-muted-foreground\">Quick Jump:</span>\n            {faqCategories.map((category) => {\n              const Icon = category.icon;\n              return (\n                <a\n                  key={category.id}\n                  href={`#${category.id}`}\n                  className=\"inline-flex items-center gap-2 px-4 py-2 rounded-lg bg-muted hover:bg-primary/10 hover:text-primary transition-colors\"\n                  data-testid={`faq-jump-${category.id}`}\n                >\n                  <Icon className=\"w-4 h-4\" />\n                  <span className=\"text-sm font-medium\">{category.title}</span>\n                </a>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* FAQ Categories */}\n      <section className=\"py-12\">\n        <div className=\"container-section\">\n          <div className=\"max-w-4xl mx-auto space-y-12\">\n            {faqCategories.map((category, categoryIndex) => {\n              const Icon = category.icon;\n              return (\n                <motion.div\n                  key={category.id}\n                  id={category.id}\n                  initial={{ opacity: 0, y: 20 }}\n                  whileInView={{ opacity: 1, y: 0 }}\n                  viewport={{ once: true }}\n                  transition={{ delay: categoryIndex * 0.1 }}\n                >\n                  <div className=\"flex items-center gap-3 mb-6\">\n                    <div className=\"w-10 h-10 rounded-lg bg-primary/10 flex items-center justify-center\">\n                      <Icon className=\"w-5 h-5 text-primary\" />\n                    </div>\n                    <h2 className=\"text-2xl font-bold\">{category.title}</h2>\n                    <Badge variant=\"secondary\" className=\"ml-auto\">\n                      {category.questions.length} questions\n                    </Badge>\n                  </div>\n\n                  <Card className=\"overflow-hidden\">\n                    <Accordion type=\"single\" collapsible className=\"w-full\">\n                      {category.questions.map((item, index) => (\n                        <AccordionItem\n                          key={index}\n                          value={`${category.id}-${index}`}\n                          className=\"border-b last:border-0\"\n                          data-testid={`faq-item-${category.id}-${index}`}\n                        >\n                          <AccordionTrigger className=\"px-6 py-4 hover:bg-muted/50 transition-colors text-left\">\n                            <span className=\"font-medium pr-4\">{item.question}</span>\n                          </AccordionTrigger>\n                          <AccordionContent className=\"px-6 pb-4\">\n                            <p className=\"text-muted-foreground leading-relaxed\">\n                              {item.answer}\n                            </p>\n                          </AccordionContent>\n                        </AccordionItem>\n                      ))}\n                    </Accordion>\n                  </Card>\n                </motion.div>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Additional Help Section */}\n      <section className=\"py-12 bg-muted/30\">\n        <div className=\"container-section\">\n          <Card className=\"p-8 text-center max-w-2xl mx-auto\">\n            <MessageSquare className=\"w-12 h-12 text-primary mx-auto mb-4\" />\n            <h3 className=\"text-2xl font-bold mb-3\">Can't find what you're looking for?</h3>\n            <p className=\"text-muted-foreground mb-6\">\n              Our support team is here to help with any questions not covered in the FAQ\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-3 justify-center\">\n              <a href=\"mailto:support@altaftoolshub.com\" data-testid=\"faq-email-button\">\n                <Button size=\"lg\" className=\"btn-gradient text-white\">\n                  <Mail className=\"w-4 h-4 mr-2\" />\n                  Email Support\n                </Button>\n              </a>\n              <Link href=\"/all-tools\">\n                <Button size=\"lg\" variant=\"outline\">\n                  <Globe className=\"w-4 h-4 mr-2\" />\n                  Browse Tools\n                </Button>\n              </Link>\n            </div>\n          </Card>\n        </div>\n      </section>\n\n      {/* Contact Support Section */}\n      <ContactSupportSection />\n    </div>\n  );\n}","size_bytes":14049},"client/src/pages/documentation.tsx":{"content":"import { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { \n  FileText, \n  Lock, \n  Image, \n  QrCode, \n  Scissors,\n  Layers,\n  RotateCw,\n  FileX,\n  Crop,\n  FileOutput,\n  FileDown,\n  ArrowLeft,\n  ChevronRight,\n  Shield,\n  Clock,\n  Globe,\n  Download,\n  Upload\n} from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport { useSEO } from \"@/hooks/use-seo\";\nimport { motion } from \"framer-motion\";\nimport { cn } from \"@/lib/utils\";\n\nconst toolCategories = [\n  {\n    name: \"PDF Compression\",\n    icon: FileDown,\n    tools: [\n      {\n        name: \"Compress PDF\",\n        href: \"/compress-pdf\",\n        icon: FileDown,\n        description: \"Reduce PDF file size while maintaining quality\",\n        steps: [\n          \"Upload your PDF file by clicking or dragging\",\n          \"Choose compression level (10KB to 5MB)\",\n          \"Click 'Compress PDF' to start processing\",\n          \"Download your compressed file instantly\"\n        ],\n        tips: [\n          \"Higher compression = smaller file but lower quality\",\n          \"Use 'Balanced' mode for optimal quality/size ratio\",\n          \"Files are processed locally in your browser\"\n        ]\n      }\n    ]\n  },\n  {\n    name: \"PDF Security\",\n    icon: Lock,\n    tools: [\n      {\n        name: \"Unlock PDF\",\n        href: \"/unlock-pdf\",\n        icon: Lock,\n        description: \"Remove password protection from PDFs\",\n        steps: [\n          \"Upload your password-protected PDF\",\n          \"Enter the PDF password you know\",\n          \"Click 'Unlock PDF' to remove protection\",\n          \"Download the unlocked file\"\n        ],\n        tips: [\n          \"You must know the password to unlock\",\n          \"Original file quality is preserved\",\n          \"Password never leaves your browser\"\n        ]\n      }\n    ]\n  },\n  {\n    name: \"PDF Conversion\",\n    icon: Image,\n    tools: [\n      {\n        name: \"JPG to PDF\",\n        href: \"/jpg-to-pdf\",\n        icon: Image,\n        description: \"Convert images to PDF documents\",\n        steps: [\n          \"Upload one or more image files\",\n          \"Arrange images in desired order\",\n          \"Set page size and orientation\",\n          \"Click 'Convert to PDF' and download\"\n        ],\n        tips: [\n          \"Supports JPG, PNG, GIF, WebP formats\",\n          \"Drag to reorder images\",\n          \"Combine multiple images into one PDF\"\n        ]\n      }\n    ]\n  },\n  {\n    name: \"PDF Organization\",\n    icon: Layers,\n    tools: [\n      {\n        name: \"Merge PDF\",\n        href: \"/merge-pdf\",\n        icon: FileText,\n        description: \"Combine multiple PDFs into one\",\n        steps: [\n          \"Upload multiple PDF files\",\n          \"Drag to arrange file order\",\n          \"Click 'Merge PDFs' to combine\",\n          \"Download the merged PDF\"\n        ],\n        tips: [\n          \"No limit on number of files\",\n          \"Preview before merging\",\n          \"Preserves all content and formatting\"\n        ]\n      },\n      {\n        name: \"Split PDF\",\n        href: \"/split-pdf\",\n        icon: Scissors,\n        description: \"Divide PDF into separate documents\",\n        steps: [\n          \"Upload your PDF file\",\n          \"Choose split method (ranges, single pages, fixed size)\",\n          \"Enter page ranges or size\",\n          \"Download split files individually or as ZIP\"\n        ],\n        tips: [\n          \"Use ranges like '1-5, 10-15'\",\n          \"Extract specific pages easily\",\n          \"Batch download available\"\n        ]\n      },\n      {\n        name: \"Organize PDF\",\n        href: \"/organize-pdf\",\n        icon: Layers,\n        description: \"Rearrange, rotate, and manage pages\",\n        steps: [\n          \"Upload your PDF file\",\n          \"Drag pages to reorder\",\n          \"Rotate, duplicate, or delete pages\",\n          \"Apply changes and download\"\n        ],\n        tips: [\n          \"Visual page thumbnails\",\n          \"Select multiple pages at once\",\n          \"Undo/redo support\"\n        ]\n      },\n      {\n        name: \"Rotate PDF\",\n        href: \"/rotate-pdf\",\n        icon: RotateCw,\n        description: \"Fix page orientation issues\",\n        steps: [\n          \"Upload your PDF file\",\n          \"Select pages to rotate\",\n          \"Choose rotation angle (90°, 180°, 270°)\",\n          \"Apply rotation and download\"\n        ],\n        tips: [\n          \"Rotate individual or all pages\",\n          \"Preview before applying\",\n          \"Fix scanned document orientation\"\n        ]\n      }\n    ]\n  },\n  {\n    name: \"PDF Editing\",\n    icon: Crop,\n    tools: [\n      {\n        name: \"Remove Pages\",\n        href: \"/remove-pages\",\n        icon: FileX,\n        description: \"Delete unwanted pages from PDF\",\n        steps: [\n          \"Upload your PDF file\",\n          \"Click pages to select for removal\",\n          \"Click 'Remove Pages' to process\",\n          \"Download the updated PDF\"\n        ],\n        tips: [\n          \"Visual page selection\",\n          \"Select multiple pages\",\n          \"Original file remains unchanged\"\n        ]\n      },\n      {\n        name: \"Crop PDF\",\n        href: \"/crop-pdf\",\n        icon: Crop,\n        description: \"Trim PDF page margins\",\n        steps: [\n          \"Upload your PDF file\",\n          \"Adjust crop area visually\",\n          \"Apply to all or specific pages\",\n          \"Download cropped PDF\"\n        ],\n        tips: [\n          \"Remove unwanted margins\",\n          \"Use preset sizes\",\n          \"Preview before applying\"\n        ]\n      },\n      {\n        name: \"Extract Pages\",\n        href: \"/extract-pages\",\n        icon: FileOutput,\n        description: \"Extract specific pages from PDF\",\n        steps: [\n          \"Upload your PDF file\",\n          \"Enter page numbers to extract\",\n          \"Click 'Extract Pages'\",\n          \"Download extracted pages as new PDF\"\n        ],\n        tips: [\n          \"Use ranges: 1-5, 8, 10-15\",\n          \"Creates new PDF with selected pages\",\n          \"Original PDF unchanged\"\n        ]\n      }\n    ]\n  },\n  {\n    name: \"Other Tools\",\n    icon: QrCode,\n    tools: [\n      {\n        name: \"QR Code Generator\",\n        href: \"/qr-generator\",\n        icon: QrCode,\n        description: \"Create QR codes for any content\",\n        steps: [\n          \"Enter text, URL, or data\",\n          \"Customize QR code appearance\",\n          \"Set size and error correction\",\n          \"Download as PNG or SVG\"\n        ],\n        tips: [\n          \"Supports WiFi, vCard, SMS formats\",\n          \"Add logo or custom colors\",\n          \"High-resolution output\"\n        ]\n      },\n      {\n        name: \"Password Generator\",\n        href: \"/password-generator\",\n        icon: Shield,\n        description: \"Generate secure passwords\",\n        steps: [\n          \"Set password length\",\n          \"Choose character types\",\n          \"Generate password\",\n          \"Copy to clipboard\"\n        ],\n        tips: [\n          \"Use 16+ characters for security\",\n          \"Include symbols and numbers\",\n          \"Generate multiple at once\"\n        ]\n      }\n    ]\n  }\n];\n\nexport default function Documentation() {\n  useSEO({\n    title: \"Documentation - Complete Guide to All Tools | AltafToolsHub\",\n    description: \"Comprehensive documentation and user guides for all PDF tools and utilities. Learn how to compress, merge, split, convert, and edit PDFs with step-by-step instructions.\",\n    path: \"/documentation\",\n    keywords: \"pdf tools documentation, user guide, how to use pdf tools, pdf help, tool instructions, pdf tutorial\",\n    ogImage: \"https://www.altaftoolshub.com/og-documentation.png\",\n    additionalMetaTags: [\n      { name: \"robots\", content: \"index, follow\" },\n      { property: \"article:section\", content: \"Documentation\" }\n    ]\n  });\n\n  return (\n    <div className=\"min-h-screen\">\n      {/* Hero Section */}\n      <section className=\"bg-gradient-to-b from-primary/5 via-primary/5 to-transparent py-16 relative overflow-hidden\">\n        <div className=\"container-section\">\n          <Link href=\"/\">\n            <Button \n              variant=\"ghost\" \n              className=\"mb-8 gap-2 hover:gap-3 transition-all\"\n            >\n              <ArrowLeft className=\"w-4 h-4\" />\n              Back to Home\n            </Button>\n          </Link>\n          \n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5 }}\n          >\n            <h1 className=\"text-4xl sm:text-5xl font-bold mb-4\">\n              Documentation & Guides\n            </h1>\n            <p className=\"text-xl text-muted-foreground max-w-3xl\">\n              Complete step-by-step guides for using all our PDF tools and utilities. \n              Learn how to process your files efficiently and securely.\n            </p>\n            \n            <div className=\"flex flex-wrap items-center gap-4 mt-8\">\n              <Badge variant=\"secondary\" className=\"px-3 py-1\">\n                <Shield className=\"w-3 h-3 mr-1\" />\n                100% Browser-Based\n              </Badge>\n              <Badge variant=\"secondary\" className=\"px-3 py-1\">\n                <Clock className=\"w-3 h-3 mr-1\" />\n                No Registration Required\n              </Badge>\n              <Badge variant=\"secondary\" className=\"px-3 py-1\">\n                <Globe className=\"w-3 h-3 mr-1\" />\n                Works Offline\n              </Badge>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* General Guidelines */}\n      <section className=\"py-12 border-b\">\n        <div className=\"container-section\">\n          <Card className=\"p-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">General Guidelines</h2>\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              <div>\n                <h3 className=\"font-semibold mb-2 flex items-center gap-2\">\n                  <Upload className=\"w-4 h-4 text-primary\" />\n                  File Upload\n                </h3>\n                <p className=\"text-muted-foreground mb-4\">\n                  All tools support drag-and-drop or click-to-upload. Files are processed \n                  entirely in your browser and never sent to any server.\n                </p>\n              </div>\n              \n              <div>\n                <h3 className=\"font-semibold mb-2 flex items-center gap-2\">\n                  <Shield className=\"w-4 h-4 text-primary\" />\n                  Privacy & Security\n                </h3>\n                <p className=\"text-muted-foreground mb-4\">\n                  Your files remain on your device. All processing uses WebAssembly and \n                  JavaScript in your browser. No data is stored or transmitted.\n                </p>\n              </div>\n              \n              <div>\n                <h3 className=\"font-semibold mb-2 flex items-center gap-2\">\n                  <Download className=\"w-4 h-4 text-primary\" />\n                  Download Results\n                </h3>\n                <p className=\"text-muted-foreground mb-4\">\n                  Processed files download automatically. Your browser may ask where to \n                  save. Original files remain unchanged.\n                </p>\n              </div>\n              \n              <div>\n                <h3 className=\"font-semibold mb-2 flex items-center gap-2\">\n                  <Globe className=\"w-4 h-4 text-primary\" />\n                  Offline Support\n                </h3>\n                <p className=\"text-muted-foreground mb-4\">\n                  Once loaded, most tools work offline. Only initial page load requires \n                  internet connection to download the processing libraries.\n                </p>\n              </div>\n            </div>\n          </Card>\n        </div>\n      </section>\n\n      {/* Tool Categories */}\n      <section className=\"py-12\">\n        <div className=\"container-section\">\n          <h2 className=\"text-3xl font-bold mb-8\">Tool Documentation</h2>\n          \n          <Tabs defaultValue={toolCategories[0].name} className=\"w-full\">\n            <TabsList className=\"w-full flex-wrap h-auto p-1 gap-1\">\n              {toolCategories.map((category) => {\n                const Icon = category.icon;\n                return (\n                  <TabsTrigger \n                    key={category.name} \n                    value={category.name}\n                    className=\"data-[state=active]:bg-primary data-[state=active]:text-primary-foreground\"\n                  >\n                    <Icon className=\"w-4 h-4 mr-2\" />\n                    {category.name}\n                  </TabsTrigger>\n                );\n              })}\n            </TabsList>\n            \n            {toolCategories.map((category) => (\n              <TabsContent key={category.name} value={category.name} className=\"mt-8\">\n                <div className=\"grid gap-6\">\n                  {category.tools.map((tool) => {\n                    const ToolIcon = tool.icon;\n                    return (\n                      <Card key={tool.name} className=\"p-6\">\n                        <div className=\"flex items-start gap-4 mb-4\">\n                          <div className=\"p-3 bg-primary/10 rounded-lg\">\n                            <ToolIcon className=\"w-6 h-6 text-primary\" />\n                          </div>\n                          <div className=\"flex-1\">\n                            <h3 className=\"text-xl font-semibold mb-1\">{tool.name}</h3>\n                            <p className=\"text-muted-foreground mb-4\">{tool.description}</p>\n                            \n                            <div className=\"grid md:grid-cols-2 gap-6\">\n                              <div>\n                                <h4 className=\"font-semibold mb-3\">How to Use:</h4>\n                                <ol className=\"space-y-2\">\n                                  {tool.steps.map((step, index) => (\n                                    <li key={index} className=\"flex gap-2\">\n                                      <span className=\"flex-shrink-0 w-6 h-6 bg-primary/10 text-primary rounded-full flex items-center justify-center text-sm font-semibold\">\n                                        {index + 1}\n                                      </span>\n                                      <span className=\"text-sm text-muted-foreground\">{step}</span>\n                                    </li>\n                                  ))}\n                                </ol>\n                              </div>\n                              \n                              <div>\n                                <h4 className=\"font-semibold mb-3\">Tips & Best Practices:</h4>\n                                <ul className=\"space-y-2\">\n                                  {tool.tips.map((tip, index) => (\n                                    <li key={index} className=\"flex gap-2\">\n                                      <ChevronRight className=\"w-4 h-4 text-primary flex-shrink-0 mt-0.5\" />\n                                      <span className=\"text-sm text-muted-foreground\">{tip}</span>\n                                    </li>\n                                  ))}\n                                </ul>\n                              </div>\n                            </div>\n                            \n                            <Link href={tool.href}>\n                              <Button className=\"mt-6\">\n                                Try {tool.name}\n                                <ChevronRight className=\"w-4 h-4 ml-2\" />\n                              </Button>\n                            </Link>\n                          </div>\n                        </div>\n                      </Card>\n                    );\n                  })}\n                </div>\n              </TabsContent>\n            ))}\n          </Tabs>\n        </div>\n      </section>\n\n      {/* FAQ Section */}\n      <section className=\"py-12 bg-muted/30\">\n        <div className=\"container-section\">\n          <Card className=\"p-8\">\n            <h2 className=\"text-2xl font-bold mb-6\">Frequently Asked Questions</h2>\n            \n            <div className=\"space-y-4\">\n              <div>\n                <h3 className=\"font-semibold mb-2\">Are my files safe?</h3>\n                <p className=\"text-muted-foreground\">\n                  Yes, absolutely. All file processing happens directly in your browser using \n                  client-side JavaScript. Your files never leave your device and we have no \n                  access to them.\n                </p>\n              </div>\n              \n              <div>\n                <h3 className=\"font-semibold mb-2\">Is there a file size limit?</h3>\n                <p className=\"text-muted-foreground\">\n                  No strict limits, but very large files (&gt;100MB) may be slow to process \n                  depending on your device's capabilities. The processing happens locally, \n                  so it depends on your browser and device memory.\n                </p>\n              </div>\n              \n              <div>\n                <h3 className=\"font-semibold mb-2\">Do I need to create an account?</h3>\n                <p className=\"text-muted-foreground\">\n                  No, all tools are completely free and require no registration. Just visit \n                  the tool page and start using it immediately.\n                </p>\n              </div>\n              \n              <div>\n                <h3 className=\"font-semibold mb-2\">Can I use the tools offline?</h3>\n                <p className=\"text-muted-foreground\">\n                  Once the tool page loads, most features work offline since processing is \n                  done locally. You need internet only for the initial page load.\n                </p>\n              </div>\n              \n              <div>\n                <h3 className=\"font-semibold mb-2\">What browsers are supported?</h3>\n                <p className=\"text-muted-foreground\">\n                  Modern versions of Chrome, Firefox, Safari, and Edge are fully supported. \n                  We recommend using the latest browser version for best performance.\n                </p>\n              </div>\n            </div>\n            \n            <Link href=\"/faq\">\n              <Button variant=\"outline\" className=\"mt-6\">\n                View All FAQs\n                <ChevronRight className=\"w-4 h-4 ml-2\" />\n              </Button>\n            </Link>\n          </Card>\n        </div>\n      </section>\n\n      {/* Support Section */}\n      <section className=\"py-12\">\n        <div className=\"container-section\">\n          <Card className=\"p-8 bg-gradient-to-br from-primary/5 via-background to-primary/10\">\n            <div className=\"text-center\">\n              <h2 className=\"text-2xl font-bold mb-4\">Need More Help?</h2>\n              <p className=\"text-muted-foreground mb-6 max-w-2xl mx-auto\">\n                If you couldn't find what you're looking for or need assistance with a specific \n                use case, our support team is here to help.\n              </p>\n              <a href=\"mailto:altaftoolshub@gmail.com?subject=Documentation%20Help%20Request\">\n                <Button size=\"lg\">\n                  Contact Support\n                  <ChevronRight className=\"w-4 h-4 ml-2\" />\n                </Button>\n              </a>\n            </div>\n          </Card>\n        </div>\n      </section>\n    </div>\n  );\n}","size_bytes":19452}},"version":1}